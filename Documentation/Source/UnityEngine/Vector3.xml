<?xml version="1.0"?>
<Type Name="Vector3" FullName="UnityEngine.Vector3">
  <TypeSignature Language="C#" Value="public struct Vector3"/>
  <AssemblyInfo>
    <AssemblyName>UnityEngine</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces/>
  <Docs>
    <summary>Representation of 3D vectors and points.</summary>
    <remarks>(Read Only).</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector3 (float x, float y);"/>
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Single"/>
        <Parameter Name="y" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>Creates a new vector with given x, y, z components.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector3 (float x, float y, float z);"/>
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Single"/>
        <Parameter Name="y" Type="System.Single"/>
        <Parameter Name="z" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>Creates a new vector with given x, y, z components.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Angle">
      <MemberSignature Language="C#" Value="public static float Angle (UnityEngine.Vector3 from, UnityEngine.Vector3 to);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="UnityEngine.Vector3"/>
        <Parameter Name="to" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="from">To be added.</param>
        <param name="to">To be added.</param>
        <summary>Returns the angle in degrees between from and to.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AngleBetween">
      <MemberSignature Language="C#" Value="public static float AngleBetween (UnityEngine.Vector3 from, UnityEngine.Vector3 to);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Vector3.Angle instead. AngleBetween uses radians instead of degrees and was deprecated for this reason")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="UnityEngine.Vector3"/>
        <Parameter Name="to" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="from">To be added.</param>
        <param name="to">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="back">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 back { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cross">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 Cross (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lhs" Type="UnityEngine.Vector3"/>
        <Parameter Name="rhs" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="lhs">To be added.</param>
        <param name="rhs">To be added.</param>
        <summary>Cross Product of two vectors.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distance">
      <MemberSignature Language="C#" Value="public static float Distance (UnityEngine.Vector3 a, UnityEngine.Vector3 b);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="UnityEngine.Vector3"/>
        <Parameter Name="b" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>Returns the distance between a and b.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dot">
      <MemberSignature Language="C#" Value="public static float Dot (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lhs" Type="UnityEngine.Vector3"/>
        <Parameter Name="rhs" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="lhs">To be added.</param>
        <param name="rhs">To be added.</param>
        <summary>Dot Product of two vectors.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="down">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 down { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object"/>
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exclude">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 Exclude (UnityEngine.Vector3 excludeThis, UnityEngine.Vector3 fromThat);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="excludeThis" Type="UnityEngine.Vector3"/>
        <Parameter Name="fromThat" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="excludeThis">To be added.</param>
        <param name="fromThat">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="forward">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 forward { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shorthand for writing Vector3(0, 0, 1)</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="fwd">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 fwd { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Vector3.forward instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public float this[int index] { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32"/>
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="kEpsilon">
      <MemberSignature Language="C#" Value="public const float kEpsilon = 1E-05;"/>
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>1E-05</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="left">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 left { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lerp">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 Lerp (UnityEngine.Vector3 from, UnityEngine.Vector3 to, float t);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="UnityEngine.Vector3"/>
        <Parameter Name="to" Type="UnityEngine.Vector3"/>
        <Parameter Name="t" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="from">To be added.</param>
        <param name="to">To be added.</param>
        <param name="t">To be added.</param>
        <summary>Linearly interpolates between two vectors.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="magnitude">
      <MemberSignature Language="C#" Value="public float magnitude { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the length of this vector (Read Only).</summary>
        <value>To be added.</value>
        <remarks>(Read Only).</remarks>
      </Docs>
    </Member>
    <Member MemberName="Magnitude">
      <MemberSignature Language="C#" Value="public static float Magnitude (UnityEngine.Vector3 a);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 Max (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lhs" Type="UnityEngine.Vector3"/>
        <Parameter Name="rhs" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="lhs">To be added.</param>
        <param name="rhs">To be added.</param>
        <summary>Returns a vector that is made from the largest components of two vectors.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 Min (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lhs" Type="UnityEngine.Vector3"/>
        <Parameter Name="rhs" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="lhs">To be added.</param>
        <param name="rhs">To be added.</param>
        <summary>Returns a vector that is made from the smallest components of two vectors.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public void Normalize ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Makes this vector have a <see cref="P:UnityEngine.magnitude" /> of 1.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 Normalize (UnityEngine.Vector3 value);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>Makes this vector have a <see cref="P:UnityEngine.magnitude" /> of 1.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="normalized">
      <MemberSignature Language="C#" Value="public UnityEngine.Vector3 normalized { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this vector with a <see cref="P:UnityEngine.magnitude" /> of 1 (Read Only).</summary>
        <value>To be added.</value>
        <remarks>(Read Only).</remarks>
      </Docs>
    </Member>
    <Member MemberName="one">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 one { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shorthand for writing Vector3(1, 1, 1)</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 op_Addition (UnityEngine.Vector3 a, UnityEngine.Vector3 b);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="UnityEngine.Vector3"/>
        <Parameter Name="b" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>Adds two vectors.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 op_Division (UnityEngine.Vector3 a, float d);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="UnityEngine.Vector3"/>
        <Parameter Name="d" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="d">To be added.</param>
        <summary>Divides a vector by a number.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lhs" Type="UnityEngine.Vector3"/>
        <Parameter Name="rhs" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="lhs">To be added.</param>
        <param name="rhs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lhs" Type="UnityEngine.Vector3"/>
        <Parameter Name="rhs" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="lhs">To be added.</param>
        <param name="rhs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 op_Multiply (float d, UnityEngine.Vector3 a);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Single"/>
        <Parameter Name="a" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <param name="a">To be added.</param>
        <summary>Multiplies a vector by a number.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 op_Multiply (UnityEngine.Vector3 a, float d);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="UnityEngine.Vector3"/>
        <Parameter Name="d" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="d">To be added.</param>
        <summary>Multiplies a vector by a number.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 op_Subtraction (UnityEngine.Vector3 a, UnityEngine.Vector3 b);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="UnityEngine.Vector3"/>
        <Parameter Name="b" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>Subtracts one vector from another.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 op_UnaryNegation (UnityEngine.Vector3 a);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrthoNormalize">
      <MemberSignature Language="C#" Value="public static void OrthoNormalize (ref UnityEngine.Vector3 normal, ref UnityEngine.Vector3 tangent);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normal" Type="UnityEngine.Vector3&amp;" RefType="ref"/>
        <Parameter Name="tangent" Type="UnityEngine.Vector3&amp;" RefType="ref"/>
      </Parameters>
      <Docs>
        <param name="normal">To be added.</param>
        <param name="tangent">To be added.</param>
        <summary>Makes vectors normalized and orthogonal to each other.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrthoNormalize">
      <MemberSignature Language="C#" Value="public static void OrthoNormalize (ref UnityEngine.Vector3 normal, ref UnityEngine.Vector3 tangent, ref UnityEngine.Vector3 binormal);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normal" Type="UnityEngine.Vector3&amp;" RefType="ref"/>
        <Parameter Name="tangent" Type="UnityEngine.Vector3&amp;" RefType="ref"/>
        <Parameter Name="binormal" Type="UnityEngine.Vector3&amp;" RefType="ref"/>
      </Parameters>
      <Docs>
        <param name="normal">To be added.</param>
        <param name="tangent">To be added.</param>
        <param name="binormal">To be added.</param>
        <summary>Makes vectors normalized and orthogonal to each other.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 Project (UnityEngine.Vector3 vector, UnityEngine.Vector3 onNormal);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="UnityEngine.Vector3"/>
        <Parameter Name="onNormal" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="vector">To be added.</param>
        <param name="onNormal">To be added.</param>
        <summary>Projects a vector onto another vector.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reflect">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 Reflect (UnityEngine.Vector3 inDirection, UnityEngine.Vector3 inNormal);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inDirection" Type="UnityEngine.Vector3"/>
        <Parameter Name="inNormal" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="inDirection">To be added.</param>
        <param name="inNormal">To be added.</param>
        <summary>Reflects the vector along the normal.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="right">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 right { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shorthand for writing Vector3(1, 0, 0)</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTowards">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 RotateTowards (UnityEngine.Vector3 from, UnityEngine.Vector3 to, float maxRadiansDelta, float maxMagnitudeDelta);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="UnityEngine.Vector3"/>
        <Parameter Name="to" Type="UnityEngine.Vector3"/>
        <Parameter Name="maxRadiansDelta" Type="System.Single"/>
        <Parameter Name="maxMagnitudeDelta" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="from">To be added.</param>
        <param name="to">To be added.</param>
        <param name="maxRadiansDelta">To be added.</param>
        <param name="maxMagnitudeDelta">To be added.</param>
        <summary>Rotates a vector current towards target.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (UnityEngine.Vector3 scale);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <summary>Multiplies every component of this vector by the same component of scale.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 Scale (UnityEngine.Vector3 a, UnityEngine.Vector3 b);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="UnityEngine.Vector3"/>
        <Parameter Name="b" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>Multiplies every component of this vector by the same component of scale.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slerp">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 Slerp (UnityEngine.Vector3 from, UnityEngine.Vector3 to, float t);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="UnityEngine.Vector3"/>
        <Parameter Name="to" Type="UnityEngine.Vector3"/>
        <Parameter Name="t" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="from">To be added.</param>
        <param name="to">To be added.</param>
        <param name="t">To be added.</param>
        <summary>Spherically interpolates between two vectors.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="sqrMagnitude">
      <MemberSignature Language="C#" Value="public float sqrMagnitude { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the squared length of this vector (Read Only).</summary>
        <value>To be added.</value>
        <remarks>(Read Only).</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqrMagnitude">
      <MemberSignature Language="C#" Value="public static float SqrMagnitude (UnityEngine.Vector3 a);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Returns a nicely formatted string for this vector.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="up">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 up { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shorthand for writing Vector3(0, 1, 0)</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="x">
      <MemberSignature Language="C#" Value="public float x;"/>
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>X component of the vector.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="y">
      <MemberSignature Language="C#" Value="public float y;"/>
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Y component of the vector.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="z">
      <MemberSignature Language="C#" Value="public float z;"/>
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Z component of the vector.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="zero">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 zero { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shorthand for writing Vector3(0, 0, 0)</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>