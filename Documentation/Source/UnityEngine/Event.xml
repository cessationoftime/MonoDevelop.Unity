<?xml version="1.0"?>
<Type Name="Event" FullName="UnityEngine.Event">
  <TypeSignature Language="C#" Value="public class Event"/>
  <AssemblyInfo>
    <AssemblyName>UnityEngine</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces/>
  <Docs>
    <summary>Types of modifier key that can be active during a keystroke event.</summary>
    <remarks>See Also: <see cref="T:UnityEngine.Event" />.&#xD;Shift key&#xD;Control key&#xD;Alt key&#xD;Command key (Mac)&#xD;Num lock key&#xD;Caps lock key&#xD;Function key&#xD;A UnityGUI event.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Event ();"/>
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters/>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Event (UnityEngine.Event other);"/>
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="UnityEngine.Event"/>
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="alt">
      <MemberSignature Language="C#" Value="public bool alt { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is Alt/Option key held down? (Read Only)</summary>
        <value>To be added.</value>
        <remarks>(Read Only)</remarks>
      </Docs>
    </Member>
    <Member MemberName="button">
      <MemberSignature Language="C#" Value="public int button { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Which mouse button was pressed.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="camera">
      <MemberSignature Language="C#" Value="public IntPtr camera { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="capsLock">
      <MemberSignature Language="C#" Value="public bool capsLock { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is Caps Lock on? (Read Only)</summary>
        <value>To be added.</value>
        <remarks>(Read Only)</remarks>
      </Docs>
    </Member>
    <Member MemberName="character">
      <MemberSignature Language="C#" Value="public char character { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The character typed.</summary>
        <value>To be added.</value>
        <remarks>See Also: <see cref="P:UnityEngine.Event.keyCode" />.&#xD;&#xD;  &#xD;    &#xD;      &#xD;        &#xD;	 &lt;span class="cSelect-Selected"&gt;JavaScript&#xD;	 &#xD;		JavaScript&#xD;		C#&#xD;		Boo&#xD;	 &#xD;      &#xD;    &#xD;    &#xD;  &#xD;&lt;span class="hl-keyword"&gt;function &lt;span class="hl-operator"&gt;OnGUI() {    &lt;span class="hl-keyword"&gt;var e : Event = <see cref="P:UnityEngine.Event.current" />;    &lt;span class="hl-keyword"&gt;if (e.isKey) {        <see cref="P:UnityEngine.Debug.Log" />(&lt;span class="hl-string"&gt;"Detected character: " + e.character);    }}&lt;p class="details"&gt;&#xD;using UnityEngine;using System.Collections;&lt;span class="hl-keyword"&gt;public &lt;span class="hl-keyword"&gt;class example : <see cref="T:UnityEngine.MonoBehaviour" /> {    &lt;span class="hl-keyword"&gt;void &lt;span class="hl-operator"&gt;OnGUI() {        Event e = <see cref="P:UnityEngine.Event.current" />;        &lt;span class="hl-keyword"&gt;if (e.isKey)            <see cref="P:UnityEngine.Debug.Log" />(&lt;span class="hl-string"&gt;"Detected character: " + e.character);            }}&lt;p class="details"&gt;&#xD;&lt;span class="hl-keyword"&gt;import UnityEngine&lt;span class="hl-keyword"&gt;import System.Collections&lt;span class="hl-keyword"&gt;class example(<see cref="T:UnityEngine.MonoBehaviour" />):    def &lt;span class="hl-operator"&gt;OnGUI():        e as Event = <see cref="P:UnityEngine.Event.current" />        &lt;span class="hl-keyword"&gt;if e.isKey:            <see cref="P:UnityEngine.Debug.Log" />(('Detected character: ' + e.character))&lt;p class="details"&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="clickCount">
      <MemberSignature Language="C#" Value="public int clickCount { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>How many consecutive mouse clicks have we received.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="command">
      <MemberSignature Language="C#" Value="public bool command { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is Command/Windows key held down? (Read Only)</summary>
        <value>To be added.</value>
        <remarks>(Read Only)</remarks>
      </Docs>
    </Member>
    <Member MemberName="commandName">
      <MemberSignature Language="C#" Value="public string commandName { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of an ExecuteCommand or ValidateCommand Event</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="control">
      <MemberSignature Language="C#" Value="public bool control { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is Control key held down? (Read Only)</summary>
        <value>To be added.</value>
        <remarks>(Read Only)</remarks>
      </Docs>
    </Member>
    <Member MemberName="current">
      <MemberSignature Language="C#" Value="public static UnityEngine.Event current { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Event</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current event that's being processed right now.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="delta">
      <MemberSignature Language="C#" Value="public UnityEngine.Vector2 delta { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The relative movement of the mouse compared to last event.</summary>
        <value>To be added.</value>
        <remarks>See Also: <see cref="P:UnityEngine.Event.mousePosition" />.&#xD;&#xD;  &#xD;    &#xD;      &#xD;        &#xD;	 &lt;span class="cSelect-Selected"&gt;JavaScript&#xD;	 &#xD;		JavaScript&#xD;		C#&#xD;		Boo&#xD;	 &#xD;      &#xD;    &#xD;    &#xD;  &#xD;&lt;span class="hl-comment"&gt;// Move the scroll wheel to determine&lt;span class="hl-comment"&gt;&lt;span class="hl-comment"&gt;// the X &amp;amp; Y scrolling amount.&lt;span class="hl-comment"&gt;&lt;span class="hl-keyword"&gt;function &lt;span class="hl-operator"&gt;OnGUI() {    &lt;span class="hl-keyword"&gt;var e : Event = <see cref="P:UnityEngine.Event.current" />;    &lt;span class="hl-keyword"&gt;if (e.isMouse) {        <see cref="P:UnityEngine.Debug.Log" />(e.delta);    }}&lt;p class="details"&gt;&#xD;using UnityEngine;using System.Collections;&lt;span class="hl-keyword"&gt;public &lt;span class="hl-keyword"&gt;class example : <see cref="T:UnityEngine.MonoBehaviour" /> {    &lt;span class="hl-keyword"&gt;void &lt;span class="hl-operator"&gt;OnGUI() {        Event e = <see cref="P:UnityEngine.Event.current" />;        &lt;span class="hl-keyword"&gt;if (e.isMouse)            <see cref="P:UnityEngine.Debug.Log" />(e.delta);            }}&lt;p class="details"&gt;&#xD;&lt;span class="hl-keyword"&gt;import UnityEngine&lt;span class="hl-keyword"&gt;import System.Collections&lt;span class="hl-keyword"&gt;class example(<see cref="T:UnityEngine.MonoBehaviour" />):    def &lt;span class="hl-operator"&gt;OnGUI():        e as Event = <see cref="P:UnityEngine.Event.current" />        &lt;span class="hl-keyword"&gt;if e.isMouse:            <see cref="P:UnityEngine.Debug.Log" />(e.delta)&lt;p class="details"&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object"/>
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="functionKey">
      <MemberSignature Language="C#" Value="public bool functionKey { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is the current keypress a function key? (Read Only)</summary>
        <value>To be added.</value>
        <remarks>(Read Only)</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeForControl">
      <MemberSignature Language="C#" Value="public UnityEngine.EventType GetTypeForControl (int controlID);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.EventType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlID" Type="System.Int32"/>
      </Parameters>
      <Docs>
        <param name="controlID">To be added.</param>
        <summary>Get a filtered event type for a give control ID.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="isKey">
      <MemberSignature Language="C#" Value="public bool isKey { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is this event a keyboard event? (Read Only)</summary>
        <value>To be added.</value>
        <remarks>(Read Only)</remarks>
      </Docs>
    </Member>
    <Member MemberName="isMouse">
      <MemberSignature Language="C#" Value="public bool isMouse { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is this event a mouse event? (Read Only)</summary>
        <value>To be added.</value>
        <remarks>(Read Only)</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardEvent">
      <MemberSignature Language="C#" Value="public static UnityEngine.Event KeyboardEvent (string key);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Event</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>Create a keyboard event.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="keyCode">
      <MemberSignature Language="C#" Value="public UnityEngine.KeyCode keyCode { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.KeyCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The raw key code for keyboard events.</summary>
        <value>To be added.</value>
        <remarks>See Also: <see cref="P:UnityEngine.Event.character" />.&#xD;&#xD;  &#xD;    &#xD;      &#xD;        &#xD;	 &lt;span class="cSelect-Selected"&gt;JavaScript&#xD;	 &#xD;		JavaScript&#xD;		C#&#xD;		Boo&#xD;	 &#xD;      &#xD;    &#xD;    &#xD;  &#xD;&lt;span class="hl-comment"&gt;// Detects keys pressed and prints their keycode&lt;span class="hl-comment"&gt;&lt;span class="hl-keyword"&gt;function &lt;span class="hl-operator"&gt;OnGUI() {    &lt;span class="hl-keyword"&gt;var e : Event = <see cref="P:UnityEngine.Event.current" />;    &lt;span class="hl-keyword"&gt;if (e.isKey) {        <see cref="P:UnityEngine.Debug.Log" />(&lt;span class="hl-string"&gt;"Detected key code: " + e.keyCode);    }}&lt;p class="details"&gt;&#xD;using UnityEngine;using System.Collections;&lt;span class="hl-keyword"&gt;public &lt;span class="hl-keyword"&gt;class example : <see cref="T:UnityEngine.MonoBehaviour" /> {    &lt;span class="hl-keyword"&gt;void &lt;span class="hl-operator"&gt;OnGUI() {        Event e = <see cref="P:UnityEngine.Event.current" />;        &lt;span class="hl-keyword"&gt;if (e.isKey)            <see cref="P:UnityEngine.Debug.Log" />(&lt;span class="hl-string"&gt;"Detected key code: " + e.keyCode);            }}&lt;p class="details"&gt;&#xD;&lt;span class="hl-keyword"&gt;import UnityEngine&lt;span class="hl-keyword"&gt;import System.Collections&lt;span class="hl-keyword"&gt;class example(<see cref="T:UnityEngine.MonoBehaviour" />):    def &lt;span class="hl-operator"&gt;OnGUI():        e as Event = <see cref="P:UnityEngine.Event.current" />        &lt;span class="hl-keyword"&gt;if e.isKey:            <see cref="P:UnityEngine.Debug.Log" />(('Detected key code: ' + e.keyCode))&lt;p class="details"&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="mousePosition">
      <MemberSignature Language="C#" Value="public UnityEngine.Vector2 mousePosition { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The mouse position.</summary>
        <value>To be added.</value>
        <remarks>See Also: <see cref="P:UnityEngine.Event.delta" />.&#xD;&#xD;  &#xD;    &#xD;      &#xD;        &#xD;	 &lt;span class="cSelect-Selected"&gt;JavaScript&#xD;	 &#xD;		JavaScript&#xD;		C#&#xD;		Boo&#xD;	 &#xD;      &#xD;    &#xD;    &#xD;  &#xD;&lt;span class="hl-comment"&gt;// Prints the current mouse position&lt;span class="hl-comment"&gt;&lt;span class="hl-keyword"&gt;function &lt;span class="hl-operator"&gt;OnGUI () {    &lt;span class="hl-keyword"&gt;var e : Event = <see cref="P:UnityEngine.Event.current" />;    <see cref="P:UnityEngine.Debug.Log" />(e.mousePosition);}&lt;p class="details"&gt;&#xD;using UnityEngine;using System.Collections;&lt;span class="hl-keyword"&gt;public &lt;span class="hl-keyword"&gt;class example : <see cref="T:UnityEngine.MonoBehaviour" /> {    &lt;span class="hl-keyword"&gt;void &lt;span class="hl-operator"&gt;OnGUI() {        Event e = <see cref="P:UnityEngine.Event.current" />;        <see cref="P:UnityEngine.Debug.Log" />(e.mousePosition);    }}&lt;p class="details"&gt;&#xD;&lt;span class="hl-keyword"&gt;import UnityEngine&lt;span class="hl-keyword"&gt;import System.Collections&lt;span class="hl-keyword"&gt;class example(<see cref="T:UnityEngine.MonoBehaviour" />):    def &lt;span class="hl-operator"&gt;OnGUI():        e as Event = <see cref="P:UnityEngine.Event.current" />        <see cref="P:UnityEngine.Debug.Log" />(e.mousePosition)&lt;p class="details"&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="mouseRay">
      <MemberSignature Language="C#" Value="public UnityEngine.Ray mouseRay { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Ray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="numeric">
      <MemberSignature Language="C#" Value="public bool numeric { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is the current keypress on the numeric keyboard? (Read Only)</summary>
        <value>To be added.</value>
        <remarks>(Read Only)</remarks>
      </Docs>
    </Member>
    <Member MemberName="pressure">
      <MemberSignature Language="C#" Value="public float pressure { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="rawType">
      <MemberSignature Language="C#" Value="public UnityEngine.EventType rawType { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.EventType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="shift">
      <MemberSignature Language="C#" Value="public bool shift { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is Shift held down? (Read Only)</summary>
        <value>To be added.</value>
        <remarks>(Read Only)</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="type">
      <MemberSignature Language="C#" Value="public UnityEngine.EventType type { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.EventType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The type of event.</summary>
        <value>To be added.</value>
        <remarks>See Also: <see cref="T:UnityEngine.EventType" />.&#xD;&#xD;  &#xD;    &#xD;      &#xD;        &#xD;	 &lt;span class="cSelect-Selected"&gt;JavaScript&#xD;	 &#xD;		JavaScript&#xD;		C#&#xD;		Boo&#xD;	 &#xD;      &#xD;    &#xD;    &#xD;  &#xD;&lt;span class="hl-comment"&gt;// Prints the current event detected.&lt;span class="hl-comment"&gt;&lt;span class="hl-keyword"&gt;function &lt;span class="hl-operator"&gt;OnGUI () {    <see cref="P:UnityEngine.Debug.Log" />(&lt;span class="hl-string"&gt;"Current event detected: " + <see cref="P:UnityEngine.Event.current" />.type);}&lt;p class="details"&gt;&#xD;using UnityEngine;using System.Collections;&lt;span class="hl-keyword"&gt;public &lt;span class="hl-keyword"&gt;class example : <see cref="T:UnityEngine.MonoBehaviour" /> {    &lt;span class="hl-keyword"&gt;void &lt;span class="hl-operator"&gt;OnGUI() {        <see cref="P:UnityEngine.Debug.Log" />(&lt;span class="hl-string"&gt;"Current event detected: " + <see cref="P:UnityEngine.Event.current" />.type);    }}&lt;p class="details"&gt;&#xD;&lt;span class="hl-keyword"&gt;import UnityEngine&lt;span class="hl-keyword"&gt;import System.Collections&lt;span class="hl-keyword"&gt;class example(<see cref="T:UnityEngine.MonoBehaviour" />):    def &lt;span class="hl-operator"&gt;OnGUI():        <see cref="P:UnityEngine.Debug.Log" />(('Current event detected: ' + <see cref="P:UnityEngine.Event.current" />.type))&lt;p class="details"&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public void Use ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Use this event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>