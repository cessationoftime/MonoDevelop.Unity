<?xml version="1.0"?>
<Type Name="LensFlare" FullName="UnityEngine.LensFlare">
  <TypeSignature Language="C#" Value="public class LensFlare : UnityEngine.Behaviour"/>
  <AssemblyInfo>
    <AssemblyName>UnityEngine</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>UnityEngine.Behaviour</BaseTypeName>
  </Base>
  <Interfaces/>
  <Docs>
    <summary>Script interface for a <see cref="T:UnityEngine.Lens flare component" />.</summary>
    <remarks>(Read Only). (null if there is none attached)</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LensFlare ();"/>
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters/>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="brightness">
      <MemberSignature Language="C#" Value="public float brightness { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The strength of the flare.</summary>
        <value>To be added.</value>
        <remarks>See Also: <see cref="T:UnityEngine.Lens flare component" />, <see cref="T:UnityEngine.flare assets" />.&#xD;&#xD;  &#xD;    &#xD;      &#xD;        &#xD;	 &lt;span class="cSelect-Selected"&gt;JavaScript&#xD;	 &#xD;		JavaScript&#xD;		C#&#xD;		Boo&#xD;	 &#xD;      &#xD;    &#xD;    &#xD;  &#xD;&lt;span class="hl-comment"&gt;// Increments the strenght of the Lensflare lf when the <see cref="T:UnityEngine.Transform" /> tr&lt;span class="hl-comment"&gt;&lt;span class="hl-comment"&gt;// gets closer to the Lens flare&lt;span class="hl-comment"&gt;&lt;span class="hl-keyword"&gt;var lf : LensFlare;&lt;span class="hl-keyword"&gt;var tr : <see cref="T:UnityEngine.Transform" />;&lt;span class="hl-keyword"&gt;function &lt;span class="hl-operator"&gt;Update() {    lf.brightness = 1/<see cref="P:UnityEngine.Vector3.Distance" />(lf.transform.position, tr.position);}&lt;p class="details"&gt;&#xD;using UnityEngine;using System.Collections;&lt;span class="hl-keyword"&gt;public &lt;span class="hl-keyword"&gt;class example : <see cref="T:UnityEngine.MonoBehaviour" /> {    &lt;span class="hl-keyword"&gt;public LensFlare lf;    &lt;span class="hl-keyword"&gt;public <see cref="T:UnityEngine.Transform" /> tr;    &lt;span class="hl-keyword"&gt;void &lt;span class="hl-operator"&gt;Update() {        lf.brightness = 1 / <see cref="P:UnityEngine.Vector3.Distance" />(lf.transform.position, tr.position);    }}&lt;p class="details"&gt;&#xD;&lt;span class="hl-keyword"&gt;import UnityEngine&lt;span class="hl-keyword"&gt;import System.Collections&lt;span class="hl-keyword"&gt;class example(<see cref="T:UnityEngine.MonoBehaviour" />):    &lt;span class="hl-keyword"&gt;public lf as LensFlare    &lt;span class="hl-keyword"&gt;public tr as <see cref="T:UnityEngine.Transform" />    def &lt;span class="hl-operator"&gt;Update():        lf.brightness = (1 / <see cref="P:UnityEngine.Vector3.Distance" />(lf.transform.position, tr.position))&lt;p class="details"&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="color">
      <MemberSignature Language="C#" Value="public UnityEngine.Color color { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The color of the flare.</summary>
        <value>To be added.</value>
        <remarks>See Also: <see cref="T:UnityEngine.Lens flare component" />, <see cref="T:UnityEngine.flare assets" />.&#xD;&#xD;  &#xD;    &#xD;      &#xD;        &#xD;	 &lt;span class="cSelect-Selected"&gt;JavaScript&#xD;	 &#xD;		JavaScript&#xD;		C#&#xD;		Boo&#xD;	 &#xD;      &#xD;    &#xD;    &#xD;  &#xD;&lt;span class="hl-comment"&gt;// Changes the color of the LensFlare (on a gray scale) from black to white.&lt;span class="hl-comment"&gt;&lt;span class="hl-comment"&gt;// More white when tr gets near the LensFlare, and darker when the transform goes away.&lt;span class="hl-comment"&gt;&lt;span class="hl-comment"&gt;// Remember that the color works on elements that have adlight color enabled.&lt;span class="hl-comment"&gt;&lt;span class="hl-keyword"&gt;var lf : LensFlare;&lt;span class="hl-keyword"&gt;var tr : <see cref="T:UnityEngine.Transform" />;&lt;span class="hl-keyword"&gt;function &lt;span class="hl-operator"&gt;Update() {    &lt;span class="hl-keyword"&gt;var percentage : &lt;span class="hl-datatype"&gt;float = 1/<see cref="P:UnityEngine.Vector3.Distance" />(lf.transform.position, tr.position);    lf.color = <see cref="T:UnityEngine.Color" />(percentage, percentage, percentage);}&lt;p class="details"&gt;&#xD;using UnityEngine;using System.Collections;&lt;span class="hl-keyword"&gt;public &lt;span class="hl-keyword"&gt;class example : <see cref="T:UnityEngine.MonoBehaviour" /> {    &lt;span class="hl-keyword"&gt;public LensFlare lf;    &lt;span class="hl-keyword"&gt;public <see cref="T:UnityEngine.Transform" /> tr;    &lt;span class="hl-keyword"&gt;void &lt;span class="hl-operator"&gt;Update() {        &lt;span class="hl-datatype"&gt;float percentage = 1 / <see cref="P:UnityEngine.Vector3.Distance" />(lf.transform.position, tr.position);        lf.color = &lt;span class="hl-keyword"&gt;new <see cref="T:UnityEngine.Color" />(percentage, percentage, percentage);    }}&lt;p class="details"&gt;&#xD;&lt;span class="hl-keyword"&gt;import UnityEngine&lt;span class="hl-keyword"&gt;import System.Collections&lt;span class="hl-keyword"&gt;class example(<see cref="T:UnityEngine.MonoBehaviour" />):    &lt;span class="hl-keyword"&gt;public lf as LensFlare    &lt;span class="hl-keyword"&gt;public tr as <see cref="T:UnityEngine.Transform" />    def &lt;span class="hl-operator"&gt;Update():        percentage as single = (1 / <see cref="P:UnityEngine.Vector3.Distance" />(lf.transform.position, tr.position))        lf.color = <see cref="T:UnityEngine.Color" />(percentage, percentage, percentage)&lt;p class="details"&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="flare">
      <MemberSignature Language="C#" Value="public UnityEngine.Flare flare { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Flare</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:UnityEngine.flare asset" /> to use.</summary>
        <value>To be added.</value>
        <remarks>See Also: <see cref="T:UnityEngine.Lens flare component" />, <see cref="T:UnityEngine.flare assets" />.&#xD;&#xD;  &#xD;    &#xD;      &#xD;        &#xD;	 &lt;span class="cSelect-Selected"&gt;JavaScript&#xD;	 &#xD;		JavaScript&#xD;		C#&#xD;		Boo&#xD;	 &#xD;      &#xD;    &#xD;    &#xD;  &#xD;&lt;span class="hl-comment"&gt;// Assigns the flare of lf to this transforms light flare&lt;span class="hl-comment"&gt;&lt;span class="hl-keyword"&gt;var lf : LensFlare;light.flare = lf.flare;&lt;p class="details"&gt;&#xD;using UnityEngine;using System.Collections;&lt;span class="hl-keyword"&gt;public &lt;span class="hl-keyword"&gt;class example : <see cref="T:UnityEngine.MonoBehaviour" /> {    &lt;span class="hl-keyword"&gt;public LensFlare lf;    &lt;span class="hl-keyword"&gt;void Example() {        light.flare = lf.flare;    }}&lt;p class="details"&gt;&#xD;&lt;span class="hl-keyword"&gt;import UnityEngine&lt;span class="hl-keyword"&gt;import System.Collections&lt;span class="hl-keyword"&gt;class example(<see cref="T:UnityEngine.MonoBehaviour" />):    &lt;span class="hl-keyword"&gt;public lf as LensFlare    def Example():        light.flare = lf.flare&lt;p class="details"&gt;</remarks>
      </Docs>
    </Member>
  </Members>
</Type>