<?xml version="1.0"?>
<Type Name="Quaternion" FullName="UnityEngine.Quaternion">
  <TypeSignature Language="C#" Value="public struct Quaternion"/>
  <AssemblyInfo>
    <AssemblyName>UnityEngine</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces/>
  <Docs>
    <summary>Quaternions are used to represent rotations.</summary>
    <remarks>(Read Only). This quaternion corresponds to "no rotation": the object</remarks>
    <since version="2.5.1"/>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Quaternion (float x, float y, float z, float w);"/>
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Single"/>
        <Parameter Name="y" Type="System.Single"/>
        <Parameter Name="z" Type="System.Single"/>
        <Parameter Name="w" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>Constructs new Quaternion with given x,y,z,w components.</summary>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="Angle">
      <MemberSignature Language="C#" Value="public static float Angle (UnityEngine.Quaternion a, UnityEngine.Quaternion b);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="UnityEngine.Quaternion"/>
        <Parameter Name="b" Type="UnityEngine.Quaternion"/>
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>Returns the angle in degrees between two rotations a and b.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="AngleAxis">
      <MemberSignature Language="C#" Value="public static UnityEngine.Quaternion AngleAxis (float angle, UnityEngine.Vector3 axis);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single"/>
        <Parameter Name="axis" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="angle">To be added.</param>
        <param name="axis">To be added.</param>
        <summary>Creates a rotation which rotates angle degrees around axis.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="AxisAngle">
      <MemberSignature Language="C#" Value="public static UnityEngine.Quaternion AxisAngle (UnityEngine.Vector3 axis, float angle);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Quaternion.AngleAxis instead. This function was deprecated because it uses radians instad of degrees")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="UnityEngine.Vector3"/>
        <Parameter Name="angle" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="axis">To be added.</param>
        <param name="angle">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="Dot">
      <MemberSignature Language="C#" Value="public static float Dot (UnityEngine.Quaternion a, UnityEngine.Quaternion b);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="UnityEngine.Quaternion"/>
        <Parameter Name="b" Type="UnityEngine.Quaternion"/>
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>The dot product between two rotations.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object"/>
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="Euler">
      <MemberSignature Language="C#" Value="public static UnityEngine.Quaternion Euler (UnityEngine.Vector3 euler);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="euler" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="euler">To be added.</param>
        <summary>Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis (in that order).</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="Euler">
      <MemberSignature Language="C#" Value="public static UnityEngine.Quaternion Euler (float x, float y, float z);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single"/>
        <Parameter Name="y" Type="System.Single"/>
        <Parameter Name="z" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis (in that order).</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="eulerAngles">
      <MemberSignature Language="C#" Value="public UnityEngine.Vector3 eulerAngles { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the euler angle representation of the rotation.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="EulerAngles">
      <MemberSignature Language="C#" Value="public static UnityEngine.Quaternion EulerAngles (UnityEngine.Vector3 euler);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Quaternion.Euler instead. This function was deprecated because it uses radians instad of degrees")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="euler" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="euler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="EulerAngles">
      <MemberSignature Language="C#" Value="public static UnityEngine.Quaternion EulerAngles (float x, float y, float z);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Quaternion.Euler instead. This function was deprecated because it uses radians instad of degrees")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single"/>
        <Parameter Name="y" Type="System.Single"/>
        <Parameter Name="z" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="EulerRotation">
      <MemberSignature Language="C#" Value="public static UnityEngine.Quaternion EulerRotation (UnityEngine.Vector3 euler);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Quaternion.Euler instead. This function was deprecated because it uses radians instad of degrees")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="euler" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="euler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="EulerRotation">
      <MemberSignature Language="C#" Value="public static UnityEngine.Quaternion EulerRotation (float x, float y, float z);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Quaternion.Euler instead. This function was deprecated because it uses radians instad of degrees")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single"/>
        <Parameter Name="y" Type="System.Single"/>
        <Parameter Name="z" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="FromToRotation">
      <MemberSignature Language="C#" Value="public static UnityEngine.Quaternion FromToRotation (UnityEngine.Vector3 fromDirection, UnityEngine.Vector3 toDirection);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromDirection" Type="UnityEngine.Vector3"/>
        <Parameter Name="toDirection" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="fromDirection">To be added.</param>
        <param name="toDirection">To be added.</param>
        <summary>Creates a rotation which rotates from fromDirection to toDirection.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="identity">
      <MemberSignature Language="C#" Value="public static UnityEngine.Quaternion identity { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Quaternion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The identity rotation (Read Only). This quaternion corresponds to "no rotation": the object</summary>
        <value>To be added.</value>
        <remarks>(Read Only). This quaternion corresponds to "no rotation": the object</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="Inverse">
      <MemberSignature Language="C#" Value="public static UnityEngine.Quaternion Inverse (UnityEngine.Quaternion rotation);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rotation" Type="UnityEngine.Quaternion"/>
      </Parameters>
      <Docs>
        <param name="rotation">To be added.</param>
        <summary>Returns the Inverse of rotation.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public float this[int index] { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32"/>
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="kEpsilon">
      <MemberSignature Language="C#" Value="public const float kEpsilon = 1E-06;"/>
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>1E-06</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="Lerp">
      <MemberSignature Language="C#" Value="public static UnityEngine.Quaternion Lerp (UnityEngine.Quaternion a, UnityEngine.Quaternion b, float t);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="UnityEngine.Quaternion"/>
        <Parameter Name="b" Type="UnityEngine.Quaternion"/>
        <Parameter Name="t" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <param name="t">To be added.</param>
        <summary>Interpolates from towards to by t and normalizes the result afterwards.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="LookRotation">
      <MemberSignature Language="C#" Value="public static UnityEngine.Quaternion LookRotation (UnityEngine.Vector3 forward);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forward" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="forward">To be added.</param>
        <summary>Creates a rotation that looks along forward with the the head upwards along upwards</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="LookRotation">
      <MemberSignature Language="C#" Value="public static UnityEngine.Quaternion LookRotation (UnityEngine.Vector3 forward, UnityEngine.Vector3 upwards);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forward" Type="UnityEngine.Vector3"/>
        <Parameter Name="upwards" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="forward">To be added.</param>
        <param name="upwards">To be added.</param>
        <summary>Creates a rotation that looks along forward with the the head upwards along upwards</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (UnityEngine.Quaternion lhs, UnityEngine.Quaternion rhs);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lhs" Type="UnityEngine.Quaternion"/>
        <Parameter Name="rhs" Type="UnityEngine.Quaternion"/>
      </Parameters>
      <Docs>
        <param name="lhs">To be added.</param>
        <param name="rhs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (UnityEngine.Quaternion lhs, UnityEngine.Quaternion rhs);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lhs" Type="UnityEngine.Quaternion"/>
        <Parameter Name="rhs" Type="UnityEngine.Quaternion"/>
      </Parameters>
      <Docs>
        <param name="lhs">To be added.</param>
        <param name="rhs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static UnityEngine.Quaternion op_Multiply (UnityEngine.Quaternion lhs, UnityEngine.Quaternion rhs);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lhs" Type="UnityEngine.Quaternion"/>
        <Parameter Name="rhs" Type="UnityEngine.Quaternion"/>
      </Parameters>
      <Docs>
        <param name="lhs">To be added.</param>
        <param name="rhs">To be added.</param>
        <summary>Combines rotations lhs and rhs.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 op_Multiply (UnityEngine.Quaternion rotation, UnityEngine.Vector3 point);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rotation" Type="UnityEngine.Quaternion"/>
        <Parameter Name="point" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="rotation">To be added.</param>
        <param name="point">To be added.</param>
        <summary>Combines rotations lhs and rhs.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="SetAxisAngle">
      <MemberSignature Language="C#" Value="public void SetAxisAngle (UnityEngine.Vector3 axis, float angle);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Quaternion.AngleAxis instead. This function was deprecated because it uses radians instad of degrees")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="UnityEngine.Vector3"/>
        <Parameter Name="angle" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="axis">To be added.</param>
        <param name="angle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="SetEulerAngles">
      <MemberSignature Language="C#" Value="public void SetEulerAngles (UnityEngine.Vector3 euler);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Quaternion.Euler instead. This function was deprecated because it uses radians instad of degrees")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="euler" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="euler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="SetEulerAngles">
      <MemberSignature Language="C#" Value="public void SetEulerAngles (float x, float y, float z);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Quaternion.Euler instead. This function was deprecated because it uses radians instad of degrees")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single"/>
        <Parameter Name="y" Type="System.Single"/>
        <Parameter Name="z" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="SetEulerRotation">
      <MemberSignature Language="C#" Value="public void SetEulerRotation (UnityEngine.Vector3 euler);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Quaternion.Euler instead. This function was deprecated because it uses radians instad of degrees")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="euler" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="euler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="SetEulerRotation">
      <MemberSignature Language="C#" Value="public void SetEulerRotation (float x, float y, float z);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Quaternion.Euler instead. This function was deprecated because it uses radians instad of degrees")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single"/>
        <Parameter Name="y" Type="System.Single"/>
        <Parameter Name="z" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="SetFromToRotation">
      <MemberSignature Language="C#" Value="public void SetFromToRotation (UnityEngine.Vector3 fromDirection, UnityEngine.Vector3 toDirection);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromDirection" Type="UnityEngine.Vector3"/>
        <Parameter Name="toDirection" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="fromDirection">To be added.</param>
        <param name="toDirection">To be added.</param>
        <summary>Creates a rotation which rotates from fromDirection to toDirection.</summary>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="SetLookRotation">
      <MemberSignature Language="C#" Value="public void SetLookRotation (UnityEngine.Vector3 view);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <summary>Creates a rotation that looks along forward with the the head upwards along upwards</summary>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="SetLookRotation">
      <MemberSignature Language="C#" Value="public void SetLookRotation (UnityEngine.Vector3 view, UnityEngine.Vector3 up);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="UnityEngine.Vector3"/>
        <Parameter Name="up" Type="UnityEngine.Vector3"/>
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="up">To be added.</param>
        <summary>Creates a rotation that looks along forward with the the head upwards along upwards</summary>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="Slerp">
      <MemberSignature Language="C#" Value="public static UnityEngine.Quaternion Slerp (UnityEngine.Quaternion from, UnityEngine.Quaternion to, float t);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="UnityEngine.Quaternion"/>
        <Parameter Name="to" Type="UnityEngine.Quaternion"/>
        <Parameter Name="t" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="from">To be added.</param>
        <param name="to">To be added.</param>
        <param name="t">To be added.</param>
        <summary>Spherically interpolates from towards to by t.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="ToAngleAxis">
      <MemberSignature Language="C#" Value="public void ToAngleAxis (out float angle, out UnityEngine.Vector3 axis);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single&amp;" RefType="out"/>
        <Parameter Name="axis" Type="UnityEngine.Vector3&amp;" RefType="out"/>
      </Parameters>
      <Docs>
        <param name="angle">To be added.</param>
        <param name="axis">To be added.</param>
        <summary>Converts a rotation to angle-axis representation.</summary>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="ToAxisAngle">
      <MemberSignature Language="C#" Value="public void ToAxisAngle (out UnityEngine.Vector3 axis, out float angle);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Quaternion.ToAngleAxis instead. This function was deprecated because it uses radians instad of degrees")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="UnityEngine.Vector3&amp;" RefType="out"/>
        <Parameter Name="angle" Type="System.Single&amp;" RefType="out"/>
      </Parameters>
      <Docs>
        <param name="axis">To be added.</param>
        <param name="angle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="ToEuler">
      <MemberSignature Language="C#" Value="public UnityEngine.Vector3 ToEuler ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Quaternion.eulerAngles instead. This function was deprecated because it uses radians instad of degrees")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="ToEulerAngles">
      <MemberSignature Language="C#" Value="public UnityEngine.Vector3 ToEulerAngles ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Quaternion.eulerAngles instead. This function was deprecated because it uses radians instad of degrees")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="ToEulerAngles">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 ToEulerAngles (UnityEngine.Quaternion rotation);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Quaternion.eulerAngles instead. This function was deprecated because it uses radians instad of degrees")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rotation" Type="UnityEngine.Quaternion"/>
      </Parameters>
      <Docs>
        <param name="rotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Returns a nicely formatted string of the Quaternion</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="w">
      <MemberSignature Language="C#" Value="public float w;"/>
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W component of the Quaternion. Don't modify this directly unless you know quaternions inside out.</summary>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="x">
      <MemberSignature Language="C#" Value="public float x;"/>
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>X component of the Quaternion. Don't modify this directly unless you know quaternions inside out.</summary>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="y">
      <MemberSignature Language="C#" Value="public float y;"/>
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Y component of the Quaternion. Don't modify this directly unless you know quaternions inside out.</summary>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
    <Member MemberName="z">
      <MemberSignature Language="C#" Value="public float z;"/>
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Z component of the Quaternion. Don't modify this directly unless you know quaternions inside out.</summary>
        <remarks>To be added.</remarks>
        <since version="2.5.1"/>
      </Docs>
    </Member>
  </Members>
  <Attributes>
    <Attribute>
      <AttributeName>System.Reflection.DefaultMember("Item")</AttributeName>
    </Attribute>
  </Attributes>
</Type>