<?xml version="1.0"?>
<Type Name="EditorUtility" FullName="UnityEditor.EditorUtility">
  <TypeSignature Language="C#" Value="public sealed class EditorUtility"/>
  <AssemblyInfo>
    <AssemblyName>UnityEditor</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces/>
  <Docs>
    <summary>Editor utility functions.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorUtility ();"/>
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters/>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildResourceFile">
      <MemberSignature Language="C#" Value="public static bool BuildResourceFile (UnityEngine.Object[] selection, string pathName);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use BuildPipeline.BuildAssetBundle instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selection" Type="UnityEngine.Object[]"/>
        <Parameter Name="pathName" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="selection">To be added.</param>
        <param name="pathName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearProgressBar">
      <MemberSignature Language="C#" Value="public static void ClearProgressBar ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Removes progress bar.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneComponent">
      <MemberSignature Language="C#" Value="public static UnityEngine.Component CloneComponent (UnityEngine.Component c);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Component</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="UnityEngine.Component"/>
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <summary>Duplicate a component.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectDeepHierarchy">
      <MemberSignature Language="C#" Value="public static UnityEngine.Object[] CollectDeepHierarchy (UnityEngine.Object[] roots);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roots" Type="UnityEngine.Object[]"/>
      </Parameters>
      <Docs>
        <param name="roots">To be added.</param>
        <summary>Calculates and returns a list of all assets the assets listed in roots depend on.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectDependencies">
      <MemberSignature Language="C#" Value="public static UnityEngine.Object[] CollectDependencies (UnityEngine.Object[] roots);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roots" Type="UnityEngine.Object[]"/>
      </Parameters>
      <Docs>
        <param name="roots">To be added.</param>
        <summary>Calculates and returns a list of all assets the assets listed in roots depend on.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileCSharp">
      <MemberSignature Language="C#" Value="public static string[] CompileCSharp (string[] sources, string[] references, string[] defines, string outputFile);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sources" Type="System.String[]"/>
        <Parameter Name="references" Type="System.String[]"/>
        <Parameter Name="defines" Type="System.String[]"/>
        <Parameter Name="outputFile" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="sources">To be added.</param>
        <param name="references">To be added.</param>
        <param name="defines">To be added.</param>
        <param name="outputFile">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressTexture">
      <MemberSignature Language="C#" Value="public static void CompressTexture (UnityEngine.Texture2D texture, UnityEngine.TextureFormat format, int quality);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="UnityEngine.Texture2D"/>
        <Parameter Name="format" Type="UnityEngine.TextureFormat"/>
        <Parameter Name="quality" Type="System.Int32"/>
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <param name="format">To be added.</param>
        <param name="quality">To be added.</param>
        <summary>Compress a texture.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressTexture">
      <MemberSignature Language="C#" Value="public static void CompressTexture (UnityEngine.Texture2D texture, UnityEngine.TextureFormat format, UnityEngine.TextureCompressionQuality quality);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="UnityEngine.Texture2D"/>
        <Parameter Name="format" Type="UnityEngine.TextureFormat"/>
        <Parameter Name="quality" Type="UnityEngine.TextureCompressionQuality"/>
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <param name="format">To be added.</param>
        <param name="quality">To be added.</param>
        <summary>Compress a texture.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopySerialized">
      <MemberSignature Language="C#" Value="public static void CopySerialized (UnityEngine.Object source, UnityEngine.Object dest);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="UnityEngine.Object"/>
        <Parameter Name="dest" Type="UnityEngine.Object"/>
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="dest">To be added.</param>
        <summary>Copy all settings of a Unity <see cref="T:UnityEditor.Object" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEmptyPrefab">
      <MemberSignature Language="C#" Value="public static UnityEngine.Object CreateEmptyPrefab (string path);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use PrefabUtility.CreateEmptyPrefab")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGameObjectWithHideFlags">
      <MemberSignature Language="C#" Value="public static UnityEngine.GameObject CreateGameObjectWithHideFlags (string name, UnityEngine.HideFlags flags, Type[] components);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.GameObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String"/>
        <Parameter Name="flags" Type="UnityEngine.HideFlags"/>
        <Parameter Name="components" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="components">To be added.</param>
        <summary>Creates a game object with <see cref="T:UnityEditor.HideFlags" /> and specified components.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayCancelableProgressBar">
      <MemberSignature Language="C#" Value="public static bool DisplayCancelableProgressBar (string title, string info, float progress);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String"/>
        <Parameter Name="info" Type="System.String"/>
        <Parameter Name="progress" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <param name="info">To be added.</param>
        <param name="progress">To be added.</param>
        <summary>Displays or updates a progress bar that has a cancel button.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayCustomMenu">
      <MemberSignature Language="C#" Value="public static void DisplayCustomMenu (UnityEngine.Rect position, UnityEngine.GUIContent[] options, int selected, UnityEditor.EditorUtility.SelectMenuItemFunction callback, object userData);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="UnityEngine.Rect"/>
        <Parameter Name="options" Type="UnityEngine.GUIContent[]"/>
        <Parameter Name="selected" Type="System.Int32"/>
        <Parameter Name="callback" Type="UnityEditor.EditorUtility+SelectMenuItemFunction"/>
        <Parameter Name="userData" Type="System.Object"/>
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="options">To be added.</param>
        <param name="selected">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="userData">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDialog">
      <MemberSignature Language="C#" Value="public static bool DisplayDialog (string title, string message, string ok);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String"/>
        <Parameter Name="message" Type="System.String"/>
        <Parameter Name="ok" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <param name="message">To be added.</param>
        <param name="ok">To be added.</param>
        <summary>Displays a modal dialog.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDialog">
      <MemberSignature Language="C#" Value="public static bool DisplayDialog (string title, string message, string ok, string cancel);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String"/>
        <Parameter Name="message" Type="System.String"/>
        <Parameter Name="ok" Type="System.String"/>
        <Parameter Name="cancel" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <param name="message">To be added.</param>
        <param name="ok">To be added.</param>
        <param name="cancel">To be added.</param>
        <summary>Displays a modal dialog.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDialogComplex">
      <MemberSignature Language="C#" Value="public static int DisplayDialogComplex (string title, string message, string ok, string cancel, string alt);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String"/>
        <Parameter Name="message" Type="System.String"/>
        <Parameter Name="ok" Type="System.String"/>
        <Parameter Name="cancel" Type="System.String"/>
        <Parameter Name="alt" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <param name="message">To be added.</param>
        <param name="ok">To be added.</param>
        <param name="cancel">To be added.</param>
        <param name="alt">To be added.</param>
        <summary>Displays a modal dialog with three buttons.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPopupMenu">
      <MemberSignature Language="C#" Value="public static void DisplayPopupMenu (UnityEngine.Rect position, string menuItemPath, UnityEditor.MenuCommand command);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="UnityEngine.Rect"/>
        <Parameter Name="menuItemPath" Type="System.String"/>
        <Parameter Name="command" Type="UnityEditor.MenuCommand"/>
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="menuItemPath">To be added.</param>
        <param name="command">To be added.</param>
        <summary>Displays a popup menu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayProgressBar">
      <MemberSignature Language="C#" Value="public static void DisplayProgressBar (string title, string info, float progress);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String"/>
        <Parameter Name="info" Type="System.String"/>
        <Parameter Name="progress" Type="System.Single"/>
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <param name="info">To be added.</param>
        <param name="progress">To be added.</param>
        <summary>Displays or updates a progress bar.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractOggFile">
      <MemberSignature Language="C#" Value="public static bool ExtractOggFile (UnityEngine.Object obj, string path);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="UnityEngine.Object"/>
        <Parameter Name="path" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="path">To be added.</param>
        <summary>Saves an AudioClip or MovieTexture to a file.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAsset">
      <MemberSignature Language="C#" Value="public static UnityEngine.Object FindAsset (string path, Type type);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("use AssetDatabase.LoadAssetAtPath")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String"/>
        <Parameter Name="type" Type="System.Type"/>
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindPrefabRoot">
      <MemberSignature Language="C#" Value="public static UnityEngine.GameObject FindPrefabRoot (UnityEngine.GameObject source);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use PrefabUtility.FindPrefabRoot")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.GameObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="UnityEngine.GameObject"/>
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusProjectWindow">
      <MemberSignature Language="C#" Value="public static void FocusProjectWindow ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Brings the project window to the front and focuses it.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatBytes">
      <MemberSignature Language="C#" Value="public static string FormatBytes (int bytes);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Int32"/>
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>Returns a text for a number of bytes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssetPath">
      <MemberSignature Language="C#" Value="public static string GetAssetPath (UnityEngine.Object asset);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use AssetDatabase.GetAssetPath")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asset" Type="UnityEngine.Object"/>
      </Parameters>
      <Docs>
        <param name="asset">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssetPreview">
      <MemberSignature Language="C#" Value="public static UnityEngine.Texture2D GetAssetPreview (UnityEngine.Object asset);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Texture2D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asset" Type="UnityEngine.Object"/>
      </Parameters>
      <Docs>
        <param name="asset">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMiniThumbnail">
      <MemberSignature Language="C#" Value="public static UnityEngine.Texture2D GetMiniThumbnail (UnityEngine.Object obj);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Texture2D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="UnityEngine.Object"/>
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Returns the thumbnail for an object (like the ones you see in the project view).</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectEnabled">
      <MemberSignature Language="C#" Value="public static int GetObjectEnabled (UnityEngine.Object target);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="UnityEngine.Object"/>
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>Is the object enabled (0 disabled, 1 enabled, -1 has no enabled button)</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrefabParent">
      <MemberSignature Language="C#" Value="public static UnityEngine.Object GetPrefabParent (UnityEngine.Object source);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use PrefabUtility.GetPrefabParent")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="UnityEngine.Object"/>
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrefabType">
      <MemberSignature Language="C#" Value="public static UnityEditor.PrefabType GetPrefabType (UnityEngine.Object target);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use PrefabUtility.GetPrefabType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEditor.PrefabType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="UnityEngine.Object"/>
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportShader">
      <MemberSignature Language="C#" Value="public static bool ImportShader (UnityEngine.Shader shader, string contents);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="UnityEngine.Shader"/>
        <Parameter Name="contents" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="shader">To be added.</param>
        <param name="contents">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportShaderString">
      <MemberSignature Language="C#" Value="public static string ImportShaderString (string contents);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contents" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="contents">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceIDToObject">
      <MemberSignature Language="C#" Value="public static UnityEngine.Object InstanceIDToObject (int instanceID);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceID" Type="System.Int32"/>
      </Parameters>
      <Docs>
        <param name="instanceID">To be added.</param>
        <summary>Translates an instance ID to a reference to an object.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiatePrefab">
      <MemberSignature Language="C#" Value="public static UnityEngine.Object InstantiatePrefab (UnityEngine.Object target);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use PrefabUtility.InstantiatePrefab")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="UnityEngine.Object"/>
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeDiffTool">
      <MemberSignature Language="C#" Value="public static string InvokeDiffTool (string leftTitle, string leftFile, string rightTitle, string rightFile, string ancestorTitle, string ancestorFile);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftTitle" Type="System.String"/>
        <Parameter Name="leftFile" Type="System.String"/>
        <Parameter Name="rightTitle" Type="System.String"/>
        <Parameter Name="rightFile" Type="System.String"/>
        <Parameter Name="ancestorTitle" Type="System.String"/>
        <Parameter Name="ancestorFile" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="leftTitle">To be added.</param>
        <param name="leftFile">To be added.</param>
        <param name="rightTitle">To be added.</param>
        <param name="rightFile">To be added.</param>
        <param name="ancestorTitle">To be added.</param>
        <param name="ancestorFile">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistent">
      <MemberSignature Language="C#" Value="public static bool IsPersistent (UnityEngine.Object target);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="UnityEngine.Object"/>
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>Determines if an object is stored on disk.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWindowLayout">
      <MemberSignature Language="C#" Value="public static bool LoadWindowLayout (string path);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenFilePanel">
      <MemberSignature Language="C#" Value="public static string OpenFilePanel (string title, string directory, string extension);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String"/>
        <Parameter Name="directory" Type="System.String"/>
        <Parameter Name="extension" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <param name="directory">To be added.</param>
        <param name="extension">To be added.</param>
        <summary>Displays the "open file" dialog and returns the selected path name.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenFolderPanel">
      <MemberSignature Language="C#" Value="public static string OpenFolderPanel (string title, string folder, string defaultName);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String"/>
        <Parameter Name="folder" Type="System.String"/>
        <Parameter Name="defaultName" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <param name="folder">To be added.</param>
        <param name="defaultName">To be added.</param>
        <summary>Displays the "open folder" dialog and returns the selected path name.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenWithDefaultApp">
      <MemberSignature Language="C#" Value="public static void OpenWithDefaultApp (string fileName);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="fileName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReconnectToLastPrefab">
      <MemberSignature Language="C#" Value="public static bool ReconnectToLastPrefab (UnityEngine.GameObject go);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use PrefabUtility.CreateEmptyPrefab")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="go" Type="UnityEngine.GameObject"/>
      </Parameters>
      <Docs>
        <param name="go">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacePrefab">
      <MemberSignature Language="C#" Value="public static UnityEngine.GameObject ReplacePrefab (UnityEngine.GameObject go, UnityEngine.Object targetPrefab);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use PrefabUtility.ReplacePrefab")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.GameObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="go" Type="UnityEngine.GameObject"/>
        <Parameter Name="targetPrefab" Type="UnityEngine.Object"/>
      </Parameters>
      <Docs>
        <param name="go">To be added.</param>
        <param name="targetPrefab">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacePrefab">
      <MemberSignature Language="C#" Value="public static UnityEngine.GameObject ReplacePrefab (UnityEngine.GameObject go, UnityEngine.Object targetPrefab, UnityEditor.ReplacePrefabOptions options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.GameObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="go" Type="UnityEngine.GameObject"/>
        <Parameter Name="targetPrefab" Type="UnityEngine.Object"/>
        <Parameter Name="options" Type="UnityEditor.ReplacePrefabOptions"/>
      </Parameters>
      <Docs>
        <param name="go">To be added.</param>
        <param name="targetPrefab">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetToPrefabState">
      <MemberSignature Language="C#" Value="public static bool ResetToPrefabState (UnityEngine.Object source);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use PrefabUtility.ResetToPrefabState")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="UnityEngine.Object"/>
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveFilePanel">
      <MemberSignature Language="C#" Value="public static string SaveFilePanel (string title, string directory, string defaultName, string extension);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String"/>
        <Parameter Name="directory" Type="System.String"/>
        <Parameter Name="defaultName" Type="System.String"/>
        <Parameter Name="extension" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <param name="directory">To be added.</param>
        <param name="defaultName">To be added.</param>
        <param name="extension">To be added.</param>
        <summary>Displays the "save file" dialog and returns the selected path name.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveFilePanelInProject">
      <MemberSignature Language="C#" Value="public static string SaveFilePanelInProject (string title, string defaultName, string extension, string message);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String"/>
        <Parameter Name="defaultName" Type="System.String"/>
        <Parameter Name="extension" Type="System.String"/>
        <Parameter Name="message" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <param name="defaultName">To be added.</param>
        <param name="extension">To be added.</param>
        <param name="message">To be added.</param>
        <summary>Displays the "save file" dialog in the Assets folder of the project and returns the selected path name.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveFolderPanel">
      <MemberSignature Language="C#" Value="public static string SaveFolderPanel (string title, string folder, string defaultName);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String"/>
        <Parameter Name="folder" Type="System.String"/>
        <Parameter Name="defaultName" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <param name="folder">To be added.</param>
        <param name="defaultName">To be added.</param>
        <summary>Displays the "save folder" dialog and returns the selected path name.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAssetPreview">
      <MemberSignature Language="C#" Value="public static bool SetAssetPreview (UnityEngine.Object asset, bool isMainAsset, UnityEngine.Texture2D tex);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asset" Type="UnityEngine.Object"/>
        <Parameter Name="isMainAsset" Type="System.Boolean"/>
        <Parameter Name="tex" Type="UnityEngine.Texture2D"/>
      </Parameters>
      <Docs>
        <param name="asset">To be added.</param>
        <param name="isMainAsset">To be added.</param>
        <param name="tex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="public static void SetDirty (UnityEngine.Object target);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="UnityEngine.Object"/>
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>Marks target object as dirty.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetObjectEnabled">
      <MemberSignature Language="C#" Value="public static void SetObjectEnabled (UnityEngine.Object target, bool enabled);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="UnityEngine.Object"/>
        <Parameter Name="enabled" Type="System.Boolean"/>
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="enabled">To be added.</param>
        <summary>Set the enabled state of the object</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedWireframeHidden">
      <MemberSignature Language="C#" Value="public static void SetSelectedWireframeHidden (UnityEngine.Renderer renderer, bool enabled);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderer" Type="UnityEngine.Renderer"/>
        <Parameter Name="enabled" Type="System.Boolean"/>
      </Parameters>
      <Docs>
        <param name="renderer">To be added.</param>
        <param name="enabled">To be added.</param>
        <summary>Set whether the renderer's wireframe will be hidden when the renderer's gameobject is selected</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadUnusedAssets">
      <MemberSignature Language="C#" Value="public static void UnloadUnusedAssets ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Unloads assets that are not used.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadUnusedAssetsIgnoreManagedReferences">
      <MemberSignature Language="C#" Value="public static void UnloadUnusedAssetsIgnoreManagedReferences ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Unloads assets that are not used, including the ones that are referenced only from scripts.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WarnPrefab">
      <MemberSignature Language="C#" Value="public static bool WarnPrefab (UnityEngine.Object target, string title, string warning, string okButton);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="UnityEngine.Object"/>
        <Parameter Name="title" Type="System.String"/>
        <Parameter Name="warning" Type="System.String"/>
        <Parameter Name="okButton" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="title">To be added.</param>
        <param name="warning">To be added.</param>
        <param name="okButton">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>