<?xml version="1.0"?>
<Type Name="DragAndDrop" FullName="UnityEditor.DragAndDrop">
  <TypeSignature Language="C#" Value="public sealed class DragAndDrop"/>
  <AssemblyInfo>
    <AssemblyName>UnityEditor</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces/>
  <Docs>
    <summary>Editor drag &amp; drop operations.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DragAndDrop ();"/>
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters/>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptDrag">
      <MemberSignature Language="C#" Value="public static void AcceptDrag ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Accept a drag operation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="activeControlID">
      <MemberSignature Language="C#" Value="public static int activeControlID { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get or set ID of currently active drag and drop control.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGenericData">
      <MemberSignature Language="C#" Value="public static object GetGenericData (string type);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>Get data associated with current drag and drop operation.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="objectReferences">
      <MemberSignature Language="C#" Value="public static UnityEngine.Object[] objectReferences { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>References to <see cref="T:UnityEditor.objects" /> being dragged.</summary>
        <value>To be added.</value>
        <remarks>See Also: <see cref="P:UnityEditor.paths" />, <see cref="P:UnityEditor.PrepareStartDrag" />, <see cref="P:UnityEditor.StartDrag" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="paths">
      <MemberSignature Language="C#" Value="public static string[] paths { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The file names being dragged.</summary>
        <value>To be added.</value>
        <remarks>See Also: <see cref="P:UnityEditor.objectReferences" />, <see cref="P:UnityEditor.PrepareStartDrag" />, <see cref="P:UnityEditor.StartDrag" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareStartDrag">
      <MemberSignature Language="C#" Value="public static void PrepareStartDrag ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Clears drag &amp; drop data.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGenericData">
      <MemberSignature Language="C#" Value="public static void SetGenericData (string type, object data);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String"/>
        <Parameter Name="data" Type="System.Object"/>
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="data">To be added.</param>
        <summary>Set data associated with current drag and drop operation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDrag">
      <MemberSignature Language="C#" Value="public static void StartDrag (string title);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <summary>Start a drag operation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="visualMode">
      <MemberSignature Language="C#" Value="public static UnityEditor.DragAndDropVisualMode visualMode { set; get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEditor.DragAndDropVisualMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The visual indication of the drag.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>