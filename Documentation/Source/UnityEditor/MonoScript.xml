<?xml version="1.0"?>
<Type Name="MonoScript" FullName="UnityEditor.MonoScript">
  <TypeSignature Language="C#" Value="public sealed class MonoScript : UnityEngine.TextAsset"/>
  <AssemblyInfo>
    <AssemblyName>UnityEditor</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>UnityEngine.TextAsset</BaseTypeName>
  </Base>
  <Interfaces/>
  <Docs>
    <summary>Representation of Script assets.</summary>
    <remarks>(Read Only)</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MonoScript ();"/>
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters/>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMonoBehaviour">
      <MemberSignature Language="C#" Value="public static UnityEditor.MonoScript FromMonoBehaviour (UnityEngine.MonoBehaviour behaviour);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEditor.MonoScript</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behaviour" Type="UnityEngine.MonoBehaviour"/>
      </Parameters>
      <Docs>
        <param name="behaviour">To be added.</param>
        <summary>Returns the MonoScript object containing specified MonoBehaviour</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromScriptableObject">
      <MemberSignature Language="C#" Value="public static UnityEditor.MonoScript FromScriptableObject (UnityEngine.ScriptableObject scriptableObject);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEditor.MonoScript</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptableObject" Type="UnityEngine.ScriptableObject"/>
      </Parameters>
      <Docs>
        <param name="scriptableObject">To be added.</param>
        <summary>Returns the MonoScript object containing specified ScriptableObject</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClass">
      <MemberSignature Language="C#" Value="public Type GetClass ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Returns the System.Type object of the class implemented by this script</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>