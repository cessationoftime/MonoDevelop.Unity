<?xml version="1.0"?>
<Type Name="EditorGUILayout" FullName="UnityEditor.EditorGUILayout">
  <TypeSignature Language="C#" Value="public sealed class EditorGUILayout"/>
  <AssemblyInfo>
    <AssemblyName>UnityEditor</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces/>
  <Docs>
    <summary>Auto-layouted version of <see cref="T:UnityEditor.EditorGUI" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorGUILayout ();"/>
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters/>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginHorizontal">
      <MemberSignature Language="C#" Value="public static UnityEngine.Rect BeginHorizontal (UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>Begin a horizontal group and get its rect back.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginHorizontal">
      <MemberSignature Language="C#" Value="public static UnityEngine.Rect BeginHorizontal (UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Begin a horizontal group and get its rect back.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginScrollView">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollPosition" Type="UnityEngine.Vector2"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="scrollPosition">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Begin an automatically layouted scrollview.</summary>
        <returns><see cref="T:UnityEditor.Vector2" /> - The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginScrollView">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, UnityEngine.GUIStyle style);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollPosition" Type="UnityEngine.Vector2"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
      </Parameters>
      <Docs>
        <param name="scrollPosition">To be added.</param>
        <param name="style">To be added.</param>
        <summary>Begin an automatically layouted scrollview.</summary>
        <returns><see cref="T:UnityEditor.Vector2" /> - The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginScrollView">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, bool alwaysShowHorizontal, bool alwaysShowVertical, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollPosition" Type="UnityEngine.Vector2"/>
        <Parameter Name="alwaysShowHorizontal" Type="System.Boolean"/>
        <Parameter Name="alwaysShowVertical" Type="System.Boolean"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="scrollPosition">To be added.</param>
        <param name="alwaysShowHorizontal">To be added.</param>
        <param name="alwaysShowVertical">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Begin an automatically layouted scrollview.</summary>
        <returns><see cref="T:UnityEditor.Vector2" /> - The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginScrollView">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, UnityEngine.GUIStyle horizontalScrollbar, UnityEngine.GUIStyle verticalScrollbar, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollPosition" Type="UnityEngine.Vector2"/>
        <Parameter Name="horizontalScrollbar" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="verticalScrollbar" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="scrollPosition">To be added.</param>
        <param name="horizontalScrollbar">To be added.</param>
        <param name="verticalScrollbar">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Begin an automatically layouted scrollview.</summary>
        <returns><see cref="T:UnityEditor.Vector2" /> - The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginScrollView">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, bool alwaysShowHorizontal, bool alwaysShowVertical, UnityEngine.GUIStyle horizontalScrollbar, UnityEngine.GUIStyle verticalScrollbar, UnityEngine.GUIStyle background, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollPosition" Type="UnityEngine.Vector2"/>
        <Parameter Name="alwaysShowHorizontal" Type="System.Boolean"/>
        <Parameter Name="alwaysShowVertical" Type="System.Boolean"/>
        <Parameter Name="horizontalScrollbar" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="verticalScrollbar" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="background" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="scrollPosition">To be added.</param>
        <param name="alwaysShowHorizontal">To be added.</param>
        <param name="alwaysShowVertical">To be added.</param>
        <param name="horizontalScrollbar">To be added.</param>
        <param name="verticalScrollbar">To be added.</param>
        <param name="background">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Begin an automatically layouted scrollview.</summary>
        <returns><see cref="T:UnityEditor.Vector2" /> - The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginToggleGroup">
      <MemberSignature Language="C#" Value="public static bool BeginToggleGroup (string label, bool toggle);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="toggle" Type="System.Boolean"/>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="toggle">To be added.</param>
        <summary>Begin a vertical group with a toggle to enable or disable all the controls within at once.</summary>
        <returns>boolean - The enabled state selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginToggleGroup">
      <MemberSignature Language="C#" Value="public static bool BeginToggleGroup (UnityEngine.GUIContent label, bool toggle);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="toggle" Type="System.Boolean"/>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="toggle">To be added.</param>
        <summary>Begin a vertical group with a toggle to enable or disable all the controls within at once.</summary>
        <returns>boolean - The enabled state selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginVertical">
      <MemberSignature Language="C#" Value="public static UnityEngine.Rect BeginVertical (UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>Begin a vertical group and get its rect back.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginVertical">
      <MemberSignature Language="C#" Value="public static UnityEngine.Rect BeginVertical (UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Begin a vertical group and get its rect back.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundsField">
      <MemberSignature Language="C#" Value="public static UnityEngine.Bounds BoundsField (UnityEngine.Bounds value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Bounds</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="UnityEngine.Bounds"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make Center &amp; Extents field for entering a <see cref="T:UnityEditor.Bounds" />.</summary>
        <returns><see cref="T:UnityEditor.Bounds" /> - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundsField">
      <MemberSignature Language="C#" Value="public static UnityEngine.Bounds BoundsField (string label, UnityEngine.Bounds value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Bounds</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="value" Type="UnityEngine.Bounds"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make Center &amp; Extents field for entering a <see cref="T:UnityEditor.Bounds" />.</summary>
        <returns><see cref="T:UnityEditor.Bounds" /> - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundsField">
      <MemberSignature Language="C#" Value="public static UnityEngine.Bounds BoundsField (UnityEngine.GUIContent label, UnityEngine.Bounds value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Bounds</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="value" Type="UnityEngine.Bounds"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make Center &amp; Extents field for entering a <see cref="T:UnityEditor.Bounds" />.</summary>
        <returns><see cref="T:UnityEditor.Bounds" /> - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorField">
      <MemberSignature Language="C#" Value="public static UnityEngine.Color ColorField (UnityEngine.Color value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="UnityEngine.Color"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for selecting a <see cref="T:UnityEditor.Color" />.</summary>
        <returns><see cref="T:UnityEditor.Color" /> - The color selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorField">
      <MemberSignature Language="C#" Value="public static UnityEngine.Color ColorField (string label, UnityEngine.Color value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="value" Type="UnityEngine.Color"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for selecting a <see cref="T:UnityEditor.Color" />.</summary>
        <returns><see cref="T:UnityEditor.Color" /> - The color selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorField">
      <MemberSignature Language="C#" Value="public static UnityEngine.Color ColorField (UnityEngine.GUIContent label, UnityEngine.Color value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="value" Type="UnityEngine.Color"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for selecting a <see cref="T:UnityEditor.Color" />.</summary>
        <returns><see cref="T:UnityEditor.Color" /> - The color selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurveField">
      <MemberSignature Language="C#" Value="public static UnityEngine.AnimationCurve CurveField (UnityEngine.AnimationCurve value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.AnimationCurve</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="UnityEngine.AnimationCurve"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for editing an <see cref="T:UnityEditor.AnimationCurve" />.</summary>
        <returns><see cref="T:UnityEditor.AnimationCurve" /> - The curve edited by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurveField">
      <MemberSignature Language="C#" Value="public static UnityEngine.AnimationCurve CurveField (string label, UnityEngine.AnimationCurve value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.AnimationCurve</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="value" Type="UnityEngine.AnimationCurve"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for editing an <see cref="T:UnityEditor.AnimationCurve" />.</summary>
        <returns><see cref="T:UnityEditor.AnimationCurve" /> - The curve edited by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurveField">
      <MemberSignature Language="C#" Value="public static UnityEngine.AnimationCurve CurveField (UnityEngine.GUIContent label, UnityEngine.AnimationCurve value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.AnimationCurve</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="value" Type="UnityEngine.AnimationCurve"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for editing an <see cref="T:UnityEditor.AnimationCurve" />.</summary>
        <returns><see cref="T:UnityEditor.AnimationCurve" /> - The curve edited by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurveField">
      <MemberSignature Language="C#" Value="public static UnityEngine.AnimationCurve CurveField (UnityEngine.AnimationCurve value, UnityEngine.Color color, UnityEngine.Rect ranges, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.AnimationCurve</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="UnityEngine.AnimationCurve"/>
        <Parameter Name="color" Type="UnityEngine.Color"/>
        <Parameter Name="ranges" Type="UnityEngine.Rect"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="color">To be added.</param>
        <param name="ranges">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for editing an <see cref="T:UnityEditor.AnimationCurve" />.</summary>
        <returns><see cref="T:UnityEditor.AnimationCurve" /> - The curve edited by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurveField">
      <MemberSignature Language="C#" Value="public static UnityEngine.AnimationCurve CurveField (string label, UnityEngine.AnimationCurve value, UnityEngine.Color color, UnityEngine.Rect ranges, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.AnimationCurve</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="value" Type="UnityEngine.AnimationCurve"/>
        <Parameter Name="color" Type="UnityEngine.Color"/>
        <Parameter Name="ranges" Type="UnityEngine.Rect"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="color">To be added.</param>
        <param name="ranges">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for editing an <see cref="T:UnityEditor.AnimationCurve" />.</summary>
        <returns><see cref="T:UnityEditor.AnimationCurve" /> - The curve edited by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurveField">
      <MemberSignature Language="C#" Value="public static UnityEngine.AnimationCurve CurveField (UnityEngine.GUIContent label, UnityEngine.AnimationCurve value, UnityEngine.Color color, UnityEngine.Rect ranges, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.AnimationCurve</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="value" Type="UnityEngine.AnimationCurve"/>
        <Parameter Name="color" Type="UnityEngine.Color"/>
        <Parameter Name="ranges" Type="UnityEngine.Rect"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="color">To be added.</param>
        <param name="ranges">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for editing an <see cref="T:UnityEditor.AnimationCurve" />.</summary>
        <returns><see cref="T:UnityEditor.AnimationCurve" /> - The curve edited by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHorizontal">
      <MemberSignature Language="C#" Value="public static void EndHorizontal ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Close a group started with BeginHorizontal</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndScrollView">
      <MemberSignature Language="C#" Value="public static void EndScrollView ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Ends a scrollview started with a call to BeginScrollView.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndToggleGroup">
      <MemberSignature Language="C#" Value="public static void EndToggleGroup ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Close a group started with <see cref="P:UnityEditor.BeginToggleGroup" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndVertical">
      <MemberSignature Language="C#" Value="public static void EndVertical ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Close a group started with BeginVertical</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumMaskField">
      <MemberSignature Language="C#" Value="public static Enum EnumMaskField (Enum enumValue, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Enum</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumValue" Type="System.Enum"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="enumValue">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for enum based masks.</summary>
        <returns>System.Enum - The value modified by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumMaskField">
      <MemberSignature Language="C#" Value="public static Enum EnumMaskField (Enum enumValue, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Enum</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumValue" Type="System.Enum"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="enumValue">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for enum based masks.</summary>
        <returns>System.Enum - The value modified by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumMaskField">
      <MemberSignature Language="C#" Value="public static Enum EnumMaskField (string label, Enum enumValue, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Enum</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="enumValue" Type="System.Enum"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="enumValue">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for enum based masks.</summary>
        <returns>System.Enum - The value modified by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumMaskField">
      <MemberSignature Language="C#" Value="public static Enum EnumMaskField (UnityEngine.GUIContent label, Enum enumValue, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Enum</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="enumValue" Type="System.Enum"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="enumValue">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for enum based masks.</summary>
        <returns>System.Enum - The value modified by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumMaskField">
      <MemberSignature Language="C#" Value="public static Enum EnumMaskField (string label, Enum enumValue, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Enum</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="enumValue" Type="System.Enum"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="enumValue">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for enum based masks.</summary>
        <returns>System.Enum - The value modified by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumMaskField">
      <MemberSignature Language="C#" Value="public static Enum EnumMaskField (UnityEngine.GUIContent label, Enum enumValue, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Enum</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="enumValue" Type="System.Enum"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="enumValue">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for enum based masks.</summary>
        <returns>System.Enum - The value modified by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumPopup">
      <MemberSignature Language="C#" Value="public static Enum EnumPopup (Enum selected, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Enum</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selected" Type="System.Enum"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="selected">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an enum popup selection field.</summary>
        <returns>System.Enum - The enum option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumPopup">
      <MemberSignature Language="C#" Value="public static Enum EnumPopup (Enum selected, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Enum</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selected" Type="System.Enum"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="selected">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an enum popup selection field.</summary>
        <returns>System.Enum - The enum option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumPopup">
      <MemberSignature Language="C#" Value="public static Enum EnumPopup (string label, Enum selected, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Enum</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="selected" Type="System.Enum"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="selected">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an enum popup selection field.</summary>
        <returns>System.Enum - The enum option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumPopup">
      <MemberSignature Language="C#" Value="public static Enum EnumPopup (UnityEngine.GUIContent label, Enum selected, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Enum</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="selected" Type="System.Enum"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="selected">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an enum popup selection field.</summary>
        <returns>System.Enum - The enum option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumPopup">
      <MemberSignature Language="C#" Value="public static Enum EnumPopup (string label, Enum selected, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Enum</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="selected" Type="System.Enum"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="selected">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an enum popup selection field.</summary>
        <returns>System.Enum - The enum option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumPopup">
      <MemberSignature Language="C#" Value="public static Enum EnumPopup (UnityEngine.GUIContent label, Enum selected, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Enum</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="selected" Type="System.Enum"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="selected">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an enum popup selection field.</summary>
        <returns>System.Enum - The enum option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FloatField">
      <MemberSignature Language="C#" Value="public static float FloatField (float value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field for entering float values.</summary>
        <returns>float - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FloatField">
      <MemberSignature Language="C#" Value="public static float FloatField (float value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field for entering float values.</summary>
        <returns>float - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FloatField">
      <MemberSignature Language="C#" Value="public static float FloatField (string label, float value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="value" Type="System.Single"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field for entering float values.</summary>
        <returns>float - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FloatField">
      <MemberSignature Language="C#" Value="public static float FloatField (UnityEngine.GUIContent label, float value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="value" Type="System.Single"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field for entering float values.</summary>
        <returns>float - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FloatField">
      <MemberSignature Language="C#" Value="public static float FloatField (string label, float value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="value" Type="System.Single"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field for entering float values.</summary>
        <returns>float - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FloatField">
      <MemberSignature Language="C#" Value="public static float FloatField (UnityEngine.GUIContent label, float value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="value" Type="System.Single"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field for entering float values.</summary>
        <returns>float - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Foldout">
      <MemberSignature Language="C#" Value="public static bool Foldout (bool foldout, string content);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foldout" Type="System.Boolean"/>
        <Parameter Name="content" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="foldout">To be added.</param>
        <param name="content">To be added.</param>
        <summary>Make a label with a foldout arrow to the left of it.</summary>
        <returns>boolean - The foldout state selected by the user. If true, you should render sub-objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Foldout">
      <MemberSignature Language="C#" Value="public static bool Foldout (bool foldout, UnityEngine.GUIContent content);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foldout" Type="System.Boolean"/>
        <Parameter Name="content" Type="UnityEngine.GUIContent"/>
      </Parameters>
      <Docs>
        <param name="foldout">To be added.</param>
        <param name="content">To be added.</param>
        <summary>Make a label with a foldout arrow to the left of it.</summary>
        <returns>boolean - The foldout state selected by the user. If true, you should render sub-objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Foldout">
      <MemberSignature Language="C#" Value="public static bool Foldout (bool foldout, string content, UnityEngine.GUIStyle style);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foldout" Type="System.Boolean"/>
        <Parameter Name="content" Type="System.String"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
      </Parameters>
      <Docs>
        <param name="foldout">To be added.</param>
        <param name="content">To be added.</param>
        <param name="style">To be added.</param>
        <summary>Make a label with a foldout arrow to the left of it.</summary>
        <returns>boolean - The foldout state selected by the user. If true, you should render sub-objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Foldout">
      <MemberSignature Language="C#" Value="public static bool Foldout (bool foldout, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foldout" Type="System.Boolean"/>
        <Parameter Name="content" Type="UnityEngine.GUIContent"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
      </Parameters>
      <Docs>
        <param name="foldout">To be added.</param>
        <param name="content">To be added.</param>
        <param name="style">To be added.</param>
        <summary>Make a label with a foldout arrow to the left of it.</summary>
        <returns>boolean - The foldout state selected by the user. If true, you should render sub-objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpBox">
      <MemberSignature Language="C#" Value="public static void HelpBox (string message, UnityEditor.MessageType type);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String"/>
        <Parameter Name="type" Type="UnityEditor.MessageType"/>
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="type">To be added.</param>
        <summary>Make a help box with a message to the user.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpBox">
      <MemberSignature Language="C#" Value="public static void HelpBox (string message, UnityEditor.MessageType type, bool wide);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String"/>
        <Parameter Name="type" Type="UnityEditor.MessageType"/>
        <Parameter Name="wide" Type="System.Boolean"/>
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="type">To be added.</param>
        <param name="wide">To be added.</param>
        <summary>Make a help box with a message to the user.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InspectorTitlebar">
      <MemberSignature Language="C#" Value="public static bool InspectorTitlebar (bool foldout, UnityEngine.Object targetObj);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foldout" Type="System.Boolean"/>
        <Parameter Name="targetObj" Type="UnityEngine.Object"/>
      </Parameters>
      <Docs>
        <param name="foldout">To be added.</param>
        <param name="targetObj">To be added.</param>
        <summary>Make an inspector-window-like titlebar.</summary>
        <returns>boolean - The foldout state selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InspectorTitlebar">
      <MemberSignature Language="C#" Value="public static bool InspectorTitlebar (bool foldout, UnityEngine.Object[] targetObjs);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foldout" Type="System.Boolean"/>
        <Parameter Name="targetObjs" Type="UnityEngine.Object[]"/>
      </Parameters>
      <Docs>
        <param name="foldout">To be added.</param>
        <param name="targetObjs">To be added.</param>
        <summary>Make an inspector-window-like titlebar.</summary>
        <returns>boolean - The foldout state selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntField">
      <MemberSignature Language="C#" Value="public static int IntField (int value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field for entering integers.</summary>
        <returns>int - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntField">
      <MemberSignature Language="C#" Value="public static int IntField (int value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field for entering integers.</summary>
        <returns>int - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntField">
      <MemberSignature Language="C#" Value="public static int IntField (string label, int value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="value" Type="System.Int32"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field for entering integers.</summary>
        <returns>int - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntField">
      <MemberSignature Language="C#" Value="public static int IntField (UnityEngine.GUIContent label, int value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="value" Type="System.Int32"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field for entering integers.</summary>
        <returns>int - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntField">
      <MemberSignature Language="C#" Value="public static int IntField (string label, int value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="value" Type="System.Int32"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field for entering integers.</summary>
        <returns>int - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntField">
      <MemberSignature Language="C#" Value="public static int IntField (UnityEngine.GUIContent label, int value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="value" Type="System.Int32"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field for entering integers.</summary>
        <returns>int - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntPopup">
      <MemberSignature Language="C#" Value="public static int IntPopup (int selectedValue, string[] displayedOptions, int[] optionValues, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedValue" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="System.String[]"/>
        <Parameter Name="optionValues" Type="System.Int32[]"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="selectedValue">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="optionValues">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an integer popup selection field.</summary>
        <returns>int - The value of the option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntPopup">
      <MemberSignature Language="C#" Value="public static int IntPopup (int selectedValue, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedValue" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="UnityEngine.GUIContent[]"/>
        <Parameter Name="optionValues" Type="System.Int32[]"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="selectedValue">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="optionValues">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an integer popup selection field.</summary>
        <returns>int - The value of the option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntPopup">
      <MemberSignature Language="C#" Value="public static void IntPopup (UnityEditor.SerializedProperty property, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="UnityEditor.SerializedProperty"/>
        <Parameter Name="displayedOptions" Type="UnityEngine.GUIContent[]"/>
        <Parameter Name="optionValues" Type="System.Int32[]"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="optionValues">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an integer popup selection field.</summary>
        <remarks>To be added.</remarks>
      <returns>int - The value of the option that has been selected by the user.</returns></Docs>
    </Member>
    <Member MemberName="IntPopup">
      <MemberSignature Language="C#" Value="public static int IntPopup (int selectedValue, string[] displayedOptions, int[] optionValues, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedValue" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="System.String[]"/>
        <Parameter Name="optionValues" Type="System.Int32[]"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="selectedValue">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="optionValues">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an integer popup selection field.</summary>
        <returns>int - The value of the option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntPopup">
      <MemberSignature Language="C#" Value="public static int IntPopup (int selectedValue, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedValue" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="UnityEngine.GUIContent[]"/>
        <Parameter Name="optionValues" Type="System.Int32[]"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="selectedValue">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="optionValues">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an integer popup selection field.</summary>
        <returns>int - The value of the option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntPopup">
      <MemberSignature Language="C#" Value="public static int IntPopup (string label, int selectedValue, string[] displayedOptions, int[] optionValues, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="selectedValue" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="System.String[]"/>
        <Parameter Name="optionValues" Type="System.Int32[]"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="selectedValue">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="optionValues">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an integer popup selection field.</summary>
        <returns>int - The value of the option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntPopup">
      <MemberSignature Language="C#" Value="public static void IntPopup (UnityEditor.SerializedProperty property, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUIContent label, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="UnityEditor.SerializedProperty"/>
        <Parameter Name="displayedOptions" Type="UnityEngine.GUIContent[]"/>
        <Parameter Name="optionValues" Type="System.Int32[]"/>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="optionValues">To be added.</param>
        <param name="label">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an integer popup selection field.</summary>
        <remarks>To be added.</remarks>
      <returns>int - The value of the option that has been selected by the user.</returns></Docs>
    </Member>
    <Member MemberName="IntPopup">
      <MemberSignature Language="C#" Value="public static int IntPopup (UnityEngine.GUIContent label, int selectedValue, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="selectedValue" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="UnityEngine.GUIContent[]"/>
        <Parameter Name="optionValues" Type="System.Int32[]"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="selectedValue">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="optionValues">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an integer popup selection field.</summary>
        <returns>int - The value of the option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntPopup">
      <MemberSignature Language="C#" Value="public static int IntPopup (string label, int selectedValue, string[] displayedOptions, int[] optionValues, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="selectedValue" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="System.String[]"/>
        <Parameter Name="optionValues" Type="System.Int32[]"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="selectedValue">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="optionValues">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an integer popup selection field.</summary>
        <returns>int - The value of the option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntPopup">
      <MemberSignature Language="C#" Value="public static void IntPopup (UnityEditor.SerializedProperty property, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUIContent label, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This function is obsolete and the style is not used.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="UnityEditor.SerializedProperty"/>
        <Parameter Name="displayedOptions" Type="UnityEngine.GUIContent[]"/>
        <Parameter Name="optionValues" Type="System.Int32[]"/>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="optionValues">To be added.</param>
        <param name="label">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an integer popup selection field.</summary>
        <remarks>To be added.</remarks>
      <returns>int - The value of the option that has been selected by the user.</returns></Docs>
    </Member>
    <Member MemberName="IntPopup">
      <MemberSignature Language="C#" Value="public static int IntPopup (UnityEngine.GUIContent label, int selectedValue, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="selectedValue" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="UnityEngine.GUIContent[]"/>
        <Parameter Name="optionValues" Type="System.Int32[]"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="selectedValue">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="optionValues">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an integer popup selection field.</summary>
        <returns>int - The value of the option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntSlider">
      <MemberSignature Language="C#" Value="public static int IntSlider (int value, int leftValue, int rightValue, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32"/>
        <Parameter Name="leftValue" Type="System.Int32"/>
        <Parameter Name="rightValue" Type="System.Int32"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="leftValue">To be added.</param>
        <param name="rightValue">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a slider the user can drag to change an integer value between a min and a max.</summary>
        <returns>int - The value that has been set by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntSlider">
      <MemberSignature Language="C#" Value="public static void IntSlider (UnityEditor.SerializedProperty property, int leftValue, int rightValue, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="UnityEditor.SerializedProperty"/>
        <Parameter Name="leftValue" Type="System.Int32"/>
        <Parameter Name="rightValue" Type="System.Int32"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="leftValue">To be added.</param>
        <param name="rightValue">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a slider the user can drag to change an integer value between a min and a max.</summary>
        <remarks>To be added.</remarks>
      <returns>int - The value that has been set by the user.</returns></Docs>
    </Member>
    <Member MemberName="IntSlider">
      <MemberSignature Language="C#" Value="public static int IntSlider (string label, int value, int leftValue, int rightValue, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="value" Type="System.Int32"/>
        <Parameter Name="leftValue" Type="System.Int32"/>
        <Parameter Name="rightValue" Type="System.Int32"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="leftValue">To be added.</param>
        <param name="rightValue">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a slider the user can drag to change an integer value between a min and a max.</summary>
        <returns>int - The value that has been set by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntSlider">
      <MemberSignature Language="C#" Value="public static void IntSlider (UnityEditor.SerializedProperty property, int leftValue, int rightValue, string label, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="UnityEditor.SerializedProperty"/>
        <Parameter Name="leftValue" Type="System.Int32"/>
        <Parameter Name="rightValue" Type="System.Int32"/>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="leftValue">To be added.</param>
        <param name="rightValue">To be added.</param>
        <param name="label">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a slider the user can drag to change an integer value between a min and a max.</summary>
        <remarks>To be added.</remarks>
      <returns>int - The value that has been set by the user.</returns></Docs>
    </Member>
    <Member MemberName="IntSlider">
      <MemberSignature Language="C#" Value="public static void IntSlider (UnityEditor.SerializedProperty property, int leftValue, int rightValue, UnityEngine.GUIContent label, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="UnityEditor.SerializedProperty"/>
        <Parameter Name="leftValue" Type="System.Int32"/>
        <Parameter Name="rightValue" Type="System.Int32"/>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="leftValue">To be added.</param>
        <param name="rightValue">To be added.</param>
        <param name="label">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a slider the user can drag to change an integer value between a min and a max.</summary>
        <remarks>To be added.</remarks>
      <returns>int - The value that has been set by the user.</returns></Docs>
    </Member>
    <Member MemberName="IntSlider">
      <MemberSignature Language="C#" Value="public static int IntSlider (UnityEngine.GUIContent label, int value, int leftValue, int rightValue, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="value" Type="System.Int32"/>
        <Parameter Name="leftValue" Type="System.Int32"/>
        <Parameter Name="rightValue" Type="System.Int32"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="leftValue">To be added.</param>
        <param name="rightValue">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a slider the user can drag to change an integer value between a min and a max.</summary>
        <returns>int - The value that has been set by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelField">
      <MemberSignature Language="C#" Value="public static void LabelField (string label, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a label field. (Useful for showing read-only info.)</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelField">
      <MemberSignature Language="C#" Value="public static void LabelField (UnityEngine.GUIContent label, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a label field. (Useful for showing read-only info.)</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelField">
      <MemberSignature Language="C#" Value="public static void LabelField (string label, string label2, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="label2" Type="System.String"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="label2">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a label field. (Useful for showing read-only info.)</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelField">
      <MemberSignature Language="C#" Value="public static void LabelField (string label, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a label field. (Useful for showing read-only info.)</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelField">
      <MemberSignature Language="C#" Value="public static void LabelField (UnityEngine.GUIContent label, UnityEngine.GUIContent label2, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="label2" Type="UnityEngine.GUIContent"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="label2">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a label field. (Useful for showing read-only info.)</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelField">
      <MemberSignature Language="C#" Value="public static void LabelField (UnityEngine.GUIContent label, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a label field. (Useful for showing read-only info.)</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelField">
      <MemberSignature Language="C#" Value="public static void LabelField (string label, string label2, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="label2" Type="System.String"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="label2">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a label field. (Useful for showing read-only info.)</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelField">
      <MemberSignature Language="C#" Value="public static void LabelField (UnityEngine.GUIContent label, UnityEngine.GUIContent label2, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="label2" Type="UnityEngine.GUIContent"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="label2">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a label field. (Useful for showing read-only info.)</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayerField">
      <MemberSignature Language="C#" Value="public static int LayerField (int layer, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layer" Type="System.Int32"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="layer">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a layer selection field.</summary>
        <returns>int - The layer selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayerField">
      <MemberSignature Language="C#" Value="public static int LayerField (int layer, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layer" Type="System.Int32"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="layer">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a layer selection field.</summary>
        <returns>int - The layer selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayerField">
      <MemberSignature Language="C#" Value="public static int LayerField (string label, int layer, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="layer" Type="System.Int32"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="layer">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a layer selection field.</summary>
        <returns>int - The layer selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayerField">
      <MemberSignature Language="C#" Value="public static int LayerField (UnityEngine.GUIContent label, int layer, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="layer" Type="System.Int32"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="layer">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a layer selection field.</summary>
        <returns>int - The layer selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayerField">
      <MemberSignature Language="C#" Value="public static int LayerField (string label, int layer, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="layer" Type="System.Int32"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="layer">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a layer selection field.</summary>
        <returns>int - The layer selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayerField">
      <MemberSignature Language="C#" Value="public static int LayerField (UnityEngine.GUIContent label, int layer, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="layer" Type="System.Int32"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="layer">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a layer selection field.</summary>
        <returns>int - The layer selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaskField">
      <MemberSignature Language="C#" Value="public static int MaskField (int mask, string[] displayedOptions, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="System.String[]"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for masks.</summary>
        <returns>int - The value modified by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaskField">
      <MemberSignature Language="C#" Value="public static int MaskField (int mask, string[] displayedOptions, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="System.String[]"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for masks.</summary>
        <returns>int - The value modified by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaskField">
      <MemberSignature Language="C#" Value="public static int MaskField (string label, int mask, string[] displayedOptions, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="mask" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="System.String[]"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="mask">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for masks.</summary>
        <returns>int - The value modified by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaskField">
      <MemberSignature Language="C#" Value="public static int MaskField (UnityEngine.GUIContent label, int mask, string[] displayedOptions, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="mask" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="System.String[]"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="mask">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for masks.</summary>
        <returns>int - The value modified by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaskField">
      <MemberSignature Language="C#" Value="public static int MaskField (string label, int mask, string[] displayedOptions, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="mask" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="System.String[]"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="mask">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for masks.</summary>
        <returns>int - The value modified by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaskField">
      <MemberSignature Language="C#" Value="public static int MaskField (UnityEngine.GUIContent label, int mask, string[] displayedOptions, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="mask" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="System.String[]"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="mask">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for masks.</summary>
        <returns>int - The value modified by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinMaxSlider">
      <MemberSignature Language="C#" Value="public static void MinMaxSlider (ref float minValue, ref float maxValue, float minLimit, float maxLimit, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minValue" Type="System.Single&amp;" RefType="ref"/>
        <Parameter Name="maxValue" Type="System.Single&amp;" RefType="ref"/>
        <Parameter Name="minLimit" Type="System.Single"/>
        <Parameter Name="maxLimit" Type="System.Single"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="minValue">To be added.</param>
        <param name="maxValue">To be added.</param>
        <param name="minLimit">To be added.</param>
        <param name="maxLimit">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a special slider the user can use to specify a range between a min and a max.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinMaxSlider">
      <MemberSignature Language="C#" Value="public static void MinMaxSlider (UnityEngine.GUIContent label, ref float minValue, ref float maxValue, float minLimit, float maxLimit, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="minValue" Type="System.Single&amp;" RefType="ref"/>
        <Parameter Name="maxValue" Type="System.Single&amp;" RefType="ref"/>
        <Parameter Name="minLimit" Type="System.Single"/>
        <Parameter Name="maxLimit" Type="System.Single"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="minValue">To be added.</param>
        <param name="maxValue">To be added.</param>
        <param name="minLimit">To be added.</param>
        <param name="maxLimit">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a special slider the user can use to specify a range between a min and a max.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectField">
      <MemberSignature Language="C#" Value="public static UnityEngine.Object ObjectField (UnityEngine.Object obj, Type objType, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Check the docs for the usage of the new parameter 'allowSceneObjects'.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="UnityEngine.Object"/>
        <Parameter Name="objType" Type="System.Type"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="objType">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an object field. You can assign objects either by drag'n drop objects or by selecting an object using the Object Picker.</summary>
        <returns><see cref="T:UnityEditor.Object" /> - The object that has been set by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectField">
      <MemberSignature Language="C#" Value="public static UnityEngine.Object ObjectField (string label, UnityEngine.Object obj, Type objType, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Check the docs for the usage of the new parameter 'allowSceneObjects'.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="obj" Type="UnityEngine.Object"/>
        <Parameter Name="objType" Type="System.Type"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="obj">To be added.</param>
        <param name="objType">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an object field. You can assign objects either by drag'n drop objects or by selecting an object using the Object Picker.</summary>
        <returns><see cref="T:UnityEditor.Object" /> - The object that has been set by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectField">
      <MemberSignature Language="C#" Value="public static UnityEngine.Object ObjectField (UnityEngine.GUIContent label, UnityEngine.Object obj, Type objType, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Check the docs for the usage of the new parameter 'allowSceneObjects'.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>UnityEngine.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="obj" Type="UnityEngine.Object"/>
        <Parameter Name="objType" Type="System.Type"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="obj">To be added.</param>
        <param name="objType">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an object field. You can assign objects either by drag'n drop objects or by selecting an object using the Object Picker.</summary>
        <returns><see cref="T:UnityEditor.Object" /> - The object that has been set by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectField">
      <MemberSignature Language="C#" Value="public static UnityEngine.Object ObjectField (UnityEngine.Object obj, Type objType, bool allowSceneObjects, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="UnityEngine.Object"/>
        <Parameter Name="objType" Type="System.Type"/>
        <Parameter Name="allowSceneObjects" Type="System.Boolean"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="objType">To be added.</param>
        <param name="allowSceneObjects">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an object field. You can assign objects either by drag'n drop objects or by selecting an object using the Object Picker.</summary>
        <returns><see cref="T:UnityEditor.Object" /> - The object that has been set by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectField">
      <MemberSignature Language="C#" Value="public static UnityEngine.Object ObjectField (string label, UnityEngine.Object obj, Type objType, bool allowSceneObjects, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="obj" Type="UnityEngine.Object"/>
        <Parameter Name="objType" Type="System.Type"/>
        <Parameter Name="allowSceneObjects" Type="System.Boolean"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="obj">To be added.</param>
        <param name="objType">To be added.</param>
        <param name="allowSceneObjects">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an object field. You can assign objects either by drag'n drop objects or by selecting an object using the Object Picker.</summary>
        <returns><see cref="T:UnityEditor.Object" /> - The object that has been set by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectField">
      <MemberSignature Language="C#" Value="public static UnityEngine.Object ObjectField (UnityEngine.GUIContent label, UnityEngine.Object obj, Type objType, bool allowSceneObjects, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="obj" Type="UnityEngine.Object"/>
        <Parameter Name="objType" Type="System.Type"/>
        <Parameter Name="allowSceneObjects" Type="System.Boolean"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="obj">To be added.</param>
        <param name="objType">To be added.</param>
        <param name="allowSceneObjects">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an object field. You can assign objects either by drag'n drop objects or by selecting an object using the Object Picker.</summary>
        <returns><see cref="T:UnityEditor.Object" /> - The object that has been set by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordField">
      <MemberSignature Language="C#" Value="public static string PasswordField (string password, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="password">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field where the user can enter a password.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The password entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordField">
      <MemberSignature Language="C#" Value="public static string PasswordField (string label, string password, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="password" Type="System.String"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="password">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field where the user can enter a password.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The password entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordField">
      <MemberSignature Language="C#" Value="public static string PasswordField (string password, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="password">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field where the user can enter a password.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The password entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordField">
      <MemberSignature Language="C#" Value="public static string PasswordField (UnityEngine.GUIContent label, string password, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="password" Type="System.String"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="password">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field where the user can enter a password.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The password entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordField">
      <MemberSignature Language="C#" Value="public static string PasswordField (string label, string password, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="password" Type="System.String"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="password">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field where the user can enter a password.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The password entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordField">
      <MemberSignature Language="C#" Value="public static string PasswordField (UnityEngine.GUIContent label, string password, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="password" Type="System.String"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="password">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field where the user can enter a password.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The password entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public static int Popup (int selectedIndex, string[] displayedOptions, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="System.String[]"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="selectedIndex">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a generic popup selection field.</summary>
        <returns>int - The index of the option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public static int Popup (int selectedIndex, UnityEngine.GUIContent[] displayedOptions, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="UnityEngine.GUIContent[]"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="selectedIndex">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a generic popup selection field.</summary>
        <returns>int - The index of the option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public static int Popup (int selectedIndex, string[] displayedOptions, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="System.String[]"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="selectedIndex">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a generic popup selection field.</summary>
        <returns>int - The index of the option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public static int Popup (int selectedIndex, UnityEngine.GUIContent[] displayedOptions, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="UnityEngine.GUIContent[]"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="selectedIndex">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a generic popup selection field.</summary>
        <returns>int - The index of the option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public static int Popup (string label, int selectedIndex, string[] displayedOptions, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="selectedIndex" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="System.String[]"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="selectedIndex">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a generic popup selection field.</summary>
        <returns>int - The index of the option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public static int Popup (UnityEngine.GUIContent label, int selectedIndex, UnityEngine.GUIContent[] displayedOptions, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="selectedIndex" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="UnityEngine.GUIContent[]"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="selectedIndex">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a generic popup selection field.</summary>
        <returns>int - The index of the option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public static int Popup (string label, int selectedIndex, string[] displayedOptions, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="selectedIndex" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="System.String[]"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="selectedIndex">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a generic popup selection field.</summary>
        <returns>int - The index of the option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public static int Popup (UnityEngine.GUIContent label, int selectedIndex, UnityEngine.GUIContent[] displayedOptions, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="selectedIndex" Type="System.Int32"/>
        <Parameter Name="displayedOptions" Type="UnityEngine.GUIContent[]"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="selectedIndex">To be added.</param>
        <param name="displayedOptions">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a generic popup selection field.</summary>
        <returns>int - The index of the option that has been selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefixLabel">
      <MemberSignature Language="C#" Value="public static void PrefixLabel (string label);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <summary>Make a label in front of some control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefixLabel">
      <MemberSignature Language="C#" Value="public static void PrefixLabel (UnityEngine.GUIContent label);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <summary>Make a label in front of some control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefixLabel">
      <MemberSignature Language="C#" Value="public static void PrefixLabel (string label, UnityEngine.GUIStyle followingStyle);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="followingStyle" Type="UnityEngine.GUIStyle"/>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="followingStyle">To be added.</param>
        <summary>Make a label in front of some control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefixLabel">
      <MemberSignature Language="C#" Value="public static void PrefixLabel (UnityEngine.GUIContent label, UnityEngine.GUIStyle followingStyle);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="followingStyle" Type="UnityEngine.GUIStyle"/>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="followingStyle">To be added.</param>
        <summary>Make a label in front of some control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefixLabel">
      <MemberSignature Language="C#" Value="public static void PrefixLabel (string label, UnityEngine.GUIStyle followingStyle, UnityEngine.GUIStyle labelStyle);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="followingStyle" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="labelStyle" Type="UnityEngine.GUIStyle"/>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="followingStyle">To be added.</param>
        <param name="labelStyle">To be added.</param>
        <summary>Make a label in front of some control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefixLabel">
      <MemberSignature Language="C#" Value="public static void PrefixLabel (UnityEngine.GUIContent label, UnityEngine.GUIStyle followingStyle, UnityEngine.GUIStyle labelStyle);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="followingStyle" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="labelStyle" Type="UnityEngine.GUIStyle"/>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="followingStyle">To be added.</param>
        <param name="labelStyle">To be added.</param>
        <summary>Make a label in front of some control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyField">
      <MemberSignature Language="C#" Value="public static bool PropertyField (UnityEditor.SerializedProperty property, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="UnityEditor.SerializedProperty"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for <see cref="T:UnityEditor.SerializedProperty" />.</summary>
        <returns>boolean - True if the property has children and is expanded and includeChildren was set to false; otherwise false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyField">
      <MemberSignature Language="C#" Value="public static bool PropertyField (UnityEditor.SerializedProperty property, bool includeChildren, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="UnityEditor.SerializedProperty"/>
        <Parameter Name="includeChildren" Type="System.Boolean"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="includeChildren">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for <see cref="T:UnityEditor.SerializedProperty" />.</summary>
        <returns>boolean - True if the property has children and is expanded and includeChildren was set to false; otherwise false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyField">
      <MemberSignature Language="C#" Value="public static bool PropertyField (UnityEditor.SerializedProperty property, UnityEngine.GUIContent label, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="UnityEditor.SerializedProperty"/>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="label">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for <see cref="T:UnityEditor.SerializedProperty" />.</summary>
        <returns>boolean - True if the property has children and is expanded and includeChildren was set to false; otherwise false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyField">
      <MemberSignature Language="C#" Value="public static bool PropertyField (UnityEditor.SerializedProperty property, UnityEngine.GUIContent label, bool includeChildren, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="UnityEditor.SerializedProperty"/>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="includeChildren" Type="System.Boolean"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="label">To be added.</param>
        <param name="includeChildren">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a field for <see cref="T:UnityEditor.SerializedProperty" />.</summary>
        <returns>boolean - True if the property has children and is expanded and includeChildren was set to false; otherwise false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RectField">
      <MemberSignature Language="C#" Value="public static UnityEngine.Rect RectField (UnityEngine.Rect value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="UnityEngine.Rect"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an X, Y, W &amp; H field for entering a <see cref="T:UnityEditor.Rect" />.</summary>
        <returns><see cref="T:UnityEditor.Rect" /> - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RectField">
      <MemberSignature Language="C#" Value="public static UnityEngine.Rect RectField (string label, UnityEngine.Rect value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="value" Type="UnityEngine.Rect"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an X, Y, W &amp; H field for entering a <see cref="T:UnityEditor.Rect" />.</summary>
        <returns><see cref="T:UnityEditor.Rect" /> - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RectField">
      <MemberSignature Language="C#" Value="public static UnityEngine.Rect RectField (UnityEngine.GUIContent label, UnityEngine.Rect value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="value" Type="UnityEngine.Rect"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an X, Y, W &amp; H field for entering a <see cref="T:UnityEditor.Rect" />.</summary>
        <returns><see cref="T:UnityEditor.Rect" /> - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectableLabel">
      <MemberSignature Language="C#" Value="public static void SelectableLabel (string text, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a selectable label field. (Useful for showing read-only info that can be copy-pasted.)</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectableLabel">
      <MemberSignature Language="C#" Value="public static void SelectableLabel (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a selectable label field. (Useful for showing read-only info that can be copy-pasted.)</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Separator">
      <MemberSignature Language="C#" Value="public static void Separator ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slider">
      <MemberSignature Language="C#" Value="public static float Slider (float value, float leftValue, float rightValue, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single"/>
        <Parameter Name="leftValue" Type="System.Single"/>
        <Parameter Name="rightValue" Type="System.Single"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="leftValue">To be added.</param>
        <param name="rightValue">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a slider the user can drag to change a value between a min and a max.</summary>
        <returns>float - The value that has been set by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slider">
      <MemberSignature Language="C#" Value="public static void Slider (UnityEditor.SerializedProperty property, float leftValue, float rightValue, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="UnityEditor.SerializedProperty"/>
        <Parameter Name="leftValue" Type="System.Single"/>
        <Parameter Name="rightValue" Type="System.Single"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="leftValue">To be added.</param>
        <param name="rightValue">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a slider the user can drag to change a value between a min and a max.</summary>
        <remarks>To be added.</remarks>
      <returns>float - The value that has been set by the user.</returns></Docs>
    </Member>
    <Member MemberName="Slider">
      <MemberSignature Language="C#" Value="public static float Slider (string label, float value, float leftValue, float rightValue, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="value" Type="System.Single"/>
        <Parameter Name="leftValue" Type="System.Single"/>
        <Parameter Name="rightValue" Type="System.Single"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="leftValue">To be added.</param>
        <param name="rightValue">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a slider the user can drag to change a value between a min and a max.</summary>
        <returns>float - The value that has been set by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slider">
      <MemberSignature Language="C#" Value="public static void Slider (UnityEditor.SerializedProperty property, float leftValue, float rightValue, string label, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="UnityEditor.SerializedProperty"/>
        <Parameter Name="leftValue" Type="System.Single"/>
        <Parameter Name="rightValue" Type="System.Single"/>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="leftValue">To be added.</param>
        <param name="rightValue">To be added.</param>
        <param name="label">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a slider the user can drag to change a value between a min and a max.</summary>
        <remarks>To be added.</remarks>
      <returns>float - The value that has been set by the user.</returns></Docs>
    </Member>
    <Member MemberName="Slider">
      <MemberSignature Language="C#" Value="public static void Slider (UnityEditor.SerializedProperty property, float leftValue, float rightValue, UnityEngine.GUIContent label, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="UnityEditor.SerializedProperty"/>
        <Parameter Name="leftValue" Type="System.Single"/>
        <Parameter Name="rightValue" Type="System.Single"/>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="leftValue">To be added.</param>
        <param name="rightValue">To be added.</param>
        <param name="label">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a slider the user can drag to change a value between a min and a max.</summary>
        <remarks>To be added.</remarks>
      <returns>float - The value that has been set by the user.</returns></Docs>
    </Member>
    <Member MemberName="Slider">
      <MemberSignature Language="C#" Value="public static float Slider (UnityEngine.GUIContent label, float value, float leftValue, float rightValue, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="value" Type="System.Single"/>
        <Parameter Name="leftValue" Type="System.Single"/>
        <Parameter Name="rightValue" Type="System.Single"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="leftValue">To be added.</param>
        <param name="rightValue">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a slider the user can drag to change a value between a min and a max.</summary>
        <returns>float - The value that has been set by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Space">
      <MemberSignature Language="C#" Value="public static void Space ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Make a small space between the previous control and the following.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagField">
      <MemberSignature Language="C#" Value="public static string TagField (string tag, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="tag">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a tag selection field.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The tag selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagField">
      <MemberSignature Language="C#" Value="public static string TagField (string label, string tag, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="tag" Type="System.String"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="tag">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a tag selection field.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The tag selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagField">
      <MemberSignature Language="C#" Value="public static string TagField (string tag, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="tag">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a tag selection field.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The tag selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagField">
      <MemberSignature Language="C#" Value="public static string TagField (UnityEngine.GUIContent label, string tag, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="tag" Type="System.String"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="tag">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a tag selection field.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The tag selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagField">
      <MemberSignature Language="C#" Value="public static string TagField (string label, string tag, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="tag" Type="System.String"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="tag">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a tag selection field.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The tag selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagField">
      <MemberSignature Language="C#" Value="public static string TagField (UnityEngine.GUIContent label, string tag, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="tag" Type="System.String"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="tag">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a tag selection field.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The tag selected by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextArea">
      <MemberSignature Language="C#" Value="public static string TextArea (string text, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text area.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The text entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextArea">
      <MemberSignature Language="C#" Value="public static string TextArea (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text area.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The text entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextField">
      <MemberSignature Language="C#" Value="public static string TextField (string text, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The text entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextField">
      <MemberSignature Language="C#" Value="public static string TextField (string label, string text, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="text" Type="System.String"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="text">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The text entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextField">
      <MemberSignature Language="C#" Value="public static string TextField (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The text entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextField">
      <MemberSignature Language="C#" Value="public static string TextField (UnityEngine.GUIContent label, string text, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="text" Type="System.String"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="text">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The text entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextField">
      <MemberSignature Language="C#" Value="public static string TextField (string label, string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="text" Type="System.String"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="text">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The text entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextField">
      <MemberSignature Language="C#" Value="public static string TextField (UnityEngine.GUIContent label, string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="text" Type="System.String"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="text">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a text field.</summary>
        <returns><see cref="T:UnityEditor.String" /> - The text entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Toggle">
      <MemberSignature Language="C#" Value="public static bool Toggle (bool value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a toggle.</summary>
        <returns>boolean - The selected state of the toggle.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Toggle">
      <MemberSignature Language="C#" Value="public static bool Toggle (bool value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a toggle.</summary>
        <returns>boolean - The selected state of the toggle.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Toggle">
      <MemberSignature Language="C#" Value="public static bool Toggle (string label, bool value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="value" Type="System.Boolean"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a toggle.</summary>
        <returns>boolean - The selected state of the toggle.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Toggle">
      <MemberSignature Language="C#" Value="public static bool Toggle (UnityEngine.GUIContent label, bool value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="value" Type="System.Boolean"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a toggle.</summary>
        <returns>boolean - The selected state of the toggle.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Toggle">
      <MemberSignature Language="C#" Value="public static bool Toggle (string label, bool value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="value" Type="System.Boolean"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a toggle.</summary>
        <returns>boolean - The selected state of the toggle.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Toggle">
      <MemberSignature Language="C#" Value="public static bool Toggle (UnityEngine.GUIContent label, bool value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="UnityEngine.GUIContent"/>
        <Parameter Name="value" Type="System.Boolean"/>
        <Parameter Name="style" Type="UnityEngine.GUIStyle"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make a toggle.</summary>
        <returns>boolean - The selected state of the toggle.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vector2Field">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector2 Vector2Field (string label, UnityEngine.Vector2 value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="value" Type="UnityEngine.Vector2"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an X &amp; Y field for entering a <see cref="T:UnityEditor.Vector2" />.</summary>
        <returns><see cref="T:UnityEditor.Vector2" /> - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vector3Field">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector3 Vector3Field (string label, UnityEngine.Vector3 value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="value" Type="UnityEngine.Vector3"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an X, Y &amp; Z field for entering a <see cref="T:UnityEditor.Vector3" />.</summary>
        <returns><see cref="T:UnityEditor.Vector3" /> - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vector4Field">
      <MemberSignature Language="C#" Value="public static UnityEngine.Vector4 Vector4Field (string label, UnityEngine.Vector4 value, UnityEngine.GUILayoutOption[] options);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Vector4</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String"/>
        <Parameter Name="value" Type="UnityEngine.Vector4"/>
        <Parameter Name="options" Type="UnityEngine.GUILayoutOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Make an X, Y, Z &amp; W field for entering a <see cref="T:UnityEditor.Vector4" />.</summary>
        <returns><see cref="T:UnityEditor.Vector4" /> - The value entered by the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>