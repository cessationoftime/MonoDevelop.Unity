<?xml version="1.0"?>
<Type Name="Editor" FullName="UnityEditor.Editor">
  <TypeSignature Language="C#" Value="public class Editor : UnityEngine.ScriptableObject"/>
  <AssemblyInfo>
    <AssemblyName>UnityEditor</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>UnityEngine.ScriptableObject</BaseTypeName>
  </Base>
  <Interfaces/>
  <Docs>
    <summary>Base class to derive custom Editors from. Use this to create your own custom inspectors and editors for your objects.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Editor ();"/>
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters/>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawDefaultInspector">
      <MemberSignature Language="C#" Value="public bool DrawDefaultInspector ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Draw the built-in inspector.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawPropertiesExcluding">
      <MemberSignature Language="C#" Value="protected static void DrawPropertiesExcluding (UnityEditor.SerializedObject obj, string[] propertyToExclude);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="UnityEditor.SerializedObject"/>
        <Parameter Name="propertyToExclude" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="propertyToExclude">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInfoString">
      <MemberSignature Language="C#" Value="public virtual string GetInfoString ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Implement this method to show asset information on top of the asset preview.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreviewTitle">
      <MemberSignature Language="C#" Value="public virtual UnityEngine.GUIContent GetPreviewTitle ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.GUIContent</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Override this method if you want to change the label of the Preview area.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializedObjectInternal">
      <MemberSignature Language="C#" Value="protected virtual UnityEditor.SerializedObject GetSerializedObjectInternal ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEditor.SerializedObject</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPreviewGUI">
      <MemberSignature Language="C#" Value="public virtual bool HasPreviewGUI ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Override this method in subclasses if you implement OnPreviewGUI.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInspectorGUI">
      <MemberSignature Language="C#" Value="public virtual void OnInspectorGUI ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Implement this function to make a custom inspector.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGUI">
      <MemberSignature Language="C#" Value="public virtual void OnPreviewGUI (UnityEngine.Rect r, UnityEngine.GUIStyle background);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="UnityEngine.Rect"/>
        <Parameter Name="background" Type="UnityEngine.GUIStyle"/>
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="background">To be added.</param>
        <summary>Implement this method in a subclass if you want to have a preview field in the inspector.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewSettings">
      <MemberSignature Language="C#" Value="public virtual void OnPreviewSettings ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Override this method if you want to show custom controls in the preview header.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Repaint">
      <MemberSignature Language="C#" Value="public void Repaint ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Repaint any inspectors that shows this editor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="serializedObject">
      <MemberSignature Language="C#" Value="public UnityEditor.SerializedObject serializedObject { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEditor.SerializedObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:UnityEditor.SerializedObject" /> representing the object or objects being inspected.</summary>
        <value>To be added.</value>
        <remarks>See Also: <see cref="T:UnityEditor.Editor" /> class, <see cref="T:UnityEditor.SerializedObject" /> class</remarks>
      </Docs>
    </Member>
    <Member MemberName="target">
      <MemberSignature Language="C#" Value="public UnityEngine.Object target { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The object being inspected.</summary>
        <value>To be added.</value>
        <remarks>See Also: <see cref="P:UnityEditor.targets" />, <see cref="P:UnityEditor.serializedObject" />, <see cref="T:UnityEditor.Editor" /> class</remarks>
      </Docs>
    </Member>
    <Member MemberName="targets">
      <MemberSignature Language="C#" Value="public UnityEngine.Object[] targets { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnityEngine.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An array of all the object being inspected.</summary>
        <value>To be added.</value>
        <remarks>See Also: <see cref="P:UnityEditor.serializedObject" />, <see cref="T:UnityEditor.Editor" /> class</remarks>
      </Docs>
    </Member>
  </Members>
</Type>