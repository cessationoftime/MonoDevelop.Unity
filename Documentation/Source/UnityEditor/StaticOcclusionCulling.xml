<?xml version="1.0"?>
<Type Name="StaticOcclusionCulling" FullName="UnityEditor.StaticOcclusionCulling">
  <TypeSignature Language="C#" Value="public sealed class StaticOcclusionCulling"/>
  <AssemblyInfo>
    <AssemblyName>UnityEditor</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces/>
  <Docs>
    <summary>StaticOcclusionCulling lets you perform static occlusion culling operations</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StaticOcclusionCulling ();"/>
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters/>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public static void Cancel ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Used to cancel asynchronous generation of static occlusion culling data.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters/>
      <Docs>
        <summary>Clears the PVS of the opened scene</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute">
      <MemberSignature Language="C#" Value="public static bool Compute (float viewCellSize, float nearClipPlane, float farClipPlane, int memoryLimit, UnityEditor.StaticOcclusionCullingMode mode);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewCellSize" Type="System.Single"/>
        <Parameter Name="nearClipPlane" Type="System.Single"/>
        <Parameter Name="farClipPlane" Type="System.Single"/>
        <Parameter Name="memoryLimit" Type="System.Int32"/>
        <Parameter Name="mode" Type="UnityEditor.StaticOcclusionCullingMode"/>
      </Parameters>
      <Docs>
        <param name="viewCellSize">To be added.</param>
        <param name="nearClipPlane">To be added.</param>
        <param name="farClipPlane">To be added.</param>
        <param name="memoryLimit">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>Used to generate static occlusion culling data. This function will not return until occlusion data is generated.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="doesSceneHaveManualPortals">
      <MemberSignature Language="C#" Value="public static bool doesSceneHaveManualPortals { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="dynamicObjectDataSize">
      <MemberSignature Language="C#" Value="public static int dynamicObjectDataSize { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the size in bytes that the PVS data is currently taking up in this scene on disk</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateInBackground">
      <MemberSignature Language="C#" Value="public static bool GenerateInBackground (float viewCellSize, float nearClipPlane, float farClipPlane, int memoryLimit, UnityEditor.StaticOcclusionCullingMode mode);"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewCellSize" Type="System.Single"/>
        <Parameter Name="nearClipPlane" Type="System.Single"/>
        <Parameter Name="farClipPlane" Type="System.Single"/>
        <Parameter Name="memoryLimit" Type="System.Int32"/>
        <Parameter Name="mode" Type="UnityEditor.StaticOcclusionCullingMode"/>
      </Parameters>
      <Docs>
        <param name="viewCellSize">To be added.</param>
        <param name="nearClipPlane">To be added.</param>
        <param name="farClipPlane">To be added.</param>
        <param name="memoryLimit">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>Used to compute static occlusion culling data asynchronously.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="isRunning">
      <MemberSignature Language="C#" Value="public static bool isRunning { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used to check if asynchronous generation of static occlusion culling data is still running.</summary>
        <value>To be added.</value>
        <remarks>See Also: <see cref="P:UnityEditor.StaticOcclusionCulling.GenerateInBackground" />, <see cref="P:UnityEditor.StaticOcclusionCulling.Cancel" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="staticObjectDataSize">
      <MemberSignature Language="C#" Value="public static int staticObjectDataSize { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the size in bytes that the PVS data is currently taking up in this scene on disk</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="umbraDataSize">
      <MemberSignature Language="C#" Value="public static int umbraDataSize { get; }"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: UnityEngine.WrapperlessIcall</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the size in bytes that the PVS data is currently taking up in this scene on disk</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>