New Type: UnityEngine.AssemblyHelper
Member Added: public AssemblyHelper ();
Namespace Directory Created: UnityEngine
New Namespace File: UnityEngine
New Type: UnityEngine.SetupCoroutine
Member Added: public SetupCoroutine ();
Member Added: public static object InvokeMember (object behaviour, string name, object variable);
Member Added: public static object InvokeStatic (Type klass, string name, object variable);
New Type: UnityEngine.SendMouseEvents
Member Added: public SendMouseEvents ();
New Type: UnityEngine.StackTraceUtility
Member Added: public StackTraceUtility ();
Member Added: public static void SetProjectFolder (string folder);
Member Added: public static string ExtractStackTrace ();
Member Added: public static string ExtractStringFromException (Exception exception);
Member Added: public static System.Text.StringBuilder NicifyStacktrace (string oldString);
Member Added: public static System.Text.StringBuilder ProcessSplitCleanup (System.Collections.ArrayList cleanedUpsplit);
Member Added: public static System.Text.StringBuilder ExtractFormattedStackTrace (System.Diagnostics.StackTrace stackTrace);
New Type: UnityEngine.UnityException
Member Added: public UnityException ();
Member Added: public UnityException (string message);
Member Added: public UnityException (string message, Exception innerException);
Member Added: protected UnityException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
New Type: UnityEngine.MissingComponentException
Member Added: public MissingComponentException ();
Member Added: public MissingComponentException (string message);
Member Added: public MissingComponentException (string message, Exception innerException);
Member Added: protected MissingComponentException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
New Type: UnityEngine.UnassignedReferenceException
Member Added: public UnassignedReferenceException ();
Member Added: public UnassignedReferenceException (string message);
Member Added: public UnassignedReferenceException (string message, Exception innerException);
Member Added: protected UnassignedReferenceException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
New Type: UnityEngine.MissingReferenceException
Member Added: public MissingReferenceException ();
Member Added: public MissingReferenceException (string message);
Member Added: public MissingReferenceException (string message, Exception innerException);
Member Added: protected MissingReferenceException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
New Type: UnityEngine.TextEditor
Member Added: public TextEditor ();
Member Added: public int pos;
Member Added: public int selectPos;
Member Added: public int controlID;
Member Added: public UnityEngine.GUIContent content;
Member Added: public UnityEngine.GUIStyle style;
Member Added: public UnityEngine.Rect position;
Member Added: public bool multiline;
Member Added: public bool hasHorizontalCursorPos;
Member Added: public bool isPasswordField;
Member Added: public UnityEngine.Vector2 scrollOffset;
Member Added: public UnityEngine.Vector2 graphicalCursorPos;
Member Added: public UnityEngine.Vector2 graphicalSelectCursorPos;
Member Added: public void OnFocus ();
Member Added: public virtual void OnLostFocus ();
Member Added: public bool HandleKeyEvent (UnityEngine.Event e);
Member Added: public bool Delete ();
Member Added: public bool CanPaste ();
Member Added: public bool Backspace ();
Member Added: public void SelectAll ();
Member Added: public void SelectNone ();
Member Added: public bool DeleteSelection ();
Member Added: public void ReplaceSelection (string replace);
Member Added: public void Insert (char c);
Member Added: public void MoveSelectionToAltCursor ();
Member Added: public void MoveRight ();
Member Added: public void MoveLeft ();
Member Added: public void MoveUp ();
Member Added: public void MoveDown ();
Member Added: public void MoveLineStart ();
Member Added: public void MoveLineEnd ();
Member Added: public void MoveGraphicalLineStart ();
Member Added: public void MoveGraphicalLineEnd ();
Member Added: public void MoveTextStart ();
Member Added: public void MoveTextEnd ();
Member Added: public void MoveParagraphForward ();
Member Added: public void MoveParagraphBackward ();
Member Added: public void MoveCursorToPosition (UnityEngine.Vector2 cursorPosition);
Member Added: public void MoveAltCursorToPosition (UnityEngine.Vector2 cursorPosition);
Member Added: public bool IsOverSelection (UnityEngine.Vector2 cursorPosition);
Member Added: public void SelectToPosition (UnityEngine.Vector2 cursorPosition);
Member Added: public void SelectLeft ();
Member Added: public void SelectRight ();
Member Added: public void SelectUp ();
Member Added: public void SelectDown ();
Member Added: public void SelectTextEnd ();
Member Added: public void SelectTextStart ();
Member Added: public void MouseDragSelectsWholeWords (bool on);
Member Added: public void DblClickSnap (UnityEngine.TextEditor.DblClickSnapping snapping);
Member Added: public void MoveWordRight ();
Member Added: public void MoveToStartOfNextWord ();
Member Added: public void MoveToEndOfPreviousWord ();
Member Added: public void SelectToStartOfNextWord ();
Member Added: public void SelectToEndOfPreviousWord ();
Member Added: public int FindStartOfNextWord (int p);
Member Added: public void MoveWordLeft ();
Member Added: public void SelectWordRight ();
Member Added: public void SelectWordLeft ();
Member Added: public void ExpandSelectGraphicalLineStart ();
Member Added: public void ExpandSelectGraphicalLineEnd ();
Member Added: public void SelectGraphicalLineStart ();
Member Added: public void SelectGraphicalLineEnd ();
Member Added: public void SelectParagraphForward ();
Member Added: public void SelectParagraphBackward ();
Member Added: public void SelectCurrentWord ();
Member Added: public void SelectCurrentParagraph ();
Member Added: public void DrawCursor (string text);
Member Added: public void SaveBackup ();
Member Added: public void Undo ();
Member Added: public bool Cut ();
Member Added: public void Copy ();
Member Added: public bool Paste ();
Member Added: public void ClampPos ();
Member Added: public bool hasSelection { get; }
Member Added: public string SelectedText { get; }
New Type: UnityEngine.TextEditor/DblClickSnapping
Member Added: WORDS
Member Added: PARAGRAPHS
New Namespace File: 
Updating: UnityEngine.TextEditor/DblClickSnapping
New Type: UnityEngine.WrapMode
Member Added: Once
Member Added: Loop
Member Added: PingPong
Member Added: Default
Member Added: ClampForever
Member Added: Clamp
New Type: UnityEngine.AnimationEvent
Member Added: public AnimationEvent ();
Member Added: ~AnimationEvent ();
Member Added: public string data { set; get; }
Member Added: public string stringParameter { set; get; }
Member Added: public float floatParameter { set; get; }
Member Added: public UnityEngine.Object objectReferenceParameter { set; get; }
Member Added: public string functionName { set; get; }
Member Added: public float time { set; get; }
Member Added: public UnityEngine.SendMessageOptions messageOptions { set; get; }
Member Added: public UnityEngine.AnimationState animationState { get; }
New Type: UnityEngine.AnimationClip
Member Added: public AnimationClip ();
Member Added: public void SetCurve (string relativePath, Type type, string propertyName, UnityEngine.AnimationCurve curve);
Member Added: public void EnsureQuaternionContinuity ();
Member Added: public void ClearCurves ();
Member Added: public void AddEvent (UnityEngine.AnimationEvent evt);
Member Added: public float length { get; }
Member Added: public float frameRate { get; }
Member Added: public UnityEngine.WrapMode wrapMode { set; get; }
New Type: UnityEngine.Keyframe
Member Added: public Keyframe (float time, float value);
Member Added: public Keyframe (float time, float value, float inTangent, float outTangent);
Member Added: public float time { set; get; }
Member Added: public float value { set; get; }
Member Added: public float inTangent { set; get; }
Member Added: public float outTangent { set; get; }
Member Added: public int tangentMode { set; get; }
New Type: UnityEngine.AnimationCurve
Member Added: public AnimationCurve (UnityEngine.Keyframe[] keys);
Member Added: public AnimationCurve ();
Member Added: ~AnimationCurve ();
Member Added: public float Evaluate (float time);
Member Added: public int AddKey (float time, float value);
Member Added: public int AddKey (UnityEngine.Keyframe key);
Member Added: public int MoveKey (int index, UnityEngine.Keyframe key);
Member Added: public void RemoveKey (int index);
Member Added: public void SmoothTangents (int index, float weight);
Member Added: public static UnityEngine.AnimationCurve Linear (float timeStart, float valueStart, float timeEnd, float valueEnd);
Member Added: public static UnityEngine.AnimationCurve EaseInOut (float timeStart, float valueStart, float timeEnd, float valueEnd);
Member Added: public UnityEngine.Keyframe[] keys { set; get; }
Member Added: public UnityEngine.Keyframe this[int index] { get; }
Member Added: public int length { get; }
Member Added: public UnityEngine.WrapMode preWrapMode { set; get; }
Member Added: public UnityEngine.WrapMode postWrapMode { set; get; }
New Type: UnityEngine.PlayMode
Member Added: StopSameLayer
Member Added: StopAll
New Type: UnityEngine.QueueMode
Member Added: CompleteOthers
Member Added: PlayNow
New Type: UnityEngine.AnimationBlendMode
Member Added: Blend
Member Added: Additive
New Type: UnityEngine.AnimationPlayMode
Member Added: Stop
Member Added: Queue
Member Added: Mix
New Type: UnityEngine.Animation
Member Added: public Animation ();
Member Added: public void Stop ();
Member Added: public void Stop (string name);
Member Added: public void Rewind (string name);
Member Added: public void Rewind ();
Member Added: public void Sample ();
Member Added: public bool IsPlaying (string name);
Member Added: public bool Play ();
Member Added: public bool Play (UnityEngine.PlayMode mode);
Member Added: public bool Play (string animation, UnityEngine.PlayMode mode);
Member Added: public bool Play (string animation);
Member Added: public void CrossFade (string animation, float fadeLength, UnityEngine.PlayMode mode);
Member Added: public void CrossFade (string animation, float fadeLength);
Member Added: public void CrossFade (string animation);
Member Added: public void Blend (string animation, float targetWeight, float fadeLength);
Member Added: public void Blend (string animation, float targetWeight);
Member Added: public void Blend (string animation);
Member Added: public UnityEngine.AnimationState CrossFadeQueued (string animation, float fadeLength, UnityEngine.QueueMode queue, UnityEngine.PlayMode mode);
Member Added: public UnityEngine.AnimationState CrossFadeQueued (string animation, float fadeLength, UnityEngine.QueueMode queue);
Member Added: public UnityEngine.AnimationState CrossFadeQueued (string animation, float fadeLength);
Member Added: public UnityEngine.AnimationState CrossFadeQueued (string animation);
Member Added: public UnityEngine.AnimationState PlayQueued (string animation, UnityEngine.QueueMode queue, UnityEngine.PlayMode mode);
Member Added: public UnityEngine.AnimationState PlayQueued (string animation, UnityEngine.QueueMode queue);
Member Added: public UnityEngine.AnimationState PlayQueued (string animation);
Member Added: public void AddClip (UnityEngine.AnimationClip clip, string newName);
Member Added: public void AddClip (UnityEngine.AnimationClip clip, string newName, int firstFrame, int lastFrame, bool addLoopFrame);
Member Added: public void AddClip (UnityEngine.AnimationClip clip, string newName, int firstFrame, int lastFrame);
Member Added: public void RemoveClip (UnityEngine.AnimationClip clip);
Member Added: public void RemoveClip (string clipName);
Member Added: public int GetClipCount ();
Member Added: public bool Play (UnityEngine.AnimationPlayMode mode);
Member Added: public bool Play (string animation, UnityEngine.AnimationPlayMode mode);
Member Added: public void SyncLayer (int layer);
Member Added: public virtual System.Collections.IEnumerator GetEnumerator ();
Member Added: public UnityEngine.AnimationClip GetClip (string name);
Member Added: public UnityEngine.AnimationClip clip { set; get; }
Member Added: public bool playAutomatically { set; get; }
Member Added: public UnityEngine.WrapMode wrapMode { set; get; }
Member Added: public bool isPlaying { get; }
Member Added: public UnityEngine.AnimationState this[string name] { get; }
Member Added: public bool animatePhysics { set; get; }
Member Added: public bool animateOnlyIfVisible { set; get; }
New Type: UnityEngine.AnimationState
Member Added: public AnimationState ();
Member Added: public void AddMixingTransform (UnityEngine.Transform mix, bool recursive);
Member Added: public void AddMixingTransform (UnityEngine.Transform mix);
Member Added: public bool enabled { set; get; }
Member Added: public float weight { set; get; }
Member Added: public UnityEngine.WrapMode wrapMode { set; get; }
Member Added: public float time { set; get; }
Member Added: public float normalizedTime { set; get; }
Member Added: public float speed { set; get; }
Member Added: public float normalizedSpeed { set; get; }
Member Added: public float length { get; }
Member Added: public int layer { set; get; }
Member Added: public UnityEngine.AnimationClip clip { get; }
Member Added: public string name { set; get; }
Member Added: public UnityEngine.AnimationBlendMode blendMode { set; get; }
New Type: UnityEngine.ReferenceData
Member Added: public int instanceID;
Member Added: public int cachedPtr;
New Type: UnityEngine.HideFlags
Member Added: HideInHierarchy
Member Added: HideInInspector
Member Added: DontSave
Member Added: NotEditable
Member Added: HideAndDontSave
New Type: UnityEngine.Object
Member Added: public Object ();
Member Added: public override bool Equals (object o);
Member Added: public override int GetHashCode ();
Member Added: public int GetInstanceID ();
Member Added: public static UnityEngine.Object Instantiate (UnityEngine.Object original, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation);
Member Added: public static UnityEngine.Object Instantiate (UnityEngine.Object original);
Member Added: public static void Destroy (UnityEngine.Object obj, float t);
Member Added: public static void Destroy (UnityEngine.Object obj);
Member Added: public static void DestroyImmediate (UnityEngine.Object obj, bool allowDestroyingAssets);
Member Added: public static void DestroyImmediate (UnityEngine.Object obj);
Member Added: public static UnityEngine.Object[] FindObjectsOfType (Type type);
Member Added: public static UnityEngine.Object FindObjectOfType (Type type);
Member Added: public static void DontDestroyOnLoad (UnityEngine.Object target);
Member Added: public static void DestroyObject (UnityEngine.Object obj, float t);
Member Added: public static void DestroyObject (UnityEngine.Object obj);
Member Added: public static UnityEngine.Object[] FindSceneObjectsOfType (Type type);
Member Added: public static UnityEngine.Object[] FindObjectsOfTypeIncludingAssets (Type type);
Member Added: public static UnityEngine.Object[] FindObjectsOfTypeAll (Type type);
Member Added: public static bool op_Implicit (UnityEngine.Object exists);
Member Added: public static bool op_Equality (UnityEngine.Object x, UnityEngine.Object y);
Member Added: public static bool op_Inequality (UnityEngine.Object x, UnityEngine.Object y);
Member Added: public string name { set; get; }
Member Added: public UnityEngine.HideFlags hideFlags { set; get; }
New Type: UnityEngine.SendMessageOptions
Member Added: RequireReceiver
Member Added: DontRequireReceiver
New Type: UnityEngine.PrimitiveType
Member Added: Sphere
Member Added: Capsule
Member Added: Cylinder
Member Added: Cube
Member Added: Plane
New Type: UnityEngine.GameObject
Member Added: public GameObject (string name);
Member Added: public GameObject ();
Member Added: public GameObject (string name, Type[] components);
Member Added: public T GetComponent<T> () where T : UnityEngine.Component;
Member Added: public T GetComponentInChildren<T> () where T : UnityEngine.Component;
Member Added: public T[] GetComponents<T> () where T : UnityEngine.Component;
Member Added: public T[] GetComponentsInChildren<T> (bool includeInactive) where T : UnityEngine.Component;
Member Added: public T[] GetComponentsInChildren<T> () where T : UnityEngine.Component;
Member Added: public T AddComponent<T> () where T : UnityEngine.Component;
Member Added: public static UnityEngine.GameObject CreatePrimitive (UnityEngine.PrimitiveType type);
Member Added: public UnityEngine.Component GetComponent (Type type);
Member Added: public UnityEngine.Component GetComponent (string type);
Member Added: public UnityEngine.Component GetComponentInChildren (Type type);
Member Added: public UnityEngine.Component[] GetComponents (Type type);
Member Added: public UnityEngine.Component[] GetComponentsInChildren (Type type);
Member Added: public UnityEngine.Component[] GetComponentsInChildren (Type type, bool includeInactive);
Member Added: public void SetActiveRecursively (bool state);
Member Added: public bool CompareTag (string tag);
Member Added: public static UnityEngine.GameObject FindGameObjectWithTag (string tag);
Member Added: public static UnityEngine.GameObject FindWithTag (string tag);
Member Added: public static UnityEngine.GameObject[] FindGameObjectsWithTag (string tag);
Member Added: public void SendMessageUpwards (string methodName, object value, UnityEngine.SendMessageOptions options);
Member Added: public void SendMessageUpwards (string methodName, object value);
Member Added: public void SendMessageUpwards (string methodName);
Member Added: public void SendMessageUpwards (string methodName, UnityEngine.SendMessageOptions options);
Member Added: public void SendMessage (string methodName, object value, UnityEngine.SendMessageOptions options);
Member Added: public void SendMessage (string methodName, object value);
Member Added: public void SendMessage (string methodName);
Member Added: public void SendMessage (string methodName, UnityEngine.SendMessageOptions options);
Member Added: public void BroadcastMessage (string methodName, object parameter, UnityEngine.SendMessageOptions options);
Member Added: public void BroadcastMessage (string methodName, object parameter);
Member Added: public void BroadcastMessage (string methodName);
Member Added: public void BroadcastMessage (string methodName, UnityEngine.SendMessageOptions options);
Member Added: public UnityEngine.Component AddComponent (string className);
Member Added: public UnityEngine.Component AddComponent (Type componentType);
Member Added: public void SampleAnimation (UnityEngine.AnimationClip animation, float time);
Member Added: public void PlayAnimation (UnityEngine.AnimationClip animation);
Member Added: public void StopAnimation ();
Member Added: public static UnityEngine.GameObject Find (string name);
Member Added: public UnityEngine.Transform transform { get; }
Member Added: public UnityEngine.Rigidbody rigidbody { get; }
Member Added: public UnityEngine.Camera camera { get; }
Member Added: public UnityEngine.Light light { get; }
Member Added: public UnityEngine.Animation animation { get; }
Member Added: public UnityEngine.ConstantForce constantForce { get; }
Member Added: public UnityEngine.Renderer renderer { get; }
Member Added: public UnityEngine.AudioSource audio { get; }
Member Added: public UnityEngine.GUIText guiText { get; }
Member Added: public UnityEngine.NetworkView networkView { get; }
Member Added: public UnityEngine.GUIElement guiElement { get; }
Member Added: public UnityEngine.GUITexture guiTexture { get; }
Member Added: public UnityEngine.Collider collider { get; }
Member Added: public UnityEngine.HingeJoint hingeJoint { get; }
Member Added: public UnityEngine.ParticleEmitter particleEmitter { get; }
Member Added: public int layer { set; get; }
Member Added: public bool active { set; get; }
Member Added: public string tag { set; get; }
Member Added: public UnityEngine.GameObject gameObject { get; }
New Type: UnityEngine.Component
Member Added: public Component ();
Member Added: public T GetComponent<T> () where T : UnityEngine.Component;
Member Added: public T GetComponentInChildren<T> () where T : UnityEngine.Component;
Member Added: public T[] GetComponentsInChildren<T> (bool includeInactive) where T : UnityEngine.Component;
Member Added: public T[] GetComponentsInChildren<T> () where T : UnityEngine.Component;
Member Added: public T[] GetComponents<T> () where T : UnityEngine.Component;
Member Added: public UnityEngine.Component GetComponent (Type type);
Member Added: public UnityEngine.Component GetComponent (string type);
Member Added: public UnityEngine.Component GetComponentInChildren (Type t);
Member Added: public UnityEngine.Component[] GetComponentsInChildren (Type t);
Member Added: public UnityEngine.Component[] GetComponentsInChildren (Type t, bool includeInactive);
Member Added: public UnityEngine.Component[] GetComponents (Type type);
Member Added: public bool CompareTag (string tag);
Member Added: public void SendMessageUpwards (string methodName, object value, UnityEngine.SendMessageOptions options);
Member Added: public void SendMessageUpwards (string methodName, object value);
Member Added: public void SendMessageUpwards (string methodName);
Member Added: public void SendMessageUpwards (string methodName, UnityEngine.SendMessageOptions options);
Member Added: public void SendMessage (string methodName, object value, UnityEngine.SendMessageOptions options);
Member Added: public void SendMessage (string methodName, object value);
Member Added: public void SendMessage (string methodName);
Member Added: public void SendMessage (string methodName, UnityEngine.SendMessageOptions options);
Member Added: public void BroadcastMessage (string methodName, object parameter, UnityEngine.SendMessageOptions options);
Member Added: public void BroadcastMessage (string methodName, object parameter);
Member Added: public void BroadcastMessage (string methodName);
Member Added: public void BroadcastMessage (string methodName, UnityEngine.SendMessageOptions options);
Member Added: public UnityEngine.Transform transform { get; }
Member Added: public UnityEngine.Rigidbody rigidbody { get; }
Member Added: public UnityEngine.Camera camera { get; }
Member Added: public UnityEngine.Light light { get; }
Member Added: public UnityEngine.Animation animation { get; }
Member Added: public UnityEngine.ConstantForce constantForce { get; }
Member Added: public UnityEngine.Renderer renderer { get; }
Member Added: public UnityEngine.AudioSource audio { get; }
Member Added: public UnityEngine.GUIText guiText { get; }
Member Added: public UnityEngine.NetworkView networkView { get; }
Member Added: public UnityEngine.GUIElement guiElement { get; }
Member Added: public UnityEngine.GUITexture guiTexture { get; }
Member Added: public UnityEngine.Collider collider { get; }
Member Added: public UnityEngine.HingeJoint hingeJoint { get; }
Member Added: public UnityEngine.ParticleEmitter particleEmitter { get; }
Member Added: public UnityEngine.GameObject gameObject { get; }
Member Added: public bool active { set; get; }
Member Added: public string tag { set; get; }
New Type: UnityEngine.Behaviour
Member Added: public Behaviour ();
Member Added: public bool enabled { set; get; }
New Type: UnityEngine.Space
Member Added: World
Member Added: Self
New Type: UnityEngine.Transform
Member Added: public void Translate (UnityEngine.Vector3 translation);
Member Added: public void Translate (UnityEngine.Vector3 translation, UnityEngine.Space relativeTo);
Member Added: public void Translate (float x, float y, float z);
Member Added: public void Translate (float x, float y, float z, UnityEngine.Space relativeTo);
Member Added: public void Translate (UnityEngine.Vector3 translation, UnityEngine.Transform relativeTo);
Member Added: public void Translate (float x, float y, float z, UnityEngine.Transform relativeTo);
Member Added: public void Rotate (UnityEngine.Vector3 eulerAngles);
Member Added: public void Rotate (UnityEngine.Vector3 eulerAngles, UnityEngine.Space relativeTo);
Member Added: public void Rotate (float xAngle, float yAngle, float zAngle);
Member Added: public void Rotate (float xAngle, float yAngle, float zAngle, UnityEngine.Space relativeTo);
Member Added: public void Rotate (UnityEngine.Vector3 axis, float angle);
Member Added: public void Rotate (UnityEngine.Vector3 axis, float angle, UnityEngine.Space relativeTo);
Member Added: public void RotateAround (UnityEngine.Vector3 point, UnityEngine.Vector3 axis, float angle);
Member Added: public void LookAt (UnityEngine.Transform target);
Member Added: public void LookAt (UnityEngine.Transform target, UnityEngine.Vector3 worldUp);
Member Added: public void LookAt (UnityEngine.Vector3 worldPosition, UnityEngine.Vector3 worldUp);
Member Added: public void LookAt (UnityEngine.Vector3 worldPosition);
Member Added: public UnityEngine.Vector3 TransformDirection (UnityEngine.Vector3 direction);
Member Added: public UnityEngine.Vector3 TransformDirection (float x, float y, float z);
Member Added: public UnityEngine.Vector3 InverseTransformDirection (UnityEngine.Vector3 direction);
Member Added: public UnityEngine.Vector3 InverseTransformDirection (float x, float y, float z);
Member Added: public UnityEngine.Vector3 TransformPoint (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Vector3 TransformPoint (float x, float y, float z);
Member Added: public UnityEngine.Vector3 InverseTransformPoint (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Vector3 InverseTransformPoint (float x, float y, float z);
Member Added: public void DetachChildren ();
Member Added: public UnityEngine.Transform Find (string name);
Member Added: public bool IsChildOf (UnityEngine.Transform parent);
Member Added: public UnityEngine.Transform FindChild (string name);
Member Added: public virtual System.Collections.IEnumerator GetEnumerator ();
Member Added: public void RotateAround (UnityEngine.Vector3 axis, float angle);
Member Added: public void RotateAroundLocal (UnityEngine.Vector3 axis, float angle);
Member Added: public UnityEngine.Transform GetChild (int index);
Member Added: public int GetChildCount ();
Member Added: public UnityEngine.Vector3 position { set; get; }
Member Added: public UnityEngine.Vector3 localPosition { set; get; }
Member Added: public UnityEngine.Vector3 eulerAngles { set; get; }
Member Added: public UnityEngine.Vector3 localEulerAngles { set; get; }
Member Added: public UnityEngine.Vector3 right { set; get; }
Member Added: public UnityEngine.Vector3 up { set; get; }
Member Added: public UnityEngine.Vector3 forward { set; get; }
Member Added: public UnityEngine.Quaternion rotation { set; get; }
Member Added: public UnityEngine.Quaternion localRotation { set; get; }
Member Added: public UnityEngine.Vector3 localScale { set; get; }
Member Added: public UnityEngine.Transform parent { set; get; }
Member Added: public UnityEngine.Matrix4x4 worldToLocalMatrix { get; }
Member Added: public UnityEngine.Matrix4x4 localToWorldMatrix { get; }
Member Added: public UnityEngine.Transform root { get; }
Member Added: public int childCount { get; }
Member Added: public UnityEngine.Vector3 lossyScale { get; }
New Type: UnityEngine.MonoBehaviour
Member Added: public MonoBehaviour ();
Member Added: public const int kIgnoreRaycastLayer = 4;
Member Added: public const int kDefaultRaycastLayers = -5;
Member Added: public void Invoke (string methodName, float time);
Member Added: public void InvokeRepeating (string methodName, float time, float repeatRate);
Member Added: public void CancelInvoke ();
Member Added: public void CancelInvoke (string methodName);
Member Added: public bool IsInvoking (string methodName);
Member Added: public bool IsInvoking ();
Member Added: public UnityEngine.Coroutine StartCoroutine (System.Collections.IEnumerator routine);
Member Added: public UnityEngine.Coroutine StartCoroutine_Auto (System.Collections.IEnumerator routine);
Member Added: public UnityEngine.Coroutine StartCoroutine (string methodName, object value);
Member Added: public UnityEngine.Coroutine StartCoroutine (string methodName);
Member Added: public void StopCoroutine (string methodName);
Member Added: public void StopAllCoroutines ();
Member Added: public static void print (object o);
New Type: UnityEngine.Input
Member Added: public Input ();
Member Added: public static float GetAxis (string axisName);
Member Added: public static float GetAxisRaw (string axisName);
Member Added: public static bool GetButton (string buttonName);
Member Added: public static bool GetButtonDown (string buttonName);
Member Added: public static bool GetButtonUp (string buttonName);
Member Added: public static bool GetKey (string name);
Member Added: public static bool GetKey (UnityEngine.KeyCode key);
Member Added: public static bool GetKeyDown (string name);
Member Added: public static bool GetKeyDown (UnityEngine.KeyCode key);
Member Added: public static bool GetKeyUp (string name);
Member Added: public static bool GetKeyUp (UnityEngine.KeyCode key);
Member Added: public static string[] GetJoystickNames ();
Member Added: public static bool GetMouseButton (int button);
Member Added: public static bool GetMouseButtonDown (int button);
Member Added: public static bool GetMouseButtonUp (int button);
Member Added: public static void ResetInputAxes ();
Member Added: public static UnityEngine.Vector3 mousePosition { get; }
Member Added: public static bool anyKey { get; }
Member Added: public static bool anyKeyDown { get; }
Member Added: public static string inputString { get; }
New Type: UnityEngine.Time
Member Added: public Time ();
Member Added: public static float time { get; }
Member Added: public static float timeSinceLevelLoad { get; }
Member Added: public static float deltaTime { get; }
Member Added: public static float fixedTime { get; }
Member Added: public static float fixedDeltaTime { set; get; }
Member Added: public static float smoothDeltaTime { get; }
Member Added: public static float timeScale { set; get; }
Member Added: public static int frameCount { get; }
Member Added: public static int renderedFrameCount { get; }
Member Added: public static float realtimeSinceStartup { get; }
Member Added: public static int captureFramerate { set; get; }
New Type: UnityEngine.LayerMask
Member Added: public static string LayerToName (int layer);
Member Added: public static int NameToLayer (string layerName);
Member Added: public static int op_Implicit (UnityEngine.LayerMask mask);
Member Added: public static UnityEngine.LayerMask op_Implicit (int intVal);
Member Added: public int value { set; get; }
New Type: UnityEngine.RuntimePlatform
Member Added: OSXEditor
Member Added: OSXPlayer
Member Added: WindowsPlayer
Member Added: OSXWebPlayer
Member Added: OSXDashboardPlayer
Member Added: WindowsWebPlayer
Member Added: WiiPlayer
Member Added: WindowsEditor
New Type: UnityEngine.SystemLanguage
Member Added: Afrikaans
Member Added: Arabic
Member Added: Basque
Member Added: Belarusian
Member Added: Bulgarian
Member Added: Catalan
Member Added: Chinese
Member Added: Czech
Member Added: Danish
Member Added: Dutch
Member Added: English
Member Added: Estonian
Member Added: Faroese
Member Added: Finnish
Member Added: Frensh
Member Added: German
Member Added: Greek
Member Added: Hebrew
Member Added: Hugarian
Member Added: Icelandic
Member Added: Indonesian
Member Added: Italian
Member Added: Japanese
Member Added: Korean
Member Added: Latvian
Member Added: Lithuanian
Member Added: Norwegian
Member Added: Polish
Member Added: Portuguese
Member Added: Romanian
Member Added: Russian
Member Added: SerboCroatian
Member Added: Slovak
Member Added: Slovenian
Member Added: Spanish
Member Added: Swedish
Member Added: Thai
Member Added: Turkish
Member Added: Ukrainian
Member Added: Vietnamese
Member Added: Unknown
New Type: UnityEngine.LogType
Member Added: Error
Member Added: Assert
Member Added: Warning
Member Added: Log
Member Added: Exception
New Type: UnityEngine.Application
Member Added: public Application ();
Member Added: public static void Quit ();
Member Added: public static void CancelQuit ();
Member Added: public static void LoadLevel (int index);
Member Added: public static void LoadLevel (string name);
Member Added: public static UnityEngine.AsyncOperation LoadLevelAsync (string levelName);
Member Added: public static UnityEngine.AsyncOperation LoadLevelAdditiveAsync (string levelName);
Member Added: public static void LoadLevelAdditive (int index);
Member Added: public static void LoadLevelAdditive (string name);
Member Added: public static float GetStreamProgressForLevel (int levelIndex);
Member Added: public static float GetStreamProgressForLevel (string levelName);
Member Added: public static bool CanStreamedLevelBeLoaded (int levelIndex);
Member Added: public static bool CanStreamedLevelBeLoaded (string levelName);
Member Added: public static void CaptureScreenshot (string filename);
Member Added: public static void DontDestroyOnLoad (UnityEngine.Object mono);
Member Added: public static void ExternalCall (string functionName, object[] args);
Member Added: public static void ExternalEval (string script);
Member Added: public static void OpenURL (string url);
Member Added: public static void CommitSuicide (int mode);
Member Added: public static void RegisterLogCallback (UnityEngine.Application.LogCallback handler);
Member Added: public static int loadedLevel { get; }
Member Added: public static string loadedLevelName { get; }
Member Added: public static bool isLoadingLevel { get; }
Member Added: public static int levelCount { get; }
Member Added: public static int streamedBytes { get; }
Member Added: public static bool isPlaying { get; }
Member Added: public static bool isEditor { get; }
Member Added: public static UnityEngine.RuntimePlatform platform { get; }
Member Added: public static bool runInBackground { set; get; }
Member Added: public static bool isPlayer { get; }
Member Added: public static string dataPath { get; }
Member Added: public static string srcValue { get; }
Member Added: public static string absoluteURL { get; }
Member Added: public static string absoluteUrl { get; }
Member Added: public static string unityVersion { get; }
Member Added: public static int targetFrameRate { set; get; }
Member Added: public static UnityEngine.SystemLanguage systemLanguage { get; }
Member Added: public static UnityEngine.ThreadPriority backgroundLoadingPriority { set; get; }
New Type: UnityEngine.Application/LogCallback
New Type: UnityEngine.AudioClip
Member Added: public AudioClip ();
Member Added: public float length { get; }
Member Added: public int samples { get; }
Member Added: public int channels { get; }
Member Added: public int frequency { get; }
Member Added: public bool isReadyToPlay { get; }
New Type: UnityEngine.AudioVelocityUpdateMode
Member Added: Auto
Member Added: Fixed
Member Added: Dynamic
New Type: UnityEngine.AudioListener
Member Added: public AudioListener ();
Member Added: public static float volume { set; get; }
Member Added: public static bool pause { set; get; }
Member Added: public UnityEngine.AudioVelocityUpdateMode velocityUpdateMode { set; get; }
New Type: UnityEngine.AudioSource
Member Added: public AudioSource ();
Member Added: public void Play ();
Member Added: public void Stop ();
Member Added: public void Pause ();
Member Added: public void PlayOneShot (UnityEngine.AudioClip clip, float volumeScale);
Member Added: public void PlayOneShot (UnityEngine.AudioClip clip);
Member Added: public static void PlayClipAtPoint (UnityEngine.AudioClip clip, UnityEngine.Vector3 position);
Member Added: public static void PlayClipAtPoint (UnityEngine.AudioClip clip, UnityEngine.Vector3 position, float volume);
Member Added: public float volume { set; get; }
Member Added: public float pitch { set; get; }
Member Added: public float time { set; get; }
Member Added: public int timeSamples { set; get; }
Member Added: public UnityEngine.AudioClip clip { set; get; }
Member Added: public bool isPlaying { get; }
Member Added: public bool loop { set; get; }
Member Added: public bool ignoreListenerVolume { set; get; }
Member Added: public bool playOnAwake { set; get; }
Member Added: public float minVolume { set; get; }
Member Added: public float maxVolume { set; get; }
Member Added: public float rolloffFactor { set; get; }
Member Added: public UnityEngine.AudioVelocityUpdateMode velocityUpdateMode { set; get; }
New Type: UnityEngine.Debug
Member Added: public Debug ();
Member Added: public static void DrawLine (UnityEngine.Vector3 start, UnityEngine.Vector3 end, UnityEngine.Color color);
Member Added: public static void DrawLine (UnityEngine.Vector3 start, UnityEngine.Vector3 end);
Member Added: public static void DrawRay (UnityEngine.Vector3 start, UnityEngine.Vector3 dir);
Member Added: public static void DrawRay (UnityEngine.Vector3 start, UnityEngine.Vector3 dir, UnityEngine.Color color);
Member Added: public static void Break ();
Member Added: public static void DebugBreak ();
Member Added: public static void Log (object message);
Member Added: public static void Log (object message, UnityEngine.Object context);
Member Added: public static void LogError (object message);
Member Added: public static void LogError (object message, UnityEngine.Object context);
Member Added: public static void LogWarning (object message);
Member Added: public static void LogWarning (object message, UnityEngine.Object context);
Member Added: public static bool isDebugBuild { get; }
New Type: UnityEngine.Random
Member Added: public Random ();
Member Added: public static float Range (float min, float max);
Member Added: public static int Range (int min, int max);
Member Added: public static float RandomRange (float min, float max);
Member Added: public static int RandomRange (int min, int max);
Member Added: public static int seed { set; get; }
Member Added: public static float value { get; }
Member Added: public static UnityEngine.Vector3 insideUnitSphere { get; }
Member Added: public static UnityEngine.Vector2 insideUnitCircle { get; }
Member Added: public static UnityEngine.Vector3 onUnitSphere { get; }
Member Added: public static UnityEngine.Quaternion rotation { get; }
New Type: UnityEngine.PlayerPrefs
Member Added: public PlayerPrefs ();
Member Added: public static void SetInt (string key, int value);
Member Added: public static int GetInt (string key, int defaultValue);
Member Added: public static int GetInt (string key);
Member Added: public static void SetFloat (string key, float value);
Member Added: public static float GetFloat (string key, float defaultValue);
Member Added: public static float GetFloat (string key);
Member Added: public static void SetString (string key, string value);
Member Added: public static string GetString (string key, string defaultValue);
Member Added: public static string GetString (string key);
Member Added: public static bool HasKey (string key);
Member Added: public static void DeleteKey (string key);
Member Added: public static void DeleteAll ();
New Type: UnityEngine.PlayerPrefsException
Member Added: public PlayerPrefsException (string error);
New Type: UnityEngine.SystemInfo
Member Added: public SystemInfo ();
Member Added: public static bool SupportsRenderTextureFormat (UnityEngine.RenderTextureFormat format);
Member Added: public static string operatingSystem { get; }
Member Added: public static string processorType { get; }
Member Added: public static int processorCount { get; }
Member Added: public static int systemMemorySize { get; }
Member Added: public static int graphicsMemorySize { get; }
Member Added: public static string graphicsDeviceName { get; }
Member Added: public static string graphicsDeviceVendor { get; }
Member Added: public static string graphicsDeviceVersion { get; }
Member Added: public static int graphicsShaderLevel { get; }
Member Added: public static bool supportsShadows { get; }
Member Added: public static bool supportsRenderTextures { get; }
Member Added: public static bool supportsImageEffects { get; }
Member Added: public static bool supportsVertexPrograms { get; }
New Type: UnityEngine.YieldInstruction
Member Added: public YieldInstruction ();
New Type: UnityEngine.WaitForSeconds
Member Added: public WaitForSeconds (float seconds);
New Type: UnityEngine.WaitForFixedUpdate
Member Added: public WaitForFixedUpdate ();
New Type: UnityEngine.WaitForEndOfFrame
Member Added: public WaitForEndOfFrame ();
New Type: UnityEngine.Coroutine
Member Added: ~Coroutine ();
New Type: UnityEngine.RequireComponent
Member Added: public RequireComponent (Type requiredComponent);
Member Added: public RequireComponent (Type requiredComponent, Type requiredComponent2);
Member Added: public RequireComponent (Type requiredComponent, Type requiredComponent2, Type requiredComponent3);
Member Added: public Type m_Type0;
Member Added: public Type m_Type1;
Member Added: public Type m_Type2;
New Type: UnityEngine.AddComponentMenu
Member Added: public AddComponentMenu (string menuName);
Member Added: public string componentMenu { get; }
New Type: UnityEngine.ContextMenu
Member Added: public ContextMenu (string name);
Member Added: public string menuItem { get; }
New Type: UnityEngine.ExecuteInEditMode
Member Added: public ExecuteInEditMode ();
New Type: UnityEngine.HideInInspector
Member Added: public HideInInspector ();
New Type: UnityEngine.ScriptableObject
Member Added: public ScriptableObject ();
Member Added: public void SetDirty ();
Member Added: public static UnityEngine.ScriptableObject CreateInstance (string className);
New Type: UnityEngine.AssetUtility
Member Added: public AssetUtility ();
Member Added: public static UnityEngine.Object CreateEngineObject (string className);
Member Added: public static void CreateAsset (UnityEngine.Object theAsset, string assetName, string extension);
Member Added: public static void CreateAsset (UnityEngine.Object theAsset, string assetName);
Member Added: public static void AddAssetToSameFile (UnityEngine.Object newAsset, UnityEngine.Object sameAssetFile);
Member Added: public static void SaveAsset (UnityEngine.Object newAsset);
Member Added: public static UnityEngine.Object LoadWithPathAndFileID (string path, int i);
Member Added: public static int GetObjectCountAtPath (string path);
New Type: UnityEngine.RefCounted
Member Added: protected RefCounted ();
Member Added: ~RefCounted ();
Member Added: public override bool Equals (object o);
Member Added: public override int GetHashCode ();
Member Added: public static bool op_Equality (UnityEngine.RefCounted x, UnityEngine.RefCounted y);
Member Added: public static bool op_Inequality (UnityEngine.RefCounted x, UnityEngine.RefCounted y);
Member Added: public static bool op_Implicit (UnityEngine.RefCounted exists);
New Type: UnityEngine.TrackedReference
Member Added: protected TrackedReference ();
Member Added: public override bool Equals (object o);
Member Added: public override int GetHashCode ();
Member Added: public static bool op_Equality (UnityEngine.TrackedReference x, UnityEngine.TrackedReference y);
Member Added: public static bool op_Inequality (UnityEngine.TrackedReference x, UnityEngine.TrackedReference y);
Member Added: public static bool op_Implicit (UnityEngine.TrackedReference exists);
New Type: UnityEngine.Resources
Member Added: public Resources ();
Member Added: public static UnityEngine.Object Load (string path);
Member Added: public static UnityEngine.Object Load (string path, Type type);
Member Added: public static UnityEngine.Object[] LoadAll (string path, Type type);
Member Added: public static UnityEngine.Object[] LoadAll (string path);
Member Added: public static UnityEngine.Object GetBuiltinResource (Type type, string path);
Member Added: public static UnityEngine.Object LoadAssetAtPath (string assetPath, Type type);
Member Added: public static UnityEngine.AsyncOperation UnloadUnusedAssets ();
New Type: UnityEngine.AsyncOperation
Member Added: public AsyncOperation ();
Member Added: ~AsyncOperation ();
Member Added: public bool isDone { get; }
Member Added: public float progress { get; }
Member Added: public int priority { set; get; }
New Type: UnityEngine.AssetBundleRequest
Member Added: public AssetBundleRequest ();
Member Added: public UnityEngine.Object asset { get; }
New Type: UnityEngine.AssetBundle
Member Added: public AssetBundle ();
Member Added: public bool Contains (string name);
Member Added: public UnityEngine.Object Load (string name);
Member Added: public UnityEngine.Object Load (string name, Type type);
Member Added: public UnityEngine.AssetBundleRequest LoadAsync (string name, Type type);
Member Added: public UnityEngine.Object[] LoadAll (Type type);
Member Added: public UnityEngine.Object[] LoadAll ();
Member Added: public void Unload (bool unloadAllLoadedObjects);
Member Added: public UnityEngine.Object mainAsset { get; }
New Type: UnityEngine.SerializePrivateVariables
Member Added: public SerializePrivateVariables ();
New Type: UnityEngine.ThreadPriority
Member Added: Low
Member Added: BelowNormal
Member Added: Normal
Member Added: High
New Type: UnityEngine.SerializeField
Member Added: public SerializeField ();
New Type: UnityEngine.Profiler
Member Added: public Profiler ();
Member Added: public static void BeginSample (string name);
Member Added: public static void EndSample ();
Member Added: public static string logFile { set; get; }
Member Added: public static bool enabled { set; get; }
New Type: UnityEngine.LightType
Member Added: Spot
Member Added: Directional
Member Added: Point
New Type: UnityEngine.LightRenderMode
Member Added: Auto
Member Added: ForcePixel
Member Added: ForceVertex
New Type: UnityEngine.LightShadows
Member Added: None
Member Added: Hard
Member Added: Soft
New Type: UnityEngine.Light
Member Added: public Light ();
Member Added: public static UnityEngine.Light[] GetLights (UnityEngine.LightType type, int layer);
Member Added: public UnityEngine.LightType type { set; get; }
Member Added: public UnityEngine.Color color { set; get; }
Member Added: public float intensity { set; get; }
Member Added: public UnityEngine.LightShadows shadows { set; get; }
Member Added: public float shadowStrength { set; get; }
Member Added: public float shadowConstantBias { set; get; }
Member Added: public float shadowObjectSizeBias { set; get; }
Member Added: public bool attenuate { set; get; }
Member Added: public float range { set; get; }
Member Added: public float spotAngle { set; get; }
Member Added: public UnityEngine.Texture cookie { set; get; }
Member Added: public UnityEngine.Flare flare { set; get; }
Member Added: public UnityEngine.LightRenderMode renderMode { set; get; }
Member Added: public int cullingMask { set; get; }
Member Added: public static int pixelLightCount { set; get; }
New Type: UnityEngine.RenderSettings
Member Added: public RenderSettings ();
Member Added: public static bool fog { set; get; }
Member Added: public static UnityEngine.Color fogColor { set; get; }
Member Added: public static float fogDensity { set; get; }
Member Added: public static UnityEngine.Color ambientLight { set; get; }
Member Added: public static float haloStrength { set; get; }
Member Added: public static float flareStrength { set; get; }
Member Added: public static UnityEngine.Material skybox { set; get; }
New Type: UnityEngine.QualityLevel
Member Added: Fastest
Member Added: Fast
Member Added: Simple
Member Added: Good
Member Added: Beautiful
Member Added: Fantastic
New Type: UnityEngine.QualitySettings
Member Added: public QualitySettings ();
Member Added: public static void IncreaseLevel ();
Member Added: public static void DecreaseLevel ();
Member Added: public static UnityEngine.QualityLevel currentLevel { set; get; }
Member Added: public static int pixelLightCount { set; get; }
Member Added: public static int shadowCascades { set; get; }
Member Added: public static float shadowDistance { set; get; }
Member Added: public static int masterTextureLimit { set; get; }
Member Added: public static UnityEngine.AnisotropicFiltering anisotropicFiltering { set; get; }
Member Added: public static bool softVegetation { set; get; }
Member Added: public static int maxQueuedFrames { set; get; }
New Type: UnityEngine.CameraClearFlags
Member Added: Skybox
Member Added: Color
Member Added: SolidColor
Member Added: Depth
Member Added: Nothing
New Type: UnityEngine.DepthTextureMode
Member Added: None
Member Added: Depth
Member Added: DepthNormals
New Type: UnityEngine.Camera
Member Added: public Camera ();
Member Added: public void ResetWorldToCameraMatrix ();
Member Added: public void ResetProjectionMatrix ();
Member Added: public void ResetAspect ();
Member Added: public UnityEngine.Vector3 WorldToScreenPoint (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Vector3 WorldToViewportPoint (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Vector3 ViewportToWorldPoint (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Vector3 ScreenToWorldPoint (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Vector3 ScreenToViewportPoint (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Vector3 ViewportToScreenPoint (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Ray ViewportPointToRay (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Ray ScreenPointToRay (UnityEngine.Vector3 position);
Member Added: public float GetScreenWidth ();
Member Added: public float GetScreenHeight ();
Member Added: public void DoClear ();
Member Added: public void Render ();
Member Added: public void RenderWithShader (UnityEngine.Shader shader, string replacementTag);
Member Added: public void SetReplacementShader (UnityEngine.Shader shader, string replacementTag);
Member Added: public void ResetReplacementShader ();
Member Added: public void RenderDontRestore ();
Member Added: public static void SetupCurrent (UnityEngine.Camera cur);
Member Added: public bool RenderToCubemap (UnityEngine.Cubemap cubemap);
Member Added: public bool RenderToCubemap (UnityEngine.Cubemap cubemap, int faceMask);
Member Added: public bool RenderToCubemap (UnityEngine.RenderTexture cubemap);
Member Added: public bool RenderToCubemap (UnityEngine.RenderTexture cubemap, int faceMask);
Member Added: public void CopyFrom (UnityEngine.Camera other);
Member Added: public float fov { set; get; }
Member Added: public float near { set; get; }
Member Added: public float far { set; get; }
Member Added: public float fieldOfView { set; get; }
Member Added: public float nearClipPlane { set; get; }
Member Added: public float farClipPlane { set; get; }
Member Added: public float orthographicSize { set; get; }
Member Added: public bool orthographic { set; get; }
Member Added: public bool isOrthoGraphic { set; get; }
Member Added: public float depth { set; get; }
Member Added: public float aspect { set; get; }
Member Added: public int cullingMask { set; get; }
Member Added: public UnityEngine.Color backgroundColor { set; get; }
Member Added: public UnityEngine.Rect rect { set; get; }
Member Added: public UnityEngine.Rect pixelRect { set; get; }
Member Added: public UnityEngine.RenderTexture targetTexture { set; get; }
Member Added: public float pixelWidth { get; }
Member Added: public float pixelHeight { get; }
Member Added: public UnityEngine.Matrix4x4 cameraToWorldMatrix { get; }
Member Added: public UnityEngine.Matrix4x4 worldToCameraMatrix { set; get; }
Member Added: public UnityEngine.Matrix4x4 projectionMatrix { set; get; }
Member Added: public UnityEngine.Vector3 velocity { get; }
Member Added: public UnityEngine.CameraClearFlags clearFlags { set; get; }
Member Added: public static UnityEngine.Camera main { get; }
Member Added: public static UnityEngine.Camera current { get; }
Member Added: public static UnityEngine.Camera[] allCameras { get; }
Member Added: public static UnityEngine.Camera mainCamera { get; }
Member Added: public float[] layerCullDistances { set; get; }
Member Added: public UnityEngine.DepthTextureMode depthTextureMode { set; get; }
New Type: UnityEngine.TexGenMode
Member Added: None
Member Added: SphereMap
Member Added: Object
Member Added: EyeLinear
Member Added: CubeReflect
Member Added: CubeNormal
New Type: UnityEngine.Shader
Member Added: public Shader ();
Member Added: public static void ClearAll ();
Member Added: public static UnityEngine.Shader Find (string name);
Member Added: public static void EnableKeyword (string keyword);
Member Added: public static void DisableKeyword (string keyword);
Member Added: public static void SetGlobalColor (string propertyName, UnityEngine.Color color);
Member Added: public static void SetGlobalVector (string propertyName, UnityEngine.Vector4 vec);
Member Added: public static void SetGlobalFloat (string propertyName, float value);
Member Added: public static void SetGlobalTexture (string propertyName, UnityEngine.Texture tex);
Member Added: public static void SetGlobalMatrix (string propertyName, UnityEngine.Matrix4x4 mat);
Member Added: public static void SetGlobalTexGenMode (string propertyName, UnityEngine.TexGenMode mode);
Member Added: public static void SetGlobalTextureMatrixName (string propertyName, string matrixName);
Member Added: public void SetStaticFloat (string propertyName, float value);
Member Added: public float GetStaticFloat (string propertyName);
Member Added: public void SetStaticColor (string propertyName, UnityEngine.Color color);
Member Added: public UnityEngine.Color GetStaticColor (string propertyName);
Member Added: public void SetStaticTexture (string propertyName, UnityEngine.Texture texture);
Member Added: public UnityEngine.Texture GetStaticTexture (string propertyName);
Member Added: public static int PropertyToID (string name);
Member Added: public bool isSupported { get; }
Member Added: public int maximumLOD { set; get; }
Member Added: public static int globalMaximumLOD { set; get; }
Member Added: public int renderQueue { get; }
New Type: UnityEngine.AnisotropicFiltering
Member Added: Disable
Member Added: Enable
Member Added: ForceEnable
New Type: UnityEngine.FilterMode
Member Added: Point
Member Added: Bilinear
Member Added: Trilinear
New Type: UnityEngine.TextureWrapMode
Member Added: Repeat
Member Added: Clamp
New Type: UnityEngine.Texture
Member Added: public Texture ();
Member Added: public static int masterTextureLimit { set; get; }
Member Added: public static UnityEngine.AnisotropicFiltering anisotropicFiltering { set; get; }
Member Added: public virtual int width { set; get; }
Member Added: public virtual int height { set; get; }
Member Added: public UnityEngine.FilterMode filterMode { set; get; }
Member Added: public int anisoLevel { set; get; }
Member Added: public UnityEngine.TextureWrapMode wrapMode { set; get; }
Member Added: public float mipMapBias { set; get; }
Member Added: public UnityEngine.Vector2 texelSize { get; }
New Type: UnityEngine.TextureFormat
Member Added: Alpha8
Member Added: RGB24
Member Added: ARGB32
Member Added: DXT1
Member Added: DXT5
Member Added: PVRTC_RGB2
Member Added: PVRTC_RGBA2
Member Added: PVRTC_RGB4
Member Added: PVRTC_RGBA4
Member Added: PVRTC_2BPP_RGB
Member Added: PVRTC_2BPP_RGBA
Member Added: PVRTC_4BPP_RGB
Member Added: PVRTC_4BPP_RGBA
New Type: UnityEngine.Texture2D
Member Added: public Texture2D (int width, int height);
Member Added: public Texture2D (int width, int height, UnityEngine.TextureFormat format, bool mipmap);
Member Added: public void SetPixel (int x, int y, UnityEngine.Color color);
Member Added: public UnityEngine.Color GetPixel (int x, int y);
Member Added: public UnityEngine.Color GetPixelBilinear (float u, float v);
Member Added: public void SetPixels (UnityEngine.Color[] colors);
Member Added: public void SetPixels (UnityEngine.Color[] colors, int miplevel);
Member Added: public void SetPixels (int x, int y, int blockWidth, int blockHeight, UnityEngine.Color[] colors, int miplevel);
Member Added: public void SetPixels (int x, int y, int blockWidth, int blockHeight, UnityEngine.Color[] colors);
Member Added: public bool LoadImage (byte[] data);
Member Added: public UnityEngine.Color[] GetPixels ();
Member Added: public UnityEngine.Color[] GetPixels (int miplevel);
Member Added: public UnityEngine.Color[] GetPixels (int x, int y, int blockWidth, int blockHeight, int miplevel);
Member Added: public UnityEngine.Color[] GetPixels (int x, int y, int blockWidth, int blockHeight);
Member Added: public void Apply (bool updateMipmaps);
Member Added: public void Apply ();
Member Added: public bool Resize (int width, int height, UnityEngine.TextureFormat format, bool hasMipMap);
Member Added: public bool Resize (int width, int height);
Member Added: public void Compress (bool highQuality);
Member Added: public UnityEngine.Rect[] PackTextures (UnityEngine.Texture2D[] textures, int padding, int maximumAtlasSize);
Member Added: public UnityEngine.Rect[] PackTextures (UnityEngine.Texture2D[] textures, int padding);
Member Added: public void ReadPixels (UnityEngine.Rect source, int destX, int destY, bool recalculateMipMaps);
Member Added: public void ReadPixels (UnityEngine.Rect source, int destX, int destY);
Member Added: public byte[] EncodeToPNG ();
Member Added: public int mipmapCount { get; }
Member Added: public UnityEngine.TextureFormat format { get; }
New Type: UnityEngine.CubemapFace
Member Added: PositiveX
Member Added: NegativeX
Member Added: PositiveY
Member Added: NegativeY
Member Added: PositiveZ
Member Added: NegativeZ
New Type: UnityEngine.Cubemap
Member Added: public Cubemap (int size, UnityEngine.TextureFormat format, bool mipmap);
Member Added: public void SetPixel (UnityEngine.CubemapFace face, int x, int y, UnityEngine.Color color);
Member Added: public UnityEngine.Color GetPixel (UnityEngine.CubemapFace face, int x, int y);
Member Added: public UnityEngine.Color[] GetPixels (UnityEngine.CubemapFace face, int miplevel);
Member Added: public UnityEngine.Color[] GetPixels (UnityEngine.CubemapFace face);
Member Added: public void SetPixels (UnityEngine.Color[] colors, UnityEngine.CubemapFace face, int miplevel);
Member Added: public void SetPixels (UnityEngine.Color[] colors, UnityEngine.CubemapFace face);
Member Added: public void Apply (bool updateMipmaps);
Member Added: public void Apply ();
Member Added: public UnityEngine.TextureFormat format { get; }
New Type: UnityEngine.MeshFilter
Member Added: public MeshFilter ();
Member Added: public UnityEngine.Mesh mesh { set; get; }
Member Added: public UnityEngine.Mesh sharedMesh { set; get; }
New Type: UnityEngine.CombineInstance
Member Added: public UnityEngine.Mesh mesh { set; get; }
Member Added: public int subMeshIndex { set; get; }
Member Added: public UnityEngine.Matrix4x4 transform { set; get; }
New Type: UnityEngine.Mesh
Member Added: public Mesh ();
Member Added: public void Clear ();
Member Added: public void RecalculateBounds ();
Member Added: public void RecalculateNormals ();
Member Added: public void Optimize ();
Member Added: public int[] GetTriangles (int submesh);
Member Added: public void SetTriangles (int[] triangles, int submesh);
Member Added: public void SetTriangleStrip (int[] triangles, int submesh);
Member Added: public int[] GetTriangleStrip (int submesh);
Member Added: public void CombineMeshes (UnityEngine.CombineInstance[] combine, bool mergeSubMeshes, bool useMatrices);
Member Added: public void CombineMeshes (UnityEngine.CombineInstance[] combine, bool mergeSubMeshes);
Member Added: public void CombineMeshes (UnityEngine.CombineInstance[] combine);
Member Added: public UnityEngine.Vector3[] vertices { set; get; }
Member Added: public UnityEngine.Vector3[] normals { set; get; }
Member Added: public UnityEngine.Vector4[] tangents { set; get; }
Member Added: public UnityEngine.Vector2[] uv { set; get; }
Member Added: public UnityEngine.Vector2[] uv2 { set; get; }
Member Added: public UnityEngine.Vector2[] uv1 { set; get; }
Member Added: public UnityEngine.Bounds bounds { set; get; }
Member Added: public UnityEngine.Color[] colors { set; get; }
Member Added: public int[] triangles { set; get; }
Member Added: public int vertexCount { get; }
Member Added: public int subMeshCount { set; get; }
Member Added: public UnityEngine.BoneWeight[] boneWeights { set; get; }
Member Added: public UnityEngine.Matrix4x4[] bindposes { set; get; }
New Type: UnityEngine.BoneWeight
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public static bool op_Equality (UnityEngine.BoneWeight lhs, UnityEngine.BoneWeight rhs);
Member Added: public static bool op_Inequality (UnityEngine.BoneWeight lhs, UnityEngine.BoneWeight rhs);
Member Added: public float weight0 { set; get; }
Member Added: public float weight1 { set; get; }
Member Added: public float weight2 { set; get; }
Member Added: public float weight3 { set; get; }
Member Added: public int boneIndex0 { set; get; }
Member Added: public int boneIndex1 { set; get; }
Member Added: public int boneIndex2 { set; get; }
Member Added: public int boneIndex3 { set; get; }
New Type: UnityEngine.SkinQuality
Member Added: Auto
Member Added: Bone1
Member Added: Bone2
Member Added: Bone4
New Type: UnityEngine.SkinnedMeshRenderer
Member Added: public SkinnedMeshRenderer ();
Member Added: public UnityEngine.Transform[] bones { set; get; }
Member Added: public UnityEngine.SkinQuality quality { set; get; }
Member Added: public UnityEngine.Mesh sharedMesh { set; get; }
Member Added: public bool skinNormals { set; get; }
Member Added: public bool updateWhenOffscreen { set; get; }
New Type: UnityEngine.Material
Member Added: public Material (string contents);
Member Added: public Material (UnityEngine.Shader shader);
Member Added: public Material (UnityEngine.Material source);
Member Added: public void SetColor (string propertyName, UnityEngine.Color color);
Member Added: public UnityEngine.Color GetColor (string propertyName);
Member Added: public void SetVector (string propertyName, UnityEngine.Vector4 vector);
Member Added: public UnityEngine.Vector4 GetVector (string propertyName);
Member Added: public void SetTexture (string propertyName, UnityEngine.Texture texture);
Member Added: public UnityEngine.Texture GetTexture (string propertyName);
Member Added: public void SetTextureOffset (string propertyName, UnityEngine.Vector2 offset);
Member Added: public UnityEngine.Vector2 GetTextureOffset (string propertyName);
Member Added: public void SetTextureScale (string propertyName, UnityEngine.Vector2 scale);
Member Added: public UnityEngine.Vector2 GetTextureScale (string propertyName);
Member Added: public void SetMatrix (string propertyName, UnityEngine.Matrix4x4 matrix);
Member Added: public UnityEngine.Matrix4x4 GetMatrix (string propertyName);
Member Added: public void SetFloat (string propertyName, float value);
Member Added: public float GetFloat (string propertyName);
Member Added: public bool HasProperty (string propertyName);
Member Added: public string GetTag (string tag, bool searchFallbacks, string defaultValue);
Member Added: public string GetTag (string tag, bool searchFallbacks);
Member Added: public void Lerp (UnityEngine.Material start, UnityEngine.Material end, float t);
Member Added: public bool SetPass (int pass);
Member Added: public static UnityEngine.Material Create (string scriptContents);
Member Added: public void CopyPropertiesFromMaterial (UnityEngine.Material mat);
Member Added: public UnityEngine.Shader shader { set; get; }
Member Added: public UnityEngine.Color color { set; get; }
Member Added: public UnityEngine.Texture mainTexture { set; get; }
Member Added: public UnityEngine.Vector2 mainTextureOffset { set; get; }
Member Added: public UnityEngine.Vector2 mainTextureScale { set; get; }
Member Added: public int passCount { get; }
Member Added: public int renderQueue { set; get; }
New Type: UnityEngine.Flare
Member Added: public Flare ();
New Type: UnityEngine.LensFlare
Member Added: public LensFlare ();
Member Added: public UnityEngine.Flare flare { set; get; }
Member Added: public float brightness { set; get; }
Member Added: public UnityEngine.Color color { set; get; }
New Type: UnityEngine.Renderer
Member Added: public Renderer ();
Member Added: public void Render (int material);
Member Added: public bool enabled { set; get; }
Member Added: public bool castShadows { set; get; }
Member Added: public bool receiveShadows { set; get; }
Member Added: public UnityEngine.Material material { set; get; }
Member Added: public UnityEngine.Material sharedMaterial { set; get; }
Member Added: public UnityEngine.Material[] sharedMaterials { set; get; }
Member Added: public UnityEngine.Material[] materials { set; get; }
Member Added: public UnityEngine.Bounds bounds { get; }
Member Added: public int lightmapIndex { set; get; }
Member Added: public UnityEngine.Vector4 lightmapTilingOffset { set; get; }
Member Added: public bool isVisible { get; }
New Type: UnityEngine.Projector
Member Added: public Projector ();
Member Added: public float nearClipPlane { set; get; }
Member Added: public float farClipPlane { set; get; }
Member Added: public float fieldOfView { set; get; }
Member Added: public float aspectRatio { set; get; }
Member Added: public bool isOrthoGraphic { set; get; }
Member Added: public bool orthographic { set; get; }
Member Added: public float orthographicSize { set; get; }
Member Added: public float orthoGraphicSize { set; get; }
Member Added: public int ignoreLayers { set; get; }
Member Added: public UnityEngine.Material material { set; get; }
New Type: UnityEngine.Skybox
Member Added: public Skybox ();
Member Added: public UnityEngine.Material material { set; get; }
New Type: UnityEngine.TextMesh
Member Added: public TextMesh ();
Member Added: public string text { set; get; }
Member Added: public UnityEngine.Font font { set; get; }
New Type: UnityEngine.Particle
Member Added: public UnityEngine.Vector3 position { set; get; }
Member Added: public UnityEngine.Vector3 velocity { set; get; }
Member Added: public float energy { set; get; }
Member Added: public float size { set; get; }
Member Added: public UnityEngine.Color color { set; get; }
New Type: UnityEngine.ParticleEmitter
Member Added: public ParticleEmitter ();
Member Added: public void ClearParticles ();
Member Added: public void Emit ();
Member Added: public void Emit (int count);
Member Added: public void Emit (UnityEngine.Vector3 pos, UnityEngine.Vector3 velocity, float size, float energy, UnityEngine.Color color);
Member Added: public void Simulate (float deltaTime);
Member Added: public bool emit { set; get; }
Member Added: public float minSize { set; get; }
Member Added: public float maxSize { set; get; }
Member Added: public float minEnergy { set; get; }
Member Added: public float maxEnergy { set; get; }
Member Added: public float minEmission { set; get; }
Member Added: public float maxEmission { set; get; }
Member Added: public float emitterVelocityScale { set; get; }
Member Added: public UnityEngine.Vector3 worldVelocity { set; get; }
Member Added: public UnityEngine.Vector3 localVelocity { set; get; }
Member Added: public UnityEngine.Vector3 rndVelocity { set; get; }
Member Added: public bool useWorldSpace { set; get; }
Member Added: public UnityEngine.Particle[] particles { set; get; }
Member Added: public int particleCount { get; }
Member Added: public bool enabled { set; get; }
New Type: UnityEngine.ParticleAnimator
Member Added: public ParticleAnimator ();
Member Added: public bool doesAnimateColor { set; get; }
Member Added: public UnityEngine.Vector3 worldRotationAxis { set; get; }
Member Added: public UnityEngine.Vector3 localRotationAxis { set; get; }
Member Added: public float sizeGrow { set; get; }
Member Added: public UnityEngine.Vector3 rndForce { set; get; }
Member Added: public UnityEngine.Vector3 force { set; get; }
Member Added: public float damping { set; get; }
Member Added: public bool autodestruct { set; get; }
Member Added: public UnityEngine.Color[] colorAnimation { set; get; }
New Type: UnityEngine.TrailRenderer
Member Added: public TrailRenderer ();
Member Added: public float time { set; get; }
Member Added: public float startWidth { set; get; }
Member Added: public float endWidth { set; get; }
Member Added: public bool autodestruct { set; get; }
New Type: UnityEngine.ParticleRenderMode
Member Added: Billboard
Member Added: Stretch
Member Added: SortedBillboard
Member Added: HorizontalBillboard
Member Added: VerticalBillboard
New Type: UnityEngine.ParticleRenderer
Member Added: public ParticleRenderer ();
Member Added: public UnityEngine.ParticleRenderMode particleRenderMode { set; get; }
Member Added: public float lengthScale { set; get; }
Member Added: public float velocityScale { set; get; }
Member Added: public float cameraVelocityScale { set; get; }
Member Added: public float maxParticleSize { set; get; }
Member Added: public int uvAnimationXTile { set; get; }
Member Added: public int uvAnimationYTile { set; get; }
Member Added: public float uvAnimationCycles { set; get; }
Member Added: public int animatedTextureCount { set; get; }
Member Added: public float maxPartileSize { set; get; }
Member Added: public UnityEngine.Rect[] uvTiles { set; get; }
Member Added: public UnityEngine.AnimationCurve widthCurve { set; get; }
Member Added: public UnityEngine.AnimationCurve heightCurve { set; get; }
Member Added: public UnityEngine.AnimationCurve rotationCurve { set; get; }
New Type: UnityEngine.LineRenderer
Member Added: public LineRenderer ();
Member Added: public void SetWidth (float start, float end);
Member Added: public void SetColors (UnityEngine.Color start, UnityEngine.Color end);
Member Added: public void SetVertexCount (int count);
Member Added: public void SetPosition (int index, UnityEngine.Vector3 position);
Member Added: public bool useWorldSpace { set; get; }
New Type: UnityEngine.MaterialPropertyBlock
Member Added: public MaterialPropertyBlock ();
Member Added: public void InitBlock ();
Member Added: public void DestroyBlock ();
Member Added: ~MaterialPropertyBlock ();
Member Added: public void AddFloat (string name, float value);
Member Added: public void AddFloat (int nameID, float value);
Member Added: public void AddVector (string name, UnityEngine.Vector4 value);
Member Added: public void AddVector (int nameID, UnityEngine.Vector4 value);
Member Added: public void AddColor (string name, UnityEngine.Color value);
Member Added: public void AddColor (int nameID, UnityEngine.Color value);
Member Added: public void AddMatrix (string name, UnityEngine.Matrix4x4 value);
Member Added: public void AddMatrix (int nameID, UnityEngine.Matrix4x4 value);
Member Added: public void Clear ();
New Type: UnityEngine.Graphics
Member Added: public Graphics ();
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Material material, int layer, UnityEngine.Camera camera, int submeshIndex);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Material material, int layer, UnityEngine.Camera camera);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Material material, int layer);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Material material, int layer, UnityEngine.Camera camera, int submeshIndex, UnityEngine.MaterialPropertyBlock properties);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, int layer, UnityEngine.Camera camera, int submeshIndex);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, int layer, UnityEngine.Camera camera);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, int layer);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, int layer, UnityEngine.Camera camera, int submeshIndex, UnityEngine.MaterialPropertyBlock properties);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Material material, int layer, UnityEngine.Camera camera, int submeshIndex, UnityEngine.MaterialPropertyBlock properties, bool castShadows, bool receiveShadows);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, int layer, UnityEngine.Camera camera, int submeshIndex, UnityEngine.MaterialPropertyBlock properties, bool castShadows, bool receiveShadows);
Member Added: public static void DrawMeshNow (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation);
Member Added: public static void DrawMeshNow (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, int materialIndex);
Member Added: public static void DrawMeshNow (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix);
Member Added: public static void DrawMeshNow (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, int materialIndex);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, int materialIndex);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, int materialIndex);
Member Added: public static void DrawTexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture);
Member Added: public static void DrawTexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, UnityEngine.Material mat);
Member Added: public static void DrawTexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, int leftBorder, int rightBorder, int topBorder, int bottomBorder);
Member Added: public static void DrawTexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, int leftBorder, int rightBorder, int topBorder, int bottomBorder, UnityEngine.Material mat);
Member Added: public static void DrawTexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, UnityEngine.Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder);
Member Added: public static void DrawTexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, UnityEngine.Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder, UnityEngine.Material mat);
Member Added: public static void DrawTexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, UnityEngine.Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder, UnityEngine.Color color, UnityEngine.Material mat);
Member Added: public static void DrawTexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, UnityEngine.Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder, UnityEngine.Color color);
Member Added: public static void Blit (UnityEngine.Texture source, UnityEngine.RenderTexture dest);
Member Added: public static void Blit (UnityEngine.Texture source, UnityEngine.RenderTexture dest, UnityEngine.Material mat);
Member Added: public static void Blit (UnityEngine.Texture source, UnityEngine.RenderTexture dest, UnityEngine.Material mat, int pass);
Member Added: public static void BlitMultiTap (UnityEngine.Texture source, UnityEngine.RenderTexture dest, UnityEngine.Material mat, UnityEngine.Vector2[] offsets);
Member Added: public static void SetupVertexLights (UnityEngine.Light[] lights);
Member Added: public static string deviceName { get; }
Member Added: public static string deviceVendor { get; }
Member Added: public static string deviceVersion { get; }
Member Added: public static bool supportsVertexProgram { get; }
New Type: UnityEngine.Resolution
Member Added: public int width { set; get; }
Member Added: public int height { set; get; }
Member Added: public int refreshRate { set; get; }
New Type: UnityEngine.LightmapData
Member Added: public LightmapData ();
Member Added: public UnityEngine.Texture2D lightmap { set; get; }
New Type: UnityEngine.LightmapSettings
Member Added: public LightmapSettings ();
Member Added: public static UnityEngine.LightmapData[] lightmaps { set; get; }
New Type: UnityEngine.GeometryUtility
Member Added: public GeometryUtility ();
Member Added: public static UnityEngine.Plane[] CalculateFrustumPlanes (UnityEngine.Camera camera);
Member Added: public static UnityEngine.Plane[] CalculateFrustumPlanes (UnityEngine.Matrix4x4 worldToProjectionMatrix);
Member Added: public static bool TestPlanesAABB (UnityEngine.Plane[] planes, UnityEngine.Bounds bounds);
New Type: UnityEngine.Screen
Member Added: public Screen ();
Member Added: public static void SetResolution (int width, int height, bool fullscreen, int preferredRefreshRate);
Member Added: public static void SetResolution (int width, int height, bool fullscreen);
Member Added: public static UnityEngine.Resolution[] resolutions { get; }
Member Added: public static UnityEngine.Resolution[] GetResolution { get; }
Member Added: public static UnityEngine.Resolution currentResolution { get; }
Member Added: public static bool showCursor { set; get; }
Member Added: public static bool lockCursor { set; get; }
Member Added: public static int width { get; }
Member Added: public static int height { get; }
Member Added: public static bool fullScreen { set; get; }
New Type: UnityEngine.RenderTextureFormat
Member Added: ARGB32
Member Added: Depth
Member Added: ARGBHalf
New Type: UnityEngine.RenderTexture
Member Added: public RenderTexture (int width, int height, int depth);
Member Added: public static UnityEngine.RenderTexture GetTemporary (int width, int height, int depthBuffer, UnityEngine.RenderTextureFormat format);
Member Added: public static UnityEngine.RenderTexture GetTemporary (int width, int height, int depthBuffer);
Member Added: public static UnityEngine.RenderTexture GetTemporary (int width, int height);
Member Added: public static void ReleaseTemporary (UnityEngine.RenderTexture temp);
Member Added: public bool Create ();
Member Added: public void Release ();
Member Added: public bool IsCreated ();
Member Added: public void SetGlobalShaderProperty (string propertyName);
Member Added: public void SetBorderColor (UnityEngine.Color color);
Member Added: public UnityEngine.Vector2 GetTexelOffset ();
Member Added: public override int width { set; get; }
Member Added: public override int height { set; get; }
Member Added: public int depth { set; get; }
Member Added: public bool isPowerOfTwo { set; get; }
Member Added: public UnityEngine.RenderTextureFormat format { set; get; }
Member Added: public bool useMipMap { set; get; }
Member Added: public bool isCubemap { set; get; }
Member Added: public static UnityEngine.RenderTexture active { set; get; }
Member Added: public static bool enabled { set; get; }
New Type: UnityEngine.MovieTexture
Member Added: public MovieTexture ();
Member Added: public void Play ();
Member Added: public void Stop ();
Member Added: public void Pause ();
Member Added: public UnityEngine.AudioClip audioClip { get; }
Member Added: public bool loop { set; get; }
Member Added: public bool isPlaying { get; }
Member Added: public bool isReadyToPlay { get; }
New Type: UnityEngine.GL
Member Added: public GL ();
Member Added: public const int TRIANGLES = 4;
Member Added: public const int TRIANGLE_STRIP = 5;
Member Added: public const int QUADS = 7;
Member Added: public const int LINES = 1;
Member Added: public static void Vertex3 (float x, float y, float z);
Member Added: public static void Vertex (UnityEngine.Vector3 v);
Member Added: public static void Color (UnityEngine.Color c);
Member Added: public static void TexCoord (UnityEngine.Vector3 v);
Member Added: public static void TexCoord2 (float x, float y);
Member Added: public static void TexCoord3 (float x, float y, float z);
Member Added: public static void MultiTexCoord2 (int unit, float x, float y);
Member Added: public static void MultiTexCoord3 (int unit, float x, float y, float z);
Member Added: public static void MultiTexCoord (int unit, UnityEngine.Vector3 v);
Member Added: public static void Begin (int mode);
Member Added: public static void End ();
Member Added: public static void LoadOrtho ();
Member Added: public static void LoadPixelMatrix ();
Member Added: public static void LoadPixelMatrix (float left, float right, float bottom, float top);
Member Added: public static void Viewport (UnityEngine.Rect pixelRect);
Member Added: public static void LoadProjectionMatrix (UnityEngine.Matrix4x4 mat);
Member Added: public static void LoadIdentity ();
Member Added: public static void MultMatrix (UnityEngine.Matrix4x4 mat);
Member Added: public static void PushMatrix ();
Member Added: public static void PopMatrix ();
Member Added: public static void SetRevertBackfacing (bool revertBackFaces);
Member Added: public static void Clear (bool clearDepth, bool clearColor, UnityEngine.Color backgroundColor);
Member Added: public static UnityEngine.Matrix4x4 modelview { set; get; }
New Type: UnityEngine.GUIElement
Member Added: public GUIElement ();
Member Added: public bool HitTest (UnityEngine.Vector3 screenPosition, UnityEngine.Camera camera);
Member Added: public bool HitTest (UnityEngine.Vector3 screenPosition);
Member Added: public UnityEngine.Rect GetScreenRect (UnityEngine.Camera camera);
Member Added: public UnityEngine.Rect GetScreenRect ();
New Type: UnityEngine.GUITexture
Member Added: public GUITexture ();
Member Added: public UnityEngine.Color color { set; get; }
Member Added: public UnityEngine.Texture texture { set; get; }
Member Added: public UnityEngine.Rect pixelInset { set; get; }
New Type: UnityEngine.TextAlignment
Member Added: Left
Member Added: Center
Member Added: Right
New Type: UnityEngine.TextAnchor
Member Added: UpperLeft
Member Added: UpperCenter
Member Added: UpperRight
Member Added: MiddleLeft
Member Added: MiddleCenter
Member Added: MiddleRight
Member Added: LowerLeft
Member Added: LowerCenter
Member Added: LowerRight
New Type: UnityEngine.GUIText
Member Added: public GUIText ();
Member Added: public string text { set; get; }
Member Added: public UnityEngine.Material material { set; get; }
Member Added: public UnityEngine.Vector2 pixelOffset { set; get; }
Member Added: public UnityEngine.Font font { set; get; }
Member Added: public UnityEngine.TextAlignment alignment { set; get; }
Member Added: public UnityEngine.TextAnchor anchor { set; get; }
Member Added: public float lineSpacing { set; get; }
Member Added: public float tabSize { set; get; }
New Type: UnityEngine.Font
Member Added: public Font ();
Member Added: public bool HasCharacter (char c);
Member Added: public UnityEngine.Material material { set; get; }
Member Added: public UnityEngine.Vector2 hackedOffset { set; get; }
New Type: UnityEngine.GUILayer
Member Added: public GUILayer ();
Member Added: public UnityEngine.GUIElement HitTest (UnityEngine.Vector3 screenPosition);
New Type: UnityEngine.MeshRenderer
Member Added: public MeshRenderer ();
New Type: UnityEngine.ScriptableShaderPass
Member Added: public ScriptableShaderPass ();
Member Added: public UnityEngine.Renderer renderer { get; }
New Type: UnityEngine.RenderBeforeQueues
Member Added: public RenderBeforeQueues (int[] args);
New Type: UnityEngine.ScaleMode
Member Added: StretchToFill
Member Added: ScaleAndCrop
Member Added: ScaleToFit
New Type: UnityEngine.GUI
Member Added: public GUI ();
Member Added: public static void Label (UnityEngine.Rect position, string text);
Member Added: public static void Label (UnityEngine.Rect position, UnityEngine.Texture image);
Member Added: public static void Label (UnityEngine.Rect position, UnityEngine.GUIContent content);
Member Added: public static void Label (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static void Label (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.GUIStyle style);
Member Added: public static void Label (UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static void DrawTexture (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.ScaleMode scaleMode, bool alphaBlend);
Member Added: public static void DrawTexture (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.ScaleMode scaleMode);
Member Added: public static void DrawTexture (UnityEngine.Rect position, UnityEngine.Texture image);
Member Added: public static void DrawTexture (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.ScaleMode scaleMode, bool alphaBlend, float imageAspect);
Member Added: public static void Box (UnityEngine.Rect position, string text);
Member Added: public static void Box (UnityEngine.Rect position, UnityEngine.Texture image);
Member Added: public static void Box (UnityEngine.Rect position, UnityEngine.GUIContent content);
Member Added: public static void Box (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static void Box (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.GUIStyle style);
Member Added: public static void Box (UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static bool Button (UnityEngine.Rect position, string text);
Member Added: public static bool Button (UnityEngine.Rect position, UnityEngine.Texture image);
Member Added: public static bool Button (UnityEngine.Rect position, UnityEngine.GUIContent content);
Member Added: public static bool Button (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static bool Button (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.GUIStyle style);
Member Added: public static bool Button (UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static bool RepeatButton (UnityEngine.Rect position, string text);
Member Added: public static bool RepeatButton (UnityEngine.Rect position, UnityEngine.Texture image);
Member Added: public static bool RepeatButton (UnityEngine.Rect position, UnityEngine.GUIContent content);
Member Added: public static bool RepeatButton (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static bool RepeatButton (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.GUIStyle style);
Member Added: public static bool RepeatButton (UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static string TextField (UnityEngine.Rect position, string text);
Member Added: public static string TextField (UnityEngine.Rect position, string text, int maxLength);
Member Added: public static string TextField (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static string TextField (UnityEngine.Rect position, string text, int maxLength, UnityEngine.GUIStyle style);
Member Added: public static string PasswordField (UnityEngine.Rect position, string password, char maskChar);
Member Added: public static string PasswordField (UnityEngine.Rect position, string password, char maskChar, int maxLength);
Member Added: public static string PasswordField (UnityEngine.Rect position, string password, char maskChar, UnityEngine.GUIStyle style);
Member Added: public static string PasswordField (UnityEngine.Rect position, string password, char maskChar, int maxLength, UnityEngine.GUIStyle style);
Member Added: public static string PasswordFieldGetStrToShow (string password, char maskChar);
Member Added: public static string TextArea (UnityEngine.Rect position, string text);
Member Added: public static string TextArea (UnityEngine.Rect position, string text, int maxLength);
Member Added: public static string TextArea (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static string TextArea (UnityEngine.Rect position, string text, int maxLength, UnityEngine.GUIStyle style);
Member Added: public static void DoTextField (UnityEngine.Rect position, int id, UnityEngine.GUIContent content, bool multiline, int maxLength, UnityEngine.GUIStyle style);
Member Added: public static void SetNextControlName (string name);
Member Added: public static string GetNameOfFocusedControl ();
Member Added: public static void FocusControl (string name);
Member Added: public static bool Toggle (UnityEngine.Rect position, bool value, string text);
Member Added: public static bool Toggle (UnityEngine.Rect position, bool value, UnityEngine.Texture image);
Member Added: public static bool Toggle (UnityEngine.Rect position, bool value, UnityEngine.GUIContent content);
Member Added: public static bool Toggle (UnityEngine.Rect position, bool value, string text, UnityEngine.GUIStyle style);
Member Added: public static bool Toggle (UnityEngine.Rect position, bool value, UnityEngine.Texture image, UnityEngine.GUIStyle style);
Member Added: public static bool Toggle (UnityEngine.Rect position, bool value, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: protected static bool DoToggle (UnityEngine.Rect position, int id, bool value, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static int Toolbar (UnityEngine.Rect position, int selected, string[] texts);
Member Added: public static int Toolbar (UnityEngine.Rect position, int selected, UnityEngine.Texture[] images);
Member Added: public static int Toolbar (UnityEngine.Rect position, int selected, UnityEngine.GUIContent[] content);
Member Added: public static int Toolbar (UnityEngine.Rect position, int selected, string[] texts, UnityEngine.GUIStyle style);
Member Added: public static int Toolbar (UnityEngine.Rect position, int selected, UnityEngine.Texture[] images, UnityEngine.GUIStyle style);
Member Added: public static int Toolbar (UnityEngine.Rect position, int selected, UnityEngine.GUIContent[] contents, UnityEngine.GUIStyle style);
Member Added: public static int SelectionGrid (UnityEngine.Rect position, int selected, string[] texts, int xCount);
Member Added: public static int SelectionGrid (UnityEngine.Rect position, int selected, UnityEngine.Texture[] images, int xCount);
Member Added: public static int SelectionGrid (UnityEngine.Rect position, int selected, UnityEngine.GUIContent[] content, int xCount);
Member Added: public static int SelectionGrid (UnityEngine.Rect position, int selected, string[] texts, int xCount, UnityEngine.GUIStyle style);
Member Added: public static int SelectionGrid (UnityEngine.Rect position, int selected, UnityEngine.Texture[] images, int xCount, UnityEngine.GUIStyle style);
Member Added: public static int SelectionGrid (UnityEngine.Rect position, int selected, UnityEngine.GUIContent[] contents, int xCount, UnityEngine.GUIStyle style);
Member Added: public static float HorizontalSlider (UnityEngine.Rect position, float value, float leftValue, float rightValue);
Member Added: public static float HorizontalSlider (UnityEngine.Rect position, float value, float leftValue, float rightValue, UnityEngine.GUIStyle slider, UnityEngine.GUIStyle thumb);
Member Added: public static float VerticalSlider (UnityEngine.Rect position, float value, float topValue, float bottomValue);
Member Added: public static float VerticalSlider (UnityEngine.Rect position, float value, float topValue, float bottomValue, UnityEngine.GUIStyle slider, UnityEngine.GUIStyle thumb);
Member Added: public static float Slider (UnityEngine.Rect position, float value, float size, float start, float end, UnityEngine.GUIStyle slider, UnityEngine.GUIStyle thumb, bool horiz, int id);
Member Added: public static float HorizontalScrollbar (UnityEngine.Rect position, float value, float size, float leftValue, float rightValue);
Member Added: public static float HorizontalScrollbar (UnityEngine.Rect position, float value, float size, float leftValue, float rightValue, UnityEngine.GUIStyle style);
Member Added: public static float VerticalScrollbar (UnityEngine.Rect position, float value, float size, float topValue, float bottomValue);
Member Added: public static float VerticalScrollbar (UnityEngine.Rect position, float value, float size, float topValue, float bottomValue, UnityEngine.GUIStyle style);
Member Added: public static void BeginGroup (UnityEngine.Rect position);
Member Added: public static void BeginGroup (UnityEngine.Rect position, string text);
Member Added: public static void BeginGroup (UnityEngine.Rect position, UnityEngine.Texture image);
Member Added: public static void BeginGroup (UnityEngine.Rect position, UnityEngine.GUIContent content);
Member Added: public static void BeginGroup (UnityEngine.Rect position, UnityEngine.GUIStyle style);
Member Added: public static void BeginGroup (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static void BeginGroup (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.GUIStyle style);
Member Added: public static void BeginGroup (UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static void EndGroup ();
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Rect position, UnityEngine.Vector2 scrollPosition, UnityEngine.Rect viewRect);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Rect position, UnityEngine.Vector2 scrollPosition, UnityEngine.Rect viewRect, bool alwaysShowHorizontal, bool alwaysShowVertical);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Rect position, UnityEngine.Vector2 scrollPosition, UnityEngine.Rect viewRect, UnityEngine.GUIStyle horizontalScrollbar, UnityEngine.GUIStyle verticalScrollbar);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Rect position, UnityEngine.Vector2 scrollPosition, UnityEngine.Rect viewRect, bool alwaysShowHorizontal, bool alwaysShowVertical, UnityEngine.GUIStyle horizontalScrollbar, UnityEngine.GUIStyle verticalScrollbar);
Member Added: protected static UnityEngine.Vector2 DoBeginScrollView (UnityEngine.Rect position, UnityEngine.Vector2 scrollPosition, UnityEngine.Rect viewRect, bool alwaysShowHorizontal, bool alwaysShowVertical, UnityEngine.GUIStyle horizontalScrollbar, UnityEngine.GUIStyle verticalScrollbar, UnityEngine.GUIStyle background);
Member Added: public static void EndScrollView ();
Member Added: public static void ScrollTo (UnityEngine.Rect position);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect position, UnityEngine.GUI.WindowFunction func, string text);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect position, UnityEngine.GUI.WindowFunction func, UnityEngine.Texture image);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect position, UnityEngine.GUI.WindowFunction func, UnityEngine.GUIContent content);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect position, UnityEngine.GUI.WindowFunction func, string text, UnityEngine.GUIStyle style);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect position, UnityEngine.GUI.WindowFunction func, UnityEngine.Texture image, UnityEngine.GUIStyle style);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect clientRect, UnityEngine.GUI.WindowFunction func, UnityEngine.GUIContent title, UnityEngine.GUIStyle style);
Member Added: public static void DragWindow (UnityEngine.Rect position);
Member Added: public static void DragWindow ();
Member Added: public static void BringWindowToFront (int windowID);
Member Added: public static void BringWindowToBack (int windowID);
Member Added: public static void FocusWindow (int windowID);
Member Added: public static void UnfocusWindow ();
Member Added: protected static void BeginWindows (UnityEngine.Event e, int skinMode, UnityEngine.IDList idlist, int editorWindowInstanceID);
Member Added: protected static void DoEndWindows (UnityEngine.IDList idlist);
Member Added: public static UnityEngine.GUISkin skin { set; get; }
Member Added: public static UnityEngine.Color color { set; get; }
Member Added: public static UnityEngine.Color backgroundColor { set; get; }
Member Added: public static UnityEngine.Color contentColor { set; get; }
Member Added: public static bool changed { set; get; }
Member Added: public static bool enabled { set; get; }
Member Added: public static UnityEngine.Matrix4x4 matrix { set; get; }
Member Added: public static string tooltip { set; get; }
Member Added: protected static string mouseTooltip { get; }
Member Added: protected static UnityEngine.Rect tooltipRect { set; get; }
Member Added: public static int depth { set; get; }
New Type: UnityEngine.GUI/WindowFunction
New Type: UnityEngine.GUILayout
Member Added: public GUILayout ();
Member Added: public static void Label (UnityEngine.Texture image, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Label (string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Label (UnityEngine.GUIContent content, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Label (UnityEngine.Texture image, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Label (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Label (UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Box (UnityEngine.Texture image, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Box (string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Box (UnityEngine.GUIContent content, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Box (UnityEngine.Texture image, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Box (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Box (UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Button (UnityEngine.Texture image, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Button (string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Button (UnityEngine.GUIContent content, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Button (UnityEngine.Texture image, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Button (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Button (UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool RepeatButton (UnityEngine.Texture image, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool RepeatButton (string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool RepeatButton (UnityEngine.GUIContent content, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool RepeatButton (UnityEngine.Texture image, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool RepeatButton (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool RepeatButton (UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextField (string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextField (string text, int maxLength, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextField (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextField (string text, int maxLength, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string PasswordField (string password, char maskChar, UnityEngine.GUILayoutOption[] options);
Member Added: public static string PasswordField (string password, char maskChar, int maxLength, UnityEngine.GUILayoutOption[] options);
Member Added: public static string PasswordField (string password, char maskChar, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string PasswordField (string password, char maskChar, int maxLength, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextArea (string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextArea (string text, int maxLength, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextArea (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextArea (string text, int maxLength, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (bool value, UnityEngine.Texture image, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (bool value, string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (bool value, UnityEngine.GUIContent content, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (bool value, UnityEngine.Texture image, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (bool value, string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (bool value, UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: protected static bool DoToggle (bool value, UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Toolbar (int selected, string[] texts, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Toolbar (int selected, UnityEngine.Texture[] images, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Toolbar (int selected, UnityEngine.GUIContent[] content, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Toolbar (int selected, string[] texts, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Toolbar (int selected, UnityEngine.Texture[] images, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Toolbar (int selected, UnityEngine.GUIContent[] contents, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int SelectionGrid (int selected, string[] texts, int xCount, UnityEngine.GUILayoutOption[] options);
Member Added: public static int SelectionGrid (int selected, UnityEngine.Texture[] images, int xCount, UnityEngine.GUILayoutOption[] options);
Member Added: public static int SelectionGrid (int selected, UnityEngine.GUIContent[] content, int xCount, UnityEngine.GUILayoutOption[] options);
Member Added: public static int SelectionGrid (int selected, string[] texts, int xCount, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int SelectionGrid (int selected, UnityEngine.Texture[] images, int xCount, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int SelectionGrid (int selected, UnityEngine.GUIContent[] contents, int xCount, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static float HorizontalSlider (float value, float leftValue, float rightValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static float HorizontalSlider (float value, float leftValue, float rightValue, UnityEngine.GUIStyle slider, UnityEngine.GUIStyle thumb, UnityEngine.GUILayoutOption[] options);
Member Added: public static float VerticalSlider (float value, float leftValue, float rightValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static float VerticalSlider (float value, float leftValue, float rightValue, UnityEngine.GUIStyle slider, UnityEngine.GUIStyle thumb, UnityEngine.GUILayoutOption[] options);
Member Added: public static float HorizontalScrollbar (float value, float size, float leftValue, float rightValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static float HorizontalScrollbar (float value, float size, float leftValue, float rightValue, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static float VerticalScrollbar (float value, float size, float topValue, float bottomValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static float VerticalScrollbar (float value, float size, float topValue, float bottomValue, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Space (float pixels);
Member Added: public static void FlexibleSpace ();
Member Added: public static void BeginHorizontal (UnityEngine.GUILayoutOption[] options);
Member Added: public static void BeginHorizontal (UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void EndHorizontal ();
Member Added: public static void BeginVertical (UnityEngine.GUILayoutOption[] options);
Member Added: public static void BeginVertical (UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void EndVertical ();
Member Added: public static void BeginArea (UnityEngine.Rect screenRect);
Member Added: public static void BeginArea (UnityEngine.Rect screenRect, string text);
Member Added: public static void BeginArea (UnityEngine.Rect screenRect, UnityEngine.Texture image);
Member Added: public static void BeginArea (UnityEngine.Rect screenRect, UnityEngine.GUIContent content);
Member Added: public static void BeginArea (UnityEngine.Rect screenRect, UnityEngine.GUIStyle style);
Member Added: public static void BeginArea (UnityEngine.Rect screenRect, string text, UnityEngine.GUIStyle style);
Member Added: public static void BeginArea (UnityEngine.Rect screenRect, UnityEngine.Texture image, UnityEngine.GUIStyle style);
Member Added: public static void BeginArea (UnityEngine.Rect screenRect, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static void EndArea ();
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, bool alwaysShowHorizontal, bool alwaysShowVertical, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, UnityEngine.GUIStyle horizontalScrollbar, UnityEngine.GUIStyle verticalScrollbar, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, UnityEngine.GUIStyle style);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, bool alwaysShowHorizontal, bool alwaysShowVertical, UnityEngine.GUIStyle horizontalScrollbar, UnityEngine.GUIStyle verticalScrollbar, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, bool alwaysShowHorizontal, bool alwaysShowVertical, UnityEngine.GUIStyle horizontalScrollbar, UnityEngine.GUIStyle verticalScrollbar, UnityEngine.GUIStyle background, UnityEngine.GUILayoutOption[] options);
Member Added: public static void EndScrollView ();
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect screenRect, UnityEngine.GUI.WindowFunction func, string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect screenRect, UnityEngine.GUI.WindowFunction func, UnityEngine.Texture image, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect screenRect, UnityEngine.GUI.WindowFunction func, UnityEngine.GUIContent content, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect screenRect, UnityEngine.GUI.WindowFunction func, string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect screenRect, UnityEngine.GUI.WindowFunction func, UnityEngine.Texture image, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect screenRect, UnityEngine.GUI.WindowFunction func, UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.GUILayoutOption Width (float width);
Member Added: public static UnityEngine.GUILayoutOption MinWidth (float minWidth);
Member Added: public static UnityEngine.GUILayoutOption MaxWidth (float maxWidth);
Member Added: public static UnityEngine.GUILayoutOption Height (float height);
Member Added: public static UnityEngine.GUILayoutOption MinHeight (float minHeight);
Member Added: public static UnityEngine.GUILayoutOption MaxHeight (float maxHeight);
Member Added: public static UnityEngine.GUILayoutOption ExpandWidth (bool expand);
Member Added: public static UnityEngine.GUILayoutOption ExpandHeight (bool expand);
New Type: UnityEngine.GUILayoutUtility
Member Added: public GUILayoutUtility ();
Member Added: public static void BeginGroup (string GroupName);
Member Added: public static void EndGroup (string groupName);
Member Added: public static void LayoutFromEditorWindow ();
Member Added: public static float LayoutFromInspector (float width);
Member Added: public static UnityEngine.GUILayoutGroup BeginLayoutGroup (UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options, Type LayoutType);
Member Added: public static void EndLayoutGroup ();
Member Added: protected static UnityEngine.GUILayoutGroup DoBeginLayoutArea (UnityEngine.GUIStyle style, Type LayoutType);
Member Added: public static UnityEngine.Rect GetRect (UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static UnityEngine.Rect GetRect (UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect GetRect (float width, float height);
Member Added: public static UnityEngine.Rect GetRect (float width, float height, UnityEngine.GUIStyle style);
Member Added: public static UnityEngine.Rect GetRect (float width, float height, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect GetRect (float width, float height, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect GetRect (float minWidth, float maxWidth, float minHeight, float maxHeight);
Member Added: public static UnityEngine.Rect GetRect (float minWidth, float maxWidth, float minHeight, float maxHeight, UnityEngine.GUIStyle style);
Member Added: public static UnityEngine.Rect GetRect (float minWidth, float maxWidth, float minHeight, float maxHeight, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect GetRect (float minWidth, float maxWidth, float minHeight, float maxHeight, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect GetLastRect ();
Member Added: public static UnityEngine.Rect GetAspectRect (float aspect);
Member Added: public static UnityEngine.Rect GetAspectRect (float aspect, UnityEngine.GUIStyle style);
Member Added: public static UnityEngine.Rect GetAspectRect (float aspect, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect GetAspectRect (float aspect, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
New Type: UnityEngine.GUILayoutEntry
Member Added: public GUILayoutEntry (float _minWidth, float _maxWidth, float _minHeight, float _maxHeight, UnityEngine.GUIStyle _style);
Member Added: public GUILayoutEntry (float _minWidth, float _maxWidth, float _minHeight, float _maxHeight, UnityEngine.GUIStyle _style, UnityEngine.GUILayoutOption[] options);
Member Added: public float minWidth;
Member Added: public float maxWidth;
Member Added: public float minHeight;
Member Added: public float maxHeight;
Member Added: public UnityEngine.Rect rect;
Member Added: public int stretchWidth;
Member Added: public int stretchHeight;
Member Added: protected static int indent;
Member Added: public virtual void CalcWidth ();
Member Added: public virtual void CalcHeight ();
Member Added: public virtual void SetHorizontal (float x, float width);
Member Added: public virtual void SetVertical (float y, float height);
Member Added: protected virtual void ApplyStyleSettings (UnityEngine.GUIStyle style);
Member Added: public virtual void ApplyOptions (UnityEngine.GUILayoutOption[] options);
Member Added: public override string ToString ();
Member Added: public UnityEngine.GUIStyle style { set; get; }
Member Added: public virtual UnityEngine.RectOffset margin { get; }
New Type: UnityEngine.GUILayoutGroup
Member Added: public GUILayoutGroup ();
Member Added: public GUILayoutGroup (UnityEngine.GUIStyle _style, UnityEngine.GUILayoutOption[] options);
Member Added: public System.Collections.ArrayList entries;
Member Added: public bool isVertical;
Member Added: public bool resetCoords;
Member Added: public float spacing;
Member Added: public bool sameSize;
Member Added: public bool isWindow;
Member Added: public int windowID;
Member Added: protected int stretchableCountX;
Member Added: protected int stretchableCountY;
Member Added: protected float childMinWidth;
Member Added: protected float childMaxWidth;
Member Added: protected float childMinHeight;
Member Added: protected float childMaxHeight;
Member Added: public override void ApplyOptions (UnityEngine.GUILayoutOption[] options);
Member Added: protected override void ApplyStyleSettings (UnityEngine.GUIStyle style);
Member Added: public void ResetCursor ();
Member Added: public UnityEngine.GUILayoutEntry GetNext ();
Member Added: public UnityEngine.Rect GetLast ();
Member Added: public void Add (UnityEngine.GUILayoutEntry e);
Member Added: public override void CalcWidth ();
Member Added: public override void SetHorizontal (float x, float width);
Member Added: public override void CalcHeight ();
Member Added: public override void SetVertical (float y, float height);
Member Added: public override string ToString ();
Member Added: public override UnityEngine.RectOffset margin { get; }
New Type: UnityEngine.GUIScrollGroup
Member Added: public GUIScrollGroup ();
Member Added: public float calcMinWidth;
Member Added: public float calcMaxWidth;
Member Added: public float calcMinHeight;
Member Added: public float calcMaxHeight;
Member Added: public float hmm;
Member Added: public float clientWidth;
Member Added: public float clientHeight;
Member Added: public bool allowHorizontalScroll;
Member Added: public bool needsHorizontalScrollbar;
Member Added: public bool needsVerticalScrollbar;
Member Added: public UnityEngine.GUIStyle horizontalScrollbar;
Member Added: public UnityEngine.GUIStyle verticalScrollbar;
Member Added: public override void CalcWidth ();
Member Added: public override void SetHorizontal (float x, float width);
Member Added: public override void CalcHeight ();
Member Added: public override void SetVertical (float y, float height);
New Type: UnityEngine.GUILayoutOption
Member Added: public GUILayoutOption (UnityEngine.GUILayoutOption.Type type, object value);
Member Added: public UnityEngine.GUILayoutOption.Type type;
Member Added: public object value;
New Type: UnityEngine.GUILayoutOption/Type
Member Added: fixedWidth
Member Added: fixedHeight
Member Added: minWidth
Member Added: maxWidth
Member Added: minHeight
Member Added: maxHeight
Member Added: stretchWidth
Member Added: stretchHeight
Member Added: alignStart
Member Added: alignMiddle
Member Added: alignEnd
Member Added: alignJustify
Member Added: equalSize
Member Added: spacing
Updating: UnityEngine.GUILayoutOption/Type
New Type: UnityEngine.ExitGUIException
Member Added: public ExitGUIException ();
New Type: UnityEngine.FocusType
Member Added: Native
Member Added: Keyboard
Member Added: Passive
New Type: UnityEngine.IDList
New Type: UnityEngine.GUIUtility
Member Added: public GUIUtility ();
Member Added: protected static int s_KeyboardControl;
Member Added: public static UnityEngine.Vector2 s_EditorScreenPointOffset;
Member Added: public static bool s_HasKeyboardFocus;
Member Added: public static int GetControlID (UnityEngine.FocusType focus);
Member Added: public static int GetControlID (int hint, UnityEngine.FocusType focus);
Member Added: public static int GetControlID (UnityEngine.GUIContent contents, UnityEngine.FocusType focus);
Member Added: public static int GetControlID (UnityEngine.FocusType focus, UnityEngine.Rect position);
Member Added: public static int GetControlID (int hint, UnityEngine.FocusType focus, UnityEngine.Rect position);
Member Added: public static int GetControlID (UnityEngine.GUIContent contents, UnityEngine.FocusType focus, UnityEngine.Rect position);
Member Added: public static object GetStateObject (Type t, int controlID);
Member Added: public static object QueryStateObject (Type t, int controlID);
Member Added: protected static void SkipToControlID (int id);
Member Added: public static void ExitGUI ();
Member Added: public static UnityEngine.GUISkin GetBuiltinSkin (int skin);
Member Added: protected static void MoveNextAndScroll (bool forward);
Member Added: protected static void MoveKeyboardFocus (int ID, bool moveForward, bool sendToNextScriptIfNeeded);
Member Added: public static UnityEngine.Vector2 GUIToScreenPoint (UnityEngine.Vector2 guiPoint);
Member Added: public static UnityEngine.Vector2 ScreenToGUIPoint (UnityEngine.Vector2 screenPoint);
Member Added: public static void RotateAroundPivot (float angle, UnityEngine.Vector2 pivotPoint);
Member Added: public static void ScaleAroundPivot (UnityEngine.Vector2 scale, UnityEngine.Vector2 pivotPoint);
Member Added: public static int hotControl { set; get; }
Member Added: public static int keyboardControl { set; get; }
New Type: UnityEngine.ImagePosition
Member Added: ImageLeft
Member Added: ImageAbove
Member Added: ImageOnly
Member Added: TextOnly
New Type: UnityEngine.GUIContent
Member Added: public GUIContent ();
Member Added: public GUIContent (string text);
Member Added: public GUIContent (UnityEngine.Texture image);
Member Added: public GUIContent (string text, UnityEngine.Texture image);
Member Added: public GUIContent (string text, string tooltip);
Member Added: public GUIContent (UnityEngine.Texture image, string tooltip);
Member Added: public GUIContent (string text, UnityEngine.Texture image, string tooltip);
Member Added: public GUIContent (UnityEngine.GUIContent src);
Member Added: public static UnityEngine.GUIContent none;
Member Added: public string text { set; get; }
Member Added: public UnityEngine.Texture image { set; get; }
Member Added: public string tooltip { set; get; }
Member Added: public int hash { get; }
New Type: UnityEngine.GUIStyleState
Member Added: public GUIStyleState ();
Member Added: public UnityEngine.Texture2D background { set; get; }
Member Added: public UnityEngine.Color textColor { set; get; }
New Type: UnityEngine.RectOffset
Member Added: public RectOffset ();
Member Added: public UnityEngine.Rect Add (UnityEngine.Rect rect);
Member Added: public UnityEngine.Rect Remove (UnityEngine.Rect rect);
Member Added: public override string ToString ();
Member Added: public int left { set; get; }
Member Added: public int right { set; get; }
Member Added: public int top { set; get; }
Member Added: public int bottom { set; get; }
Member Added: public int horizontal { get; }
Member Added: public int vertical { get; }
New Type: UnityEngine.GUIStyle
Member Added: public GUIStyle ();
Member Added: public GUIStyle (UnityEngine.GUIStyle other);
Member Added: ~GUIStyle ();
Member Added: public void Draw (UnityEngine.Rect position, bool isHover, bool isActive, bool on, bool hasKeyboardFocus);
Member Added: public void Draw (UnityEngine.Rect position, string text, bool isHover, bool isActive, bool on, bool hasKeyboardFocus);
Member Added: public void Draw (UnityEngine.Rect position, UnityEngine.Texture image, bool isHover, bool isActive, bool on, bool hasKeyboardFocus);
Member Added: public void Draw (UnityEngine.Rect position, UnityEngine.GUIContent content, bool isHover, bool isActive, bool on, bool hasKeyboardFocus);
Member Added: public void Draw (UnityEngine.Rect position, UnityEngine.GUIContent content, int controlID);
Member Added: public void Draw (UnityEngine.Rect position, UnityEngine.GUIContent content, int controlID, bool on);
Member Added: public void DrawCursor (UnityEngine.Rect position, UnityEngine.GUIContent content, int controlID, int Character);
Member Added: public void DrawWithTextSelection (UnityEngine.Rect position, UnityEngine.GUIContent content, int controlID, int firstSelectedCharacter, int lastSelectedCharacter);
Member Added: public UnityEngine.Vector2 GetCursorPixelPosition (UnityEngine.Rect position, UnityEngine.GUIContent content, int cursorStringIndex);
Member Added: public static void Internal_GetCursorPixelPosition (IntPtr target, UnityEngine.Rect position, string text, UnityEngine.Texture image, int cursorStringIndex, out UnityEngine.Vector2 ret);
Member Added: public int GetCursorStringIndex (UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.Vector2 cursorPixelPosition);
Member Added: public static int Internal_GetCursorStringIndex (IntPtr target, UnityEngine.Rect position, string text, UnityEngine.Texture image, UnityEngine.Vector2 cursorPixelPosition);
Member Added: public UnityEngine.Vector2 CalcSize (UnityEngine.GUIContent content);
Member Added: public static void Internal_CalcSize (IntPtr target, string text, UnityEngine.Texture image, out UnityEngine.Vector2 ret);
Member Added: public UnityEngine.Vector2 CalcScreenSize (UnityEngine.Vector2 contentSize);
Member Added: public float CalcHeight (UnityEngine.GUIContent content, float width);
Member Added: public void CalcMinMaxWidth (UnityEngine.GUIContent content, out float minWidth, out float maxWidth);
Member Added: public override string ToString ();
Member Added: public static UnityEngine.GUIStyle op_Implicit (string str);
Member Added: public string name { set; get; }
Member Added: public UnityEngine.GUIStyleState normal { set; get; }
Member Added: public UnityEngine.GUIStyleState hover { set; get; }
Member Added: public UnityEngine.GUIStyleState active { set; get; }
Member Added: public UnityEngine.GUIStyleState onNormal { set; get; }
Member Added: public UnityEngine.GUIStyleState onHover { set; get; }
Member Added: public UnityEngine.GUIStyleState onActive { set; get; }
Member Added: public UnityEngine.GUIStyleState focused { set; get; }
Member Added: public UnityEngine.GUIStyleState onFocused { set; get; }
Member Added: public UnityEngine.RectOffset border { set; get; }
Member Added: public UnityEngine.RectOffset margin { set; get; }
Member Added: public UnityEngine.RectOffset padding { set; get; }
Member Added: public UnityEngine.RectOffset overflow { set; get; }
Member Added: public UnityEngine.Font font { set; get; }
Member Added: public UnityEngine.ImagePosition imagePosition { set; get; }
Member Added: public UnityEngine.TextAnchor alignment { set; get; }
Member Added: public bool wordWrap { set; get; }
Member Added: public UnityEngine.TextClipping clipping { set; get; }
Member Added: public UnityEngine.Vector2 contentOffset { set; get; }
Member Added: public UnityEngine.Vector2 clipOffset { set; get; }
Member Added: public float fixedWidth { set; get; }
Member Added: public float fixedHeight { set; get; }
Member Added: public bool stretchWidth { set; get; }
Member Added: public bool stretchHeight { set; get; }
Member Added: public float lineHeight { get; }
Member Added: public static UnityEngine.GUIStyle none { get; }
Member Added: public bool isHeightDependantOnWidth { get; }
New Type: UnityEngine.PlatformSelection
Member Added: Native
Member Added: Mac
Member Added: Windows
New Type: UnityEngine.GUISettings
Member Added: public GUISettings ();
Member Added: public bool doubleClickSelectsWord { set; get; }
Member Added: public bool tripleClickSelectsLine { set; get; }
Member Added: public UnityEngine.Color cursorColor { set; get; }
Member Added: public float cursorFlashSpeed { set; get; }
Member Added: public UnityEngine.Color selectionColor { set; get; }
New Type: UnityEngine.GUISkin
Member Added: public GUISkin ();
Member Added: public UnityEngine.GUIStyle custom1;
Member Added: public UnityEngine.GUIStyle custom2;
Member Added: public UnityEngine.GUIStyle custom3;
Member Added: public UnityEngine.GUIStyle custom4;
Member Added: public UnityEngine.GUIStyle custom5;
Member Added: public UnityEngine.GUIStyle custom6;
Member Added: public UnityEngine.GUIStyle custom7;
Member Added: public UnityEngine.GUIStyle custom8;
Member Added: public UnityEngine.GUIStyle custom9;
Member Added: public UnityEngine.GUIStyle custom10;
Member Added: public UnityEngine.GUIStyle custom11;
Member Added: public UnityEngine.GUIStyle custom12;
Member Added: public UnityEngine.GUIStyle custom13;
Member Added: public UnityEngine.GUIStyle custom14;
Member Added: public UnityEngine.GUIStyle custom15;
Member Added: public UnityEngine.GUIStyle custom16;
Member Added: public UnityEngine.GUIStyle custom17;
Member Added: public UnityEngine.GUIStyle custom18;
Member Added: public UnityEngine.GUIStyle custom19;
Member Added: public UnityEngine.GUIStyle custom20;
Member Added: public UnityEngine.GUIStyle[] customStyles;
Member Added: public static UnityEngine.GUIStyle error;
Member Added: public System.Collections.Hashtable styles;
Member Added: public UnityEngine.GUIStyle GetStyle (string styleName);
Member Added: public UnityEngine.GUIStyle FindStyle (string styleName);
Member Added: public virtual System.Collections.IEnumerator GetEnumerator ();
Member Added: public UnityEngine.Font font { set; get; }
Member Added: public UnityEngine.GUIStyle box { set; get; }
Member Added: public UnityEngine.GUIStyle label { set; get; }
Member Added: public UnityEngine.GUIStyle textField { set; get; }
Member Added: public UnityEngine.GUIStyle textArea { set; get; }
Member Added: public UnityEngine.GUIStyle button { set; get; }
Member Added: public UnityEngine.GUIStyle toggle { set; get; }
Member Added: public UnityEngine.GUIStyle window { set; get; }
Member Added: public UnityEngine.GUIStyle horizontalSlider { set; get; }
Member Added: public UnityEngine.GUIStyle horizontalSliderThumb { set; get; }
Member Added: public UnityEngine.GUIStyle verticalSlider { set; get; }
Member Added: public UnityEngine.GUIStyle verticalSliderThumb { set; get; }
Member Added: public UnityEngine.GUIStyle horizontalScrollbar { set; get; }
Member Added: public UnityEngine.GUIStyle horizontalScrollbarThumb { set; get; }
Member Added: public UnityEngine.GUIStyle horizontalScrollbarLeftButton { set; get; }
Member Added: public UnityEngine.GUIStyle horizontalScrollbarRightButton { set; get; }
Member Added: public UnityEngine.GUIStyle verticalScrollbar { set; get; }
Member Added: public UnityEngine.GUIStyle verticalScrollbarThumb { set; get; }
Member Added: public UnityEngine.GUIStyle verticalScrollbarUpButton { set; get; }
Member Added: public UnityEngine.GUIStyle verticalScrollbarDownButton { set; get; }
Member Added: public UnityEngine.GUIStyle scrollView { set; get; }
Member Added: public UnityEngine.GUISettings settings { get; }
New Type: UnityEngine.GUIClip
Member Added: public static System.Collections.Stack s_GUIClips;
Member Added: public static void Push (UnityEngine.Rect screenRect);
Member Added: public static void Push (UnityEngine.Rect screenRect, UnityEngine.Vector2 scrollOffset);
Member Added: public static void Push (UnityEngine.Rect screenRect, UnityEngine.Vector2 scrollOffset, UnityEngine.Vector2 renderOffset, bool resetOffset);
Member Added: public static void Pop ();
Member Added: public static UnityEngine.Vector2 Unclip (UnityEngine.Vector2 pos);
Member Added: public static UnityEngine.Rect Unclip (UnityEngine.Rect rect);
Member Added: public static UnityEngine.Vector2 Clip (UnityEngine.Vector2 absolutePos);
Member Added: public static UnityEngine.Rect Clip (UnityEngine.Rect absoluteRect);
Member Added: public static void Reapply ();
Member Added: public static void SetGUIClipRect (UnityEngine.Rect r);
Member Added: public override string ToString ();
Member Added: public static UnityEngine.Rect topmostRect { get; }
Member Added: public static UnityEngine.Matrix4x4 matrix { set; get; }
Member Added: public static UnityEngine.Rect visibleRect { get; }
New Type: UnityEngine.Gizmos
Member Added: public Gizmos ();
Member Added: public static void DrawRay (UnityEngine.Ray r);
Member Added: public static void DrawRay (UnityEngine.Vector3 from, UnityEngine.Vector3 direction);
Member Added: public static void DrawLine (UnityEngine.Vector3 from, UnityEngine.Vector3 to);
Member Added: public static void DrawWireSphere (UnityEngine.Vector3 center, float radius);
Member Added: public static void DrawSphere (UnityEngine.Vector3 center, float radius);
Member Added: public static void DrawWireCube (UnityEngine.Vector3 center, UnityEngine.Vector3 size);
Member Added: public static void DrawCube (UnityEngine.Vector3 center, UnityEngine.Vector3 size);
Member Added: public static void DrawIcon (UnityEngine.Vector3 center, string name);
Member Added: public static void DrawGUITexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture);
Member Added: public static void DrawGUITexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, UnityEngine.Material mat);
Member Added: public static void DrawGUITexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, int leftBorder, int rightBorder, int topBorder, int bottomBorder, UnityEngine.Material mat);
Member Added: public static void DrawGUITexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, int leftBorder, int rightBorder, int topBorder, int bottomBorder);
Member Added: public static void DrawFrustum (UnityEngine.Vector3 center, float fov, float maxRange, float minRange, float aspect);
Member Added: public static UnityEngine.Color color { set; get; }
Member Added: public static UnityEngine.Matrix4x4 matrix { set; get; }
New Type: UnityEngine.EventType
Member Added: mouseDown
Member Added: mouseUp
Member Added: mouseMove
Member Added: mouseDrag
Member Added: keyDown
Member Added: keyUp
Member Added: scrollWheel
Member Added: repaint
Member Added: layout
Member Added: dragUpdated
Member Added: dragPerform
Member Added: ignore
Member Added: used
Member Added: MouseDown
Member Added: MouseUp
Member Added: MouseMove
Member Added: MouseDrag
Member Added: KeyDown
Member Added: KeyUp
Member Added: ScrollWheel
Member Added: Repaint
Member Added: Layout
Member Added: DragUpdated
Member Added: DragPerform
Member Added: DragExited
Member Added: Ignore
Member Added: Used
Member Added: ValidateCommand
Member Added: ExecuteCommand
Member Added: ContextClick
New Type: UnityEngine.Event
Member Added: public Event ();
Member Added: public Event (UnityEngine.Event other);
Member Added: public UnityEngine.EventType GetTypeForControl (int controlID);
Member Added: public void Use ();
Member Added: public static UnityEngine.Event KeyboardEvent (string key);
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object obj);
Member Added: public override string ToString ();
Member Added: public UnityEngine.EventType rawType { get; }
Member Added: public UnityEngine.EventType type { set; get; }
Member Added: public UnityEngine.Vector2 mousePosition { set; get; }
Member Added: public UnityEngine.Vector2 delta { set; get; }
Member Added: public UnityEngine.Ray mouseRay { set; get; }
Member Added: public int button { set; get; }
Member Added: public float pressure { set; get; }
Member Added: public int clickCount { set; get; }
Member Added: public IntPtr camera { set; get; }
Member Added: public char character { set; get; }
Member Added: public string commandName { set; get; }
Member Added: public UnityEngine.KeyCode keyCode { set; get; }
Member Added: public bool shift { set; get; }
Member Added: public bool control { set; get; }
Member Added: public bool alt { set; get; }
Member Added: public bool command { set; get; }
Member Added: public bool capsLock { set; get; }
Member Added: public bool numeric { set; get; }
Member Added: public bool functionKey { get; }
Member Added: public static UnityEngine.Event current { set; get; }
Member Added: public bool isKey { get; }
Member Added: public bool isMouse { get; }
New Type: UnityEngine.TextClipping
Member Added: Overflow
Member Added: Clip
New Type: UnityEngine.KeyCode
Member Added: None
Member Added: Backspace
Member Added: Delete
Member Added: Tab
Member Added: Clear
Member Added: Return
Member Added: Pause
Member Added: Escape
Member Added: Space
Member Added: Keypad0
Member Added: Keypad1
Member Added: Keypad2
Member Added: Keypad3
Member Added: Keypad4
Member Added: Keypad5
Member Added: Keypad6
Member Added: Keypad7
Member Added: Keypad8
Member Added: Keypad9
Member Added: KeypadPeriod
Member Added: KeypadDivide
Member Added: KeypadMultiply
Member Added: KeypadMinus
Member Added: KeypadPlus
Member Added: KeypadEnter
Member Added: KeypadEquals
Member Added: UpArrow
Member Added: DownArrow
Member Added: RightArrow
Member Added: LeftArrow
Member Added: Insert
Member Added: Home
Member Added: End
Member Added: PageUp
Member Added: PageDown
Member Added: F1
Member Added: F2
Member Added: F3
Member Added: F4
Member Added: F5
Member Added: F6
Member Added: F7
Member Added: F8
Member Added: F9
Member Added: F10
Member Added: F11
Member Added: F12
Member Added: F13
Member Added: F14
Member Added: F15
Member Added: Alpha0
Member Added: Alpha1
Member Added: Alpha2
Member Added: Alpha3
Member Added: Alpha4
Member Added: Alpha5
Member Added: Alpha6
Member Added: Alpha7
Member Added: Alpha8
Member Added: Alpha9
Member Added: Exclaim
Member Added: DoubleQuote
Member Added: Hash
Member Added: Dollar
Member Added: Ampersand
Member Added: Quote
Member Added: LeftParen
Member Added: RightParen
Member Added: Asterisk
Member Added: Plus
Member Added: Comma
Member Added: Minus
Member Added: Period
Member Added: Slash
Member Added: Colon
Member Added: Semicolon
Member Added: Less
Member Added: Equals
Member Added: Greater
Member Added: Question
Member Added: At
Member Added: LeftBracket
Member Added: Backslash
Member Added: RightBracket
Member Added: Caret
Member Added: Underscore
Member Added: BackQuote
Member Added: A
Member Added: B
Member Added: C
Member Added: D
Member Added: E
Member Added: F
Member Added: G
Member Added: H
Member Added: I
Member Added: J
Member Added: K
Member Added: L
Member Added: M
Member Added: N
Member Added: O
Member Added: P
Member Added: Q
Member Added: R
Member Added: S
Member Added: T
Member Added: U
Member Added: V
Member Added: W
Member Added: X
Member Added: Y
Member Added: Z
Member Added: Numlock
Member Added: CapsLock
Member Added: ScrollLock
Member Added: RightShift
Member Added: LeftShift
Member Added: RightControl
Member Added: LeftControl
Member Added: RightAlt
Member Added: LeftAlt
Member Added: LeftApple
Member Added: LeftWindows
Member Added: RightApple
Member Added: RightWindows
Member Added: AltGr
Member Added: Help
Member Added: Print
Member Added: SysReq
Member Added: Break
Member Added: Mouse0
Member Added: Mouse1
Member Added: Mouse2
Member Added: Mouse3
Member Added: Mouse4
Member Added: Mouse5
Member Added: Mouse6
Member Added: JoystickButton0
Member Added: JoystickButton1
Member Added: JoystickButton2
Member Added: JoystickButton3
Member Added: JoystickButton4
Member Added: JoystickButton5
Member Added: JoystickButton6
Member Added: JoystickButton7
Member Added: JoystickButton8
Member Added: JoystickButton9
Member Added: JoystickButton10
Member Added: JoystickButton11
Member Added: JoystickButton12
Member Added: JoystickButton13
Member Added: JoystickButton14
Member Added: JoystickButton15
Member Added: JoystickButton16
Member Added: JoystickButton17
Member Added: JoystickButton18
Member Added: JoystickButton19
Member Added: Joystick1Button0
Member Added: Joystick1Button1
Member Added: Joystick1Button2
Member Added: Joystick1Button3
Member Added: Joystick1Button4
Member Added: Joystick1Button5
Member Added: Joystick1Button6
Member Added: Joystick1Button7
Member Added: Joystick1Button8
Member Added: Joystick1Button9
Member Added: Joystick1Button10
Member Added: Joystick1Button11
Member Added: Joystick1Button12
Member Added: Joystick1Button13
Member Added: Joystick1Button14
Member Added: Joystick1Button15
Member Added: Joystick1Button16
Member Added: Joystick1Button17
Member Added: Joystick1Button18
Member Added: Joystick1Button19
Member Added: Joystick2Button0
Member Added: Joystick2Button1
Member Added: Joystick2Button2
Member Added: Joystick2Button3
Member Added: Joystick2Button4
Member Added: Joystick2Button5
Member Added: Joystick2Button6
Member Added: Joystick2Button7
Member Added: Joystick2Button8
Member Added: Joystick2Button9
Member Added: Joystick2Button10
Member Added: Joystick2Button11
Member Added: Joystick2Button12
Member Added: Joystick2Button13
Member Added: Joystick2Button14
Member Added: Joystick2Button15
Member Added: Joystick2Button16
Member Added: Joystick2Button17
Member Added: Joystick2Button18
Member Added: Joystick2Button19
Member Added: Joystick3Button0
Member Added: Joystick3Button1
Member Added: Joystick3Button2
Member Added: Joystick3Button3
Member Added: Joystick3Button4
Member Added: Joystick3Button5
Member Added: Joystick3Button6
Member Added: Joystick3Button7
Member Added: Joystick3Button8
Member Added: Joystick3Button9
Member Added: Joystick3Button10
Member Added: Joystick3Button11
Member Added: Joystick3Button12
Member Added: Joystick3Button13
Member Added: Joystick3Button14
Member Added: Joystick3Button15
Member Added: Joystick3Button16
Member Added: Joystick3Button17
Member Added: Joystick3Button18
Member Added: Joystick3Button19
New Type: UnityEngine.Vector2
Member Added: public Vector2 (float x, float y);
Member Added: public const float kEpsilon = 1E-05;
Member Added: public float x;
Member Added: public float y;
Member Added: public static UnityEngine.Vector2 Scale (UnityEngine.Vector2 a, UnityEngine.Vector2 b);
Member Added: public override string ToString ();
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public static float Dot (UnityEngine.Vector2 lhs, UnityEngine.Vector2 rhs);
Member Added: public static float Distance (UnityEngine.Vector2 a, UnityEngine.Vector2 b);
Member Added: public static float SqrMagnitude (UnityEngine.Vector2 a);
Member Added: public float SqrMagnitude ();
Member Added: public static UnityEngine.Vector2 op_Addition (UnityEngine.Vector2 a, UnityEngine.Vector2 b);
Member Added: public static UnityEngine.Vector2 op_Subtraction (UnityEngine.Vector2 a, UnityEngine.Vector2 b);
Member Added: public static UnityEngine.Vector2 op_UnaryNegation (UnityEngine.Vector2 a);
Member Added: public static UnityEngine.Vector2 op_Multiply (UnityEngine.Vector2 a, float d);
Member Added: public static UnityEngine.Vector2 op_Multiply (float d, UnityEngine.Vector2 a);
Member Added: public static UnityEngine.Vector2 op_Division (UnityEngine.Vector2 a, float d);
Member Added: public static UnityEngine.Vector2 op_Implicit (UnityEngine.Vector3 v);
Member Added: public static UnityEngine.Vector3 op_Implicit (UnityEngine.Vector2 v);
Member Added: public static bool op_Equality (UnityEngine.Vector2 lhs, UnityEngine.Vector2 rhs);
Member Added: public static bool op_Inequality (UnityEngine.Vector2 lhs, UnityEngine.Vector2 rhs);
Member Added: public float this[int index] { set; get; }
Member Added: public float magnitude { get; }
Member Added: public float sqrMagnitude { get; }
Member Added: public static UnityEngine.Vector2 zero { get; }
Member Added: public static UnityEngine.Vector2 up { get; }
Member Added: public static UnityEngine.Vector2 right { get; }
New Type: UnityEngine.Vector3
Member Added: public Vector3 (float x, float y, float z);
Member Added: public Vector3 (float x, float y);
Member Added: public const float kEpsilon = 1E-05;
Member Added: public float x;
Member Added: public float y;
Member Added: public float z;
Member Added: public static UnityEngine.Vector3 Lerp (UnityEngine.Vector3 from, UnityEngine.Vector3 to, float t);
Member Added: public static UnityEngine.Vector3 Slerp (UnityEngine.Vector3 from, UnityEngine.Vector3 to, float t);
Member Added: public static void OrthoNormalize (ref UnityEngine.Vector3 normal, ref UnityEngine.Vector3 tangent);
Member Added: public static void OrthoNormalize (ref UnityEngine.Vector3 normal, ref UnityEngine.Vector3 tangent, ref UnityEngine.Vector3 binormal);
Member Added: public static UnityEngine.Vector3 RotateTowards (UnityEngine.Vector3 from, UnityEngine.Vector3 to, float maxRadiansDelta, float maxMagnitudeDelta);
Member Added: public static UnityEngine.Vector3 Scale (UnityEngine.Vector3 a, UnityEngine.Vector3 b);
Member Added: public void Scale (UnityEngine.Vector3 scale);
Member Added: public static UnityEngine.Vector3 Cross (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public static UnityEngine.Vector3 Reflect (UnityEngine.Vector3 inDirection, UnityEngine.Vector3 inNormal);
Member Added: public static UnityEngine.Vector3 Normalize (UnityEngine.Vector3 value);
Member Added: public void Normalize ();
Member Added: public override string ToString ();
Member Added: public static float Dot (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);
Member Added: public static UnityEngine.Vector3 Project (UnityEngine.Vector3 vector, UnityEngine.Vector3 onNormal);
Member Added: public static UnityEngine.Vector3 Exclude (UnityEngine.Vector3 excludeThis, UnityEngine.Vector3 fromThat);
Member Added: public static float Angle (UnityEngine.Vector3 from, UnityEngine.Vector3 to);
Member Added: public static float Distance (UnityEngine.Vector3 a, UnityEngine.Vector3 b);
Member Added: public static float Magnitude (UnityEngine.Vector3 a);
Member Added: public static float SqrMagnitude (UnityEngine.Vector3 a);
Member Added: public static UnityEngine.Vector3 Min (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);
Member Added: public static UnityEngine.Vector3 Max (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);
Member Added: public static float AngleBetween (UnityEngine.Vector3 from, UnityEngine.Vector3 to);
Member Added: public static UnityEngine.Vector3 op_Addition (UnityEngine.Vector3 a, UnityEngine.Vector3 b);
Member Added: public static UnityEngine.Vector3 op_Subtraction (UnityEngine.Vector3 a, UnityEngine.Vector3 b);
Member Added: public static UnityEngine.Vector3 op_UnaryNegation (UnityEngine.Vector3 a);
Member Added: public static UnityEngine.Vector3 op_Multiply (UnityEngine.Vector3 a, float d);
Member Added: public static UnityEngine.Vector3 op_Multiply (float d, UnityEngine.Vector3 a);
Member Added: public static UnityEngine.Vector3 op_Division (UnityEngine.Vector3 a, float d);
Member Added: public static bool op_Equality (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);
Member Added: public static bool op_Inequality (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);
Member Added: public float this[int index] { set; get; }
Member Added: public UnityEngine.Vector3 normalized { get; }
Member Added: public float magnitude { get; }
Member Added: public float sqrMagnitude { get; }
Member Added: public static UnityEngine.Vector3 zero { get; }
Member Added: public static UnityEngine.Vector3 one { get; }
Member Added: public static UnityEngine.Vector3 forward { get; }
Member Added: public static UnityEngine.Vector3 back { get; }
Member Added: public static UnityEngine.Vector3 up { get; }
Member Added: public static UnityEngine.Vector3 down { get; }
Member Added: public static UnityEngine.Vector3 left { get; }
Member Added: public static UnityEngine.Vector3 right { get; }
Member Added: public static UnityEngine.Vector3 fwd { get; }
New Type: UnityEngine.Color
Member Added: public Color (float r, float g, float b, float a);
Member Added: public Color (float r, float g, float b);
Member Added: public float r;
Member Added: public float g;
Member Added: public float b;
Member Added: public float a;
Member Added: public override string ToString ();
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public static UnityEngine.Color Lerp (UnityEngine.Color a, UnityEngine.Color b, float t);
Member Added: public static UnityEngine.Color op_Addition (UnityEngine.Color a, UnityEngine.Color b);
Member Added: public static UnityEngine.Color op_Subtraction (UnityEngine.Color a, UnityEngine.Color b);
Member Added: public static UnityEngine.Color op_Multiply (UnityEngine.Color a, UnityEngine.Color b);
Member Added: public static UnityEngine.Color op_Multiply (UnityEngine.Color a, float b);
Member Added: public static UnityEngine.Color op_Multiply (float b, UnityEngine.Color a);
Member Added: public static UnityEngine.Color op_Division (UnityEngine.Color a, float b);
Member Added: public static bool op_Equality (UnityEngine.Color lhs, UnityEngine.Color rhs);
Member Added: public static bool op_Inequality (UnityEngine.Color lhs, UnityEngine.Color rhs);
Member Added: public static UnityEngine.Vector4 op_Implicit (UnityEngine.Color c);
Member Added: public static UnityEngine.Color op_Implicit (UnityEngine.Vector4 v);
Member Added: public static UnityEngine.Color red { get; }
Member Added: public static UnityEngine.Color green { get; }
Member Added: public static UnityEngine.Color blue { get; }
Member Added: public static UnityEngine.Color white { get; }
Member Added: public static UnityEngine.Color black { get; }
Member Added: public static UnityEngine.Color yellow { get; }
Member Added: public static UnityEngine.Color cyan { get; }
Member Added: public static UnityEngine.Color magenta { get; }
Member Added: public static UnityEngine.Color gray { get; }
Member Added: public static UnityEngine.Color grey { get; }
Member Added: public static UnityEngine.Color clear { get; }
Member Added: public float grayscale { get; }
Member Added: public float this[int index] { set; get; }
New Type: UnityEngine.Color32
Member Added: public byte red;
Member Added: public byte green;
Member Added: public byte blue;
Member Added: public byte alpha;
Member Added: public static UnityEngine.Color32 op_Implicit (UnityEngine.Color c);
Member Added: public static UnityEngine.Color op_Implicit (UnityEngine.Color32 v);
New Type: UnityEngine.Quaternion
Member Added: public Quaternion (float x, float y, float z, float w);
Member Added: public const float kEpsilon = 1E-06;
Member Added: public float x;
Member Added: public float y;
Member Added: public float z;
Member Added: public float w;
Member Added: public static float Dot (UnityEngine.Quaternion a, UnityEngine.Quaternion b);
Member Added: public static UnityEngine.Quaternion AngleAxis (float angle, UnityEngine.Vector3 axis);
Member Added: public void ToAngleAxis (out float angle, out UnityEngine.Vector3 axis);
Member Added: public static UnityEngine.Quaternion FromToRotation (UnityEngine.Vector3 fromDirection, UnityEngine.Vector3 toDirection);
Member Added: public void SetFromToRotation (UnityEngine.Vector3 fromDirection, UnityEngine.Vector3 toDirection);
Member Added: public static UnityEngine.Quaternion LookRotation (UnityEngine.Vector3 forward, UnityEngine.Vector3 upwards);
Member Added: public static UnityEngine.Quaternion LookRotation (UnityEngine.Vector3 forward);
Member Added: public void SetLookRotation (UnityEngine.Vector3 view);
Member Added: public void SetLookRotation (UnityEngine.Vector3 view, UnityEngine.Vector3 up);
Member Added: public static UnityEngine.Quaternion Slerp (UnityEngine.Quaternion from, UnityEngine.Quaternion to, float t);
Member Added: public static UnityEngine.Quaternion Lerp (UnityEngine.Quaternion a, UnityEngine.Quaternion b, float t);
Member Added: public static UnityEngine.Quaternion Inverse (UnityEngine.Quaternion rotation);
Member Added: public override string ToString ();
Member Added: public static float Angle (UnityEngine.Quaternion a, UnityEngine.Quaternion b);
Member Added: public static UnityEngine.Quaternion Euler (float x, float y, float z);
Member Added: public static UnityEngine.Quaternion Euler (UnityEngine.Vector3 euler);
Member Added: public static UnityEngine.Quaternion EulerRotation (float x, float y, float z);
Member Added: public static UnityEngine.Quaternion EulerRotation (UnityEngine.Vector3 euler);
Member Added: public void SetEulerRotation (float x, float y, float z);
Member Added: public void SetEulerRotation (UnityEngine.Vector3 euler);
Member Added: public UnityEngine.Vector3 ToEuler ();
Member Added: public static UnityEngine.Quaternion EulerAngles (float x, float y, float z);
Member Added: public static UnityEngine.Quaternion EulerAngles (UnityEngine.Vector3 euler);
Member Added: public void ToAxisAngle (out UnityEngine.Vector3 axis, out float angle);
Member Added: public void SetEulerAngles (float x, float y, float z);
Member Added: public void SetEulerAngles (UnityEngine.Vector3 euler);
Member Added: public static UnityEngine.Vector3 ToEulerAngles (UnityEngine.Quaternion rotation);
Member Added: public UnityEngine.Vector3 ToEulerAngles ();
Member Added: public static UnityEngine.Quaternion AxisAngle (UnityEngine.Vector3 axis, float angle);
Member Added: public void SetAxisAngle (UnityEngine.Vector3 axis, float angle);
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public static UnityEngine.Quaternion op_Multiply (UnityEngine.Quaternion lhs, UnityEngine.Quaternion rhs);
Member Added: public static UnityEngine.Vector3 op_Multiply (UnityEngine.Quaternion rotation, UnityEngine.Vector3 point);
Member Added: public static bool op_Equality (UnityEngine.Quaternion lhs, UnityEngine.Quaternion rhs);
Member Added: public static bool op_Inequality (UnityEngine.Quaternion lhs, UnityEngine.Quaternion rhs);
Member Added: public float this[int index] { set; get; }
Member Added: public static UnityEngine.Quaternion identity { get; }
Member Added: public UnityEngine.Vector3 eulerAngles { set; get; }
New Type: UnityEngine.Rect
Member Added: public Rect (float left, float top, float width, float height);
Member Added: public Rect (UnityEngine.Rect source);
Member Added: public static UnityEngine.Rect MinMaxRect (float left, float top, float right, float bottom);
Member Added: public override string ToString ();
Member Added: public bool Contains (UnityEngine.Vector2 point);
Member Added: public bool Contains (UnityEngine.Vector3 point);
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public static bool op_Inequality (UnityEngine.Rect lhs, UnityEngine.Rect rhs);
Member Added: public static bool op_Equality (UnityEngine.Rect lhs, UnityEngine.Rect rhs);
Member Added: public float x { set; get; }
Member Added: public float y { set; get; }
Member Added: public float width { set; get; }
Member Added: public float height { set; get; }
Member Added: public float left { get; }
Member Added: public float right { get; }
Member Added: public float top { get; }
Member Added: public float bottom { get; }
Member Added: public float xMin { set; get; }
Member Added: public float yMin { set; get; }
Member Added: public float xMax { set; get; }
Member Added: public float yMax { set; get; }
New Type: UnityEngine.Matrix4x4
Member Added: public float m00;
Member Added: public float m10;
Member Added: public float m20;
Member Added: public float m30;
Member Added: public float m01;
Member Added: public float m11;
Member Added: public float m21;
Member Added: public float m31;
Member Added: public float m02;
Member Added: public float m12;
Member Added: public float m22;
Member Added: public float m32;
Member Added: public float m03;
Member Added: public float m13;
Member Added: public float m23;
Member Added: public float m33;
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public static UnityEngine.Matrix4x4 Inverse (UnityEngine.Matrix4x4 m);
Member Added: public static UnityEngine.Matrix4x4 Transpose (UnityEngine.Matrix4x4 m);
Member Added: public UnityEngine.Vector4 GetColumn (int i);
Member Added: public UnityEngine.Vector4 GetRow (int i);
Member Added: public void SetColumn (int i, UnityEngine.Vector4 v);
Member Added: public void SetRow (int i, UnityEngine.Vector4 v);
Member Added: public UnityEngine.Vector3 MultiplyPoint (UnityEngine.Vector3 v);
Member Added: public UnityEngine.Vector3 MultiplyPoint3x4 (UnityEngine.Vector3 v);
Member Added: public UnityEngine.Vector3 MultiplyVector (UnityEngine.Vector3 v);
Member Added: public static UnityEngine.Matrix4x4 Scale (UnityEngine.Vector3 v);
Member Added: public void SetTRS (UnityEngine.Vector3 pos, UnityEngine.Quaternion q, UnityEngine.Vector3 s);
Member Added: public static UnityEngine.Matrix4x4 TRS (UnityEngine.Vector3 pos, UnityEngine.Quaternion q, UnityEngine.Vector3 s);
Member Added: public override string ToString ();
Member Added: public static UnityEngine.Matrix4x4 Ortho (float left, float right, float bottom, float top, float zNear, float zFar);
Member Added: public static UnityEngine.Matrix4x4 Perspective (float fov, float aspect, float zNear, float zFar);
Member Added: public static UnityEngine.Matrix4x4 op_Multiply (UnityEngine.Matrix4x4 lhs, UnityEngine.Matrix4x4 rhs);
Member Added: public static UnityEngine.Vector4 op_Multiply (UnityEngine.Matrix4x4 lhs, UnityEngine.Vector4 v);
Member Added: public static bool op_Equality (UnityEngine.Matrix4x4 lhs, UnityEngine.Matrix4x4 rhs);
Member Added: public static bool op_Inequality (UnityEngine.Matrix4x4 lhs, UnityEngine.Matrix4x4 rhs);
Member Added: public float this[int row, int column] { set; get; }
Member Added: public float this[int index] { set; get; }
Member Added: public UnityEngine.Matrix4x4 inverse { get; }
Member Added: public UnityEngine.Matrix4x4 transpose { get; }
Member Added: public bool isIdentity { get; }
Member Added: public static UnityEngine.Matrix4x4 zero { get; }
Member Added: public static UnityEngine.Matrix4x4 identity { get; }
New Type: UnityEngine.Bounds
Member Added: public Bounds (UnityEngine.Vector3 center, UnityEngine.Vector3 size);
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public void SetMinMax (UnityEngine.Vector3 min, UnityEngine.Vector3 max);
Member Added: public void Encapsulate (UnityEngine.Vector3 point);
Member Added: public void Encapsulate (UnityEngine.Bounds bounds);
Member Added: public void Expand (float amount);
Member Added: public void Expand (UnityEngine.Vector3 amount);
Member Added: public bool Contains (UnityEngine.Vector3 point);
Member Added: public float SqrDistance (UnityEngine.Vector3 point);
Member Added: public bool IntersectRay (UnityEngine.Ray ray);
Member Added: public bool IntersectRay (UnityEngine.Ray ray, out float distance);
Member Added: public override string ToString ();
Member Added: public static bool op_Equality (UnityEngine.Bounds lhs, UnityEngine.Bounds rhs);
Member Added: public static bool op_Inequality (UnityEngine.Bounds lhs, UnityEngine.Bounds rhs);
Member Added: public UnityEngine.Vector3 center { set; get; }
Member Added: public UnityEngine.Vector3 size { set; get; }
Member Added: public UnityEngine.Vector3 extents { set; get; }
Member Added: public UnityEngine.Vector3 min { set; get; }
Member Added: public UnityEngine.Vector3 max { set; get; }
New Type: UnityEngine.Vector4
Member Added: public Vector4 (float x, float y, float z, float w);
Member Added: public Vector4 (float x, float y, float z);
Member Added: public Vector4 (float x, float y);
Member Added: public const float kEpsilon = 1E-05;
Member Added: public float x;
Member Added: public float y;
Member Added: public float z;
Member Added: public float w;
Member Added: public static UnityEngine.Vector4 Lerp (UnityEngine.Vector4 from, UnityEngine.Vector4 to, float t);
Member Added: public static UnityEngine.Vector4 Scale (UnityEngine.Vector4 a, UnityEngine.Vector4 b);
Member Added: public void Scale (UnityEngine.Vector4 scale);
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public static UnityEngine.Vector4 Normalize (UnityEngine.Vector4 a);
Member Added: public void Normalize ();
Member Added: public override string ToString ();
Member Added: public static float Dot (UnityEngine.Vector4 a, UnityEngine.Vector4 b);
Member Added: public static UnityEngine.Vector4 Project (UnityEngine.Vector4 a, UnityEngine.Vector4 b);
Member Added: public static float Distance (UnityEngine.Vector4 a, UnityEngine.Vector4 b);
Member Added: public static float Magnitude (UnityEngine.Vector4 a);
Member Added: public static float SqrMagnitude (UnityEngine.Vector4 a);
Member Added: public float SqrMagnitude ();
Member Added: public static UnityEngine.Vector4 op_Addition (UnityEngine.Vector4 a, UnityEngine.Vector4 b);
Member Added: public static UnityEngine.Vector4 op_Subtraction (UnityEngine.Vector4 a, UnityEngine.Vector4 b);
Member Added: public static UnityEngine.Vector4 op_UnaryNegation (UnityEngine.Vector4 a);
Member Added: public static UnityEngine.Vector4 op_Multiply (UnityEngine.Vector4 a, float d);
Member Added: public static UnityEngine.Vector4 op_Multiply (float d, UnityEngine.Vector4 a);
Member Added: public static UnityEngine.Vector4 op_Division (UnityEngine.Vector4 a, float d);
Member Added: public static bool op_Equality (UnityEngine.Vector4 lhs, UnityEngine.Vector4 rhs);
Member Added: public static bool op_Inequality (UnityEngine.Vector4 lhs, UnityEngine.Vector4 rhs);
Member Added: public static UnityEngine.Vector4 op_Implicit (UnityEngine.Vector3 v);
Member Added: public static UnityEngine.Vector3 op_Implicit (UnityEngine.Vector4 v);
Member Added: public float this[int index] { set; get; }
Member Added: public UnityEngine.Vector4 normalized { get; }
Member Added: public float magnitude { get; }
Member Added: public float sqrMagnitude { get; }
Member Added: public static UnityEngine.Vector4 zero { get; }
Member Added: public static UnityEngine.Vector4 one { get; }
New Type: UnityEngine.Ray
Member Added: public Ray (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction);
Member Added: public UnityEngine.Vector3 GetPoint (float distance);
Member Added: public override string ToString ();
Member Added: public UnityEngine.Vector3 origin { set; get; }
Member Added: public UnityEngine.Vector3 direction { set; get; }
New Type: UnityEngine.Plane
Member Added: public Plane (UnityEngine.Vector3 inNormal, UnityEngine.Vector3 inPoint);
Member Added: public Plane (UnityEngine.Vector3 inNormal, float d);
Member Added: public Plane (UnityEngine.Vector3 a, UnityEngine.Vector3 b, UnityEngine.Vector3 c);
Member Added: public void SetNormalAndPosition (UnityEngine.Vector3 inNormal, UnityEngine.Vector3 inPoint);
Member Added: public void Set3Points (UnityEngine.Vector3 a, UnityEngine.Vector3 b, UnityEngine.Vector3 c);
Member Added: public float GetDistanceToPoint (UnityEngine.Vector3 inPt);
Member Added: public bool GetSide (UnityEngine.Vector3 inPt);
Member Added: public bool SameSide (UnityEngine.Vector3 inPt0, UnityEngine.Vector3 inPt1);
Member Added: public bool Raycast (UnityEngine.Ray ray, out float enter);
Member Added: public UnityEngine.Vector3 normal { set; get; }
Member Added: public float distance { set; get; }
New Type: UnityEngine.Mathf
Member Added: public const float PI = 3.141593;
Member Added: public const float Infinity = Infinity;
Member Added: public const float NegativeInfinity = -Infinity;
Member Added: public const float Deg2Rad = 0.01745329;
Member Added: public const float Rad2Deg = 57.29578;
Member Added: public const float Epsilon = 1.401298E-45;
Member Added: public static float Sin (float f);
Member Added: public static float Cos (float f);
Member Added: public static float Tan (float f);
Member Added: public static float Asin (float f);
Member Added: public static float Acos (float f);
Member Added: public static float Atan (float f);
Member Added: public static float Atan2 (float y, float x);
Member Added: public static float Sqrt (float f);
Member Added: public static float Abs (float f);
Member Added: public static int Abs (int value);
Member Added: public static float Min (float a, float b);
Member Added: public static int Min (int a, int b);
Member Added: public static float Max (float a, float b);
Member Added: public static int Max (int a, int b);
Member Added: public static float Pow (float f, float p);
Member Added: public static float Exp (float power);
Member Added: public static float Log (float f, float p);
Member Added: public static float Log (float f);
Member Added: public static float Log10 (float f);
Member Added: public static float Ceil (float f);
Member Added: public static float Floor (float f);
Member Added: public static float Round (float f);
Member Added: public static int CeilToInt (float f);
Member Added: public static int FloorToInt (float f);
Member Added: public static int RoundToInt (float f);
Member Added: public static float Sign (float f);
Member Added: public static float Clamp (float value, float min, float max);
Member Added: public static int Clamp (int value, int min, int max);
Member Added: public static float Clamp01 (float value);
Member Added: public static float Lerp (float a, float b, float t);
Member Added: public static float LerpAngle (float a, float b, float t);
Member Added: public static float SmoothStep (float from, float to, float t);
Member Added: public static float Gamma (float value, float absmax, float gamma);
Member Added: public static bool Approximately (float a, float b);
Member Added: public static float SmoothDamp (float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed);
Member Added: public static float SmoothDamp (float current, float target, ref float currentVelocity, float smoothTime);
Member Added: public static float SmoothDamp (float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed, float deltaTime);
Member Added: public static float SmoothDampAngle (float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed);
Member Added: public static float SmoothDampAngle (float current, float target, ref float currentVelocity, float smoothTime);
Member Added: public static float SmoothDampAngle (float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed, float deltaTime);
Member Added: public static float Repeat (float t, float length);
Member Added: public static float PingPong (float t, float length);
Member Added: public static float InverseLerp (float from, float to, float value);
Member Added: public static int ClosestPowerOfTwo (int value);
Member Added: public static float DeltaAngle (float current, float target);
Member Added: public static float PerlinNoise (float x, float y);
New Type: UnityEngine.RPCMode
Member Added: Server
Member Added: Others
Member Added: OthersBuffered
Member Added: All
Member Added: AllBuffered
New Type: UnityEngine.ConnectionTesterStatus
Member Added: Error
Member Added: Undetermined
Member Added: PrivateIPNoNATPunchthrough
Member Added: PrivateIPHasNATPunchThrough
Member Added: PublicIPIsConnectable
Member Added: PublicIPPortBlocked
Member Added: PublicIPNoServerStarted
New Type: UnityEngine.NetworkConnectionError
Member Added: NoError
Member Added: RSAPublicKeyMismatch
Member Added: InvalidPassword
Member Added: ConnectionFailed
Member Added: TooManyConnectedPlayers
Member Added: ConnectionBanned
Member Added: AlreadyConnectedToAnotherServer
Member Added: CreateSocketOrThreadFailure
Member Added: IncorrectParameters
Member Added: EmptyConnectTarget
Member Added: InternalDirectConnectFailed
Member Added: NATTargetNotConnected
Member Added: NATTargetConnectionLost
New Type: UnityEngine.NetworkDisconnection
Member Added: LostConnection
Member Added: Disconnected
New Type: UnityEngine.MasterServerEvent
Member Added: RegistrationFailedGameName
Member Added: RegistrationFailedGameType
Member Added: RegistrationFailedNoServer
Member Added: RegistrationSucceeded
Member Added: HostListReceived
New Type: UnityEngine.NetworkStateSynchronization
Member Added: Off
Member Added: ReliableDeltaCompressed
Member Added: Unreliable
New Type: UnityEngine.NetworkPeerType
Member Added: Disconnected
Member Added: Server
Member Added: Client
Member Added: Connecting
New Type: UnityEngine.NetworkPlayer
Member Added: public NetworkPlayer (string ip, int port);
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public override string ToString ();
Member Added: public static bool op_Equality (UnityEngine.NetworkPlayer lhs, UnityEngine.NetworkPlayer rhs);
Member Added: public static bool op_Inequality (UnityEngine.NetworkPlayer lhs, UnityEngine.NetworkPlayer rhs);
Member Added: public string ipAddress { get; }
Member Added: public int port { get; }
Member Added: public string externalIP { get; }
Member Added: public int externalPort { get; }
New Type: UnityEngine.NetworkViewID
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public override string ToString ();
Member Added: public static bool op_Equality (UnityEngine.NetworkViewID lhs, UnityEngine.NetworkViewID rhs);
Member Added: public static bool op_Inequality (UnityEngine.NetworkViewID lhs, UnityEngine.NetworkViewID rhs);
Member Added: public static UnityEngine.NetworkViewID unassigned { get; }
Member Added: public bool isMine { get; }
Member Added: public UnityEngine.NetworkPlayer owner { get; }
New Type: UnityEngine.Ping
Member Added: public Ping (string address);
Member Added: public void DestroyPing ();
Member Added: ~Ping ();
Member Added: public bool isDone { get; }
Member Added: public int time { get; }
Member Added: public string ip { get; }
New Type: UnityEngine.NetworkView
Member Added: public NetworkView ();
Member Added: public void RPC (string name, UnityEngine.RPCMode mode, object[] args);
Member Added: public void RPC (string name, UnityEngine.NetworkPlayer target, object[] args);
Member Added: public bool SetScope (UnityEngine.NetworkPlayer player, bool relevancy);
Member Added: public static UnityEngine.NetworkView Find (UnityEngine.NetworkViewID viewID);
Member Added: public UnityEngine.Component observed { set; get; }
Member Added: public UnityEngine.NetworkStateSynchronization stateSynchronization { set; get; }
Member Added: public UnityEngine.NetworkViewID viewID { set; get; }
Member Added: public int group { set; get; }
Member Added: public bool isMine { get; }
Member Added: public UnityEngine.NetworkPlayer owner { get; }
New Type: UnityEngine.Network
Member Added: public Network ();
Member Added: public static UnityEngine.NetworkConnectionError InitializeServer (int connections, int listenPort);
Member Added: public static void InitializeSecurity ();
Member Added: public static UnityEngine.NetworkConnectionError Connect (string IP, int remotePort);
Member Added: public static UnityEngine.NetworkConnectionError Connect (string IP, int remotePort, string password);
Member Added: public static UnityEngine.NetworkConnectionError Connect (string[] IPs, int remotePort);
Member Added: public static UnityEngine.NetworkConnectionError Connect (string[] IPs, int remotePort, string password);
Member Added: public static void Disconnect (int timeout);
Member Added: public static void Disconnect ();
Member Added: public static void CloseConnection (UnityEngine.NetworkPlayer target, bool sendDisconnectionNotification);
Member Added: public static UnityEngine.NetworkViewID AllocateViewID ();
Member Added: public static UnityEngine.Object Instantiate (UnityEngine.Object prefab, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, int group);
Member Added: public static void Destroy (UnityEngine.NetworkViewID viewID);
Member Added: public static void Destroy (UnityEngine.GameObject gameObject);
Member Added: public static void DestroyPlayerObjects (UnityEngine.NetworkPlayer playerID);
Member Added: public static void RemoveRPCs (UnityEngine.NetworkPlayer playerID);
Member Added: public static void RemoveRPCs (UnityEngine.NetworkPlayer playerID, int group);
Member Added: public static void RemoveRPCsInGroup (int group);
Member Added: public static void RemoveRPCs (UnityEngine.NetworkViewID viewID);
Member Added: public static void SetLevelPrefix (int prefix);
Member Added: public static int GetLastPing (UnityEngine.NetworkPlayer player);
Member Added: public static int GetAveragePing (UnityEngine.NetworkPlayer player);
Member Added: public static void SetReceivingEnabled (UnityEngine.NetworkPlayer player, int group, bool enabled);
Member Added: public static void SetSendingEnabled (int group, bool enabled);
Member Added: public static void SetSendingEnabled (UnityEngine.NetworkPlayer player, int group, bool enabled);
Member Added: public static UnityEngine.ConnectionTesterStatus TestConnection (bool forceTest);
Member Added: public static UnityEngine.ConnectionTesterStatus TestConnection ();
Member Added: public static UnityEngine.ConnectionTesterStatus TestConnectionNAT ();
Member Added: public static bool HavePublicAddress ();
Member Added: public static string incomingPassword { set; get; }
Member Added: public static UnityEngine.NetworkPlayer[] connections { get; }
Member Added: public static UnityEngine.NetworkPlayer player { get; }
Member Added: public static bool isClient { get; }
Member Added: public static bool isServer { get; }
Member Added: public static UnityEngine.NetworkPeerType peerType { get; }
Member Added: public static float sendRate { set; get; }
Member Added: public static bool isMessageQueueRunning { set; get; }
Member Added: public static double time { get; }
Member Added: public static int minimumAllocatableViewIDs { set; get; }
Member Added: public static bool useNat { set; get; }
Member Added: public static string natFacilitatorIP { set; get; }
Member Added: public static int natFacilitatorPort { set; get; }
Member Added: public static string connectionTesterIP { set; get; }
Member Added: public static int connectionTesterPort { set; get; }
Member Added: public static int maxConnections { set; get; }
Member Added: public static string proxyIP { set; get; }
Member Added: public static int proxyPort { set; get; }
Member Added: public static bool useProxy { set; get; }
Member Added: public static string proxyPassword { set; get; }
New Type: UnityEngine.BitStream
Member Added: public BitStream ();
Member Added: public void Serialize (ref bool value);
Member Added: public void Serialize (ref char value);
Member Added: public void Serialize (ref short value);
Member Added: public void Serialize (ref int value);
Member Added: public void Serialize (ref float value);
Member Added: public void Serialize (ref float value, float maxDelta);
Member Added: public void Serialize (ref UnityEngine.Quaternion value);
Member Added: public void Serialize (ref UnityEngine.Quaternion value, float maxDelta);
Member Added: public void Serialize (ref UnityEngine.Vector3 value);
Member Added: public void Serialize (ref UnityEngine.Vector3 value, float maxDelta);
Member Added: public void Serialize (ref UnityEngine.NetworkPlayer value);
Member Added: public void Serialize (ref UnityEngine.NetworkViewID viewID);
Member Added: public bool isReading { get; }
Member Added: public bool isWriting { get; }
New Type: UnityEngine.RPC
Member Added: public RPC ();
New Type: UnityEngine.HostData
Member Added: public HostData ();
Member Added: public bool useNat { set; get; }
Member Added: public string gameType { set; get; }
Member Added: public string gameName { set; get; }
Member Added: public int connectedPlayers { set; get; }
Member Added: public int playerLimit { set; get; }
Member Added: public string[] ip { set; get; }
Member Added: public int port { set; get; }
Member Added: public bool passwordProtected { set; get; }
Member Added: public string comment { set; get; }
New Type: UnityEngine.MasterServer
Member Added: public MasterServer ();
Member Added: public static void RequestHostList (string gameTypeName);
Member Added: public static UnityEngine.HostData[] PollHostList ();
Member Added: public static void RegisterHost (string gameTypeName, string gameName, string comment);
Member Added: public static void RegisterHost (string gameTypeName, string gameName);
Member Added: public static void UnregisterHost ();
Member Added: public static void ClearHostList ();
Member Added: public static string ipAddress { set; get; }
Member Added: public static int port { set; get; }
Member Added: public static int updateRate { set; get; }
Member Added: public static bool dedicatedServer { set; get; }
New Type: UnityEngine.NetworkMessageInfo
Member Added: public double timestamp { get; }
Member Added: public UnityEngine.NetworkPlayer sender { get; }
Member Added: public UnityEngine.NetworkView networkView { get; }
New Type: UnityEngine.ForceMode
Member Added: Force
Member Added: VelocityChange
Member Added: Acceleration
Member Added: Impulse
New Type: UnityEngine.Physics
Member Added: public Physics ();
Member Added: public const int kIgnoreRaycastLayer = 4;
Member Added: public const int kDefaultRaycastLayers = -5;
Member Added: public const int kAllLayers = -1;
Member Added: public static bool Raycast (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, float distance);
Member Added: public static bool Raycast (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction);
Member Added: public static bool Raycast (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, float distance, int layerMask);
Member Added: public static bool Raycast (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, float distance);
Member Added: public static bool Raycast (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo);
Member Added: public static bool Raycast (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, float distance, int layerMask);
Member Added: public static bool Raycast (UnityEngine.Ray ray, float distance);
Member Added: public static bool Raycast (UnityEngine.Ray ray);
Member Added: public static bool Raycast (UnityEngine.Ray ray, float distance, int layerMask);
Member Added: public static bool Raycast (UnityEngine.Ray ray, out UnityEngine.RaycastHit hitInfo, float distance);
Member Added: public static bool Raycast (UnityEngine.Ray ray, out UnityEngine.RaycastHit hitInfo);
Member Added: public static bool Raycast (UnityEngine.Ray ray, out UnityEngine.RaycastHit hitInfo, float distance, int layerMask);
Member Added: public static UnityEngine.RaycastHit[] RaycastAll (UnityEngine.Ray ray, float distance);
Member Added: public static UnityEngine.RaycastHit[] RaycastAll (UnityEngine.Ray ray);
Member Added: public static UnityEngine.RaycastHit[] RaycastAll (UnityEngine.Ray ray, float distance, int layerMask);
Member Added: public static UnityEngine.RaycastHit[] RaycastAll (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, float distance, int layermask);
Member Added: public static UnityEngine.RaycastHit[] RaycastAll (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, float distance);
Member Added: public static UnityEngine.RaycastHit[] RaycastAll (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction);
Member Added: public static bool Linecast (UnityEngine.Vector3 start, UnityEngine.Vector3 end);
Member Added: public static bool Linecast (UnityEngine.Vector3 start, UnityEngine.Vector3 end, int layerMask);
Member Added: public static bool Linecast (UnityEngine.Vector3 start, UnityEngine.Vector3 end, out UnityEngine.RaycastHit hitInfo);
Member Added: public static bool Linecast (UnityEngine.Vector3 start, UnityEngine.Vector3 end, out UnityEngine.RaycastHit hitInfo, int layerMask);
Member Added: public static UnityEngine.Collider[] OverlapSphere (UnityEngine.Vector3 position, float radius, int layerMask);
Member Added: public static UnityEngine.Collider[] OverlapSphere (UnityEngine.Vector3 position, float radius);
Member Added: public static bool CheckSphere (UnityEngine.Vector3 position, float radius, int layerMask);
Member Added: public static bool CheckSphere (UnityEngine.Vector3 position, float radius);
Member Added: public static bool CheckCapsule (UnityEngine.Vector3 start, UnityEngine.Vector3 end, float radius, int layermask);
Member Added: public static bool CheckCapsule (UnityEngine.Vector3 start, UnityEngine.Vector3 end, float radius);
Member Added: public static void IgnoreCollision (UnityEngine.Collider collider1, UnityEngine.Collider collider2, bool ignore);
Member Added: public static void IgnoreCollision (UnityEngine.Collider collider1, UnityEngine.Collider collider2);
Member Added: public static UnityEngine.Vector3 gravity { set; get; }
Member Added: public static float minPenetrationForPenalty { set; get; }
Member Added: public static float bounceThreshold { set; get; }
Member Added: public static float bounceTreshold { set; get; }
Member Added: public static float sleepVelocity { set; get; }
Member Added: public static float sleepAngularVelocity { set; get; }
Member Added: public static float maxAngularVelocity { set; get; }
Member Added: public static int solverIterationCount { set; get; }
Member Added: public static float penetrationPenaltyForce { set; get; }
New Type: UnityEngine.Dynamics
Member Added: public Dynamics ();
New Type: UnityEngine.Rigidbody
Member Added: public Rigidbody ();
Member Added: public void SetDensity (float density);
Member Added: public void AddForce (UnityEngine.Vector3 force, UnityEngine.ForceMode mode);
Member Added: public void AddForce (UnityEngine.Vector3 force);
Member Added: public void AddForce (float x, float y, float z);
Member Added: public void AddForce (float x, float y, float z, UnityEngine.ForceMode mode);
Member Added: public void AddRelativeForce (UnityEngine.Vector3 force, UnityEngine.ForceMode mode);
Member Added: public void AddRelativeForce (UnityEngine.Vector3 force);
Member Added: public void AddRelativeForce (float x, float y, float z);
Member Added: public void AddRelativeForce (float x, float y, float z, UnityEngine.ForceMode mode);
Member Added: public void AddTorque (UnityEngine.Vector3 torque, UnityEngine.ForceMode mode);
Member Added: public void AddTorque (UnityEngine.Vector3 torque);
Member Added: public void AddTorque (float x, float y, float z);
Member Added: public void AddTorque (float x, float y, float z, UnityEngine.ForceMode mode);
Member Added: public void AddRelativeTorque (UnityEngine.Vector3 torque, UnityEngine.ForceMode mode);
Member Added: public void AddRelativeTorque (UnityEngine.Vector3 torque);
Member Added: public void AddRelativeTorque (float x, float y, float z);
Member Added: public void AddRelativeTorque (float x, float y, float z, UnityEngine.ForceMode mode);
Member Added: public void AddForceAtPosition (UnityEngine.Vector3 force, UnityEngine.Vector3 position, UnityEngine.ForceMode mode);
Member Added: public void AddForceAtPosition (UnityEngine.Vector3 force, UnityEngine.Vector3 position);
Member Added: public void AddExplosionForce (float explosionForce, UnityEngine.Vector3 explosionPosition, float explosionRadius, float upwardsModifier, UnityEngine.ForceMode mode);
Member Added: public void AddExplosionForce (float explosionForce, UnityEngine.Vector3 explosionPosition, float explosionRadius, float upwardsModifier);
Member Added: public void AddExplosionForce (float explosionForce, UnityEngine.Vector3 explosionPosition, float explosionRadius);
Member Added: public UnityEngine.Vector3 ClosestPointOnBounds (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Vector3 GetRelativePointVelocity (UnityEngine.Vector3 relativePoint);
Member Added: public UnityEngine.Vector3 GetPointVelocity (UnityEngine.Vector3 worldPoint);
Member Added: public void MovePosition (UnityEngine.Vector3 position);
Member Added: public void MoveRotation (UnityEngine.Quaternion rot);
Member Added: public void Sleep ();
Member Added: public bool IsSleeping ();
Member Added: public void WakeUp ();
Member Added: public void SetMaxAngularVelocity (float a);
Member Added: public UnityEngine.Vector3 velocity { set; get; }
Member Added: public UnityEngine.Vector3 angularVelocity { set; get; }
Member Added: public float drag { set; get; }
Member Added: public float angularDrag { set; get; }
Member Added: public float mass { set; get; }
Member Added: public bool useGravity { set; get; }
Member Added: public bool isKinematic { set; get; }
Member Added: public bool freezeRotation { set; get; }
Member Added: public UnityEngine.Vector3 centerOfMass { set; get; }
Member Added: public UnityEngine.Vector3 worldCenterOfMass { get; }
Member Added: public UnityEngine.Quaternion inertiaTensorRotation { set; get; }
Member Added: public UnityEngine.Vector3 inertiaTensor { set; get; }
Member Added: public bool detectCollisions { set; get; }
Member Added: public bool useConeFriction { set; get; }
Member Added: public UnityEngine.Vector3 position { set; get; }
Member Added: public UnityEngine.Quaternion rotation { set; get; }
Member Added: public UnityEngine.RigidbodyInterpolation interpolation { set; get; }
Member Added: public int solverIterationCount { set; get; }
Member Added: public float sleepVelocity { set; get; }
Member Added: public float sleepAngularVelocity { set; get; }
Member Added: public float maxAngularVelocity { set; get; }
New Type: UnityEngine.RigidbodyInterpolation
Member Added: None
Member Added: Interpolate
Member Added: Extrapolate
New Type: UnityEngine.JointMotor
Member Added: public float targetVelocity { set; get; }
Member Added: public float force { set; get; }
Member Added: public bool freeSpin { set; get; }
New Type: UnityEngine.JointSpring
Member Added: public float spring;
Member Added: public float damper;
Member Added: public float targetPosition;
New Type: UnityEngine.JointLimits
Member Added: public float min { set; get; }
Member Added: public float minBounce { set; get; }
Member Added: public float max { set; get; }
Member Added: public float maxBounce { set; get; }
New Type: UnityEngine.Joint
Member Added: public Joint ();
Member Added: public UnityEngine.Rigidbody connectedBody { set; get; }
Member Added: public UnityEngine.Vector3 axis { set; get; }
Member Added: public UnityEngine.Vector3 anchor { set; get; }
Member Added: public float breakForce { set; get; }
Member Added: public float breakTorque { set; get; }
New Type: UnityEngine.HingeJoint
Member Added: public HingeJoint ();
Member Added: public UnityEngine.JointMotor motor { set; get; }
Member Added: public UnityEngine.JointLimits limits { set; get; }
Member Added: public UnityEngine.JointSpring spring { set; get; }
Member Added: public bool useMotor { set; get; }
Member Added: public bool useLimits { set; get; }
Member Added: public bool useSpring { set; get; }
Member Added: public float velocity { get; }
Member Added: public float angle { get; }
New Type: UnityEngine.SpringJoint
Member Added: public SpringJoint ();
Member Added: public float spring { set; get; }
Member Added: public float damper { set; get; }
Member Added: public float minDistance { set; get; }
Member Added: public float maxDistance { set; get; }
New Type: UnityEngine.FixedJoint
Member Added: public FixedJoint ();
New Type: UnityEngine.SoftJointLimit
Member Added: public float limit { set; get; }
Member Added: public float spring { set; get; }
Member Added: public float damper { set; get; }
Member Added: public float bouncyness { set; get; }
New Type: UnityEngine.JointDriveMode
Member Added: None
Member Added: Position
Member Added: Velocity
Member Added: PositionAndVelocity
New Type: UnityEngine.JointProjectionMode
Member Added: None
Member Added: PositionAndRotation
Member Added: PositionOnly
New Type: UnityEngine.JointDrive
Member Added: public UnityEngine.JointDriveMode mode { set; get; }
Member Added: public float positionSpring { set; get; }
Member Added: public float positionDamper { set; get; }
Member Added: public float maximumForce { set; get; }
New Type: UnityEngine.CharacterJoint
Member Added: public CharacterJoint ();
Member Added: public UnityEngine.Vector3 swingAxis { set; get; }
Member Added: public UnityEngine.SoftJointLimit lowTwistLimit { set; get; }
Member Added: public UnityEngine.SoftJointLimit highTwistLimit { set; get; }
Member Added: public UnityEngine.SoftJointLimit swing1Limit { set; get; }
Member Added: public UnityEngine.SoftJointLimit swing2Limit { set; get; }
Member Added: public UnityEngine.Quaternion targetRotation { set; get; }
Member Added: public UnityEngine.Vector3 targetAngularVelocity { set; get; }
Member Added: public UnityEngine.JointDrive rotationDrive { set; get; }
New Type: UnityEngine.ConfigurableJointMotion
Member Added: Locked
Member Added: Limited
Member Added: Free
New Type: UnityEngine.RotationDriveMode
Member Added: XYAndZ
Member Added: Slerp
New Type: UnityEngine.ConfigurableJoint
Member Added: public ConfigurableJoint ();
Member Added: public UnityEngine.ConfigurableJointMotion xMotion { set; get; }
Member Added: public UnityEngine.ConfigurableJointMotion yMotion { set; get; }
Member Added: public UnityEngine.ConfigurableJointMotion zMotion { set; get; }
Member Added: public UnityEngine.ConfigurableJointMotion angularXMotion { set; get; }
Member Added: public UnityEngine.ConfigurableJointMotion angularYMotion { set; get; }
Member Added: public UnityEngine.ConfigurableJointMotion angularZMotion { set; get; }
Member Added: public UnityEngine.SoftJointLimit linearLimit { set; get; }
Member Added: public UnityEngine.SoftJointLimit lowAngularXLimit { set; get; }
Member Added: public UnityEngine.SoftJointLimit highAngularXLimit { set; get; }
Member Added: public UnityEngine.SoftJointLimit angularYLimit { set; get; }
Member Added: public UnityEngine.SoftJointLimit angularZLimit { set; get; }
Member Added: public UnityEngine.Vector3 targetPosition { set; get; }
Member Added: public UnityEngine.Vector3 targetVelocity { set; get; }
Member Added: public UnityEngine.JointDrive xDrive { set; get; }
Member Added: public UnityEngine.JointDrive yDrive { set; get; }
Member Added: public UnityEngine.JointDrive zDrive { set; get; }
Member Added: public UnityEngine.Quaternion targetRotation { set; get; }
Member Added: public UnityEngine.Vector3 targetAngularVelocity { set; get; }
Member Added: public UnityEngine.RotationDriveMode rotationDriveMode { set; get; }
Member Added: public UnityEngine.JointDrive angularXDrive { set; get; }
Member Added: public UnityEngine.JointDrive angularYZDrive { set; get; }
Member Added: public UnityEngine.JointDrive slerpDrive { set; get; }
Member Added: public UnityEngine.JointProjectionMode projectionMode { set; get; }
Member Added: public float projectionDistance { set; get; }
Member Added: public float projectionAngle { set; get; }
Member Added: public bool configuredInWorldSpace { set; get; }
New Type: UnityEngine.ConstantForce
Member Added: public ConstantForce ();
Member Added: public UnityEngine.Vector3 force { set; get; }
Member Added: public UnityEngine.Vector3 relativeForce { set; get; }
Member Added: public UnityEngine.Vector3 torque { set; get; }
Member Added: public UnityEngine.Vector3 relativeTorque { set; get; }
New Type: UnityEngine.Collider
Member Added: public Collider ();
Member Added: public UnityEngine.Vector3 ClosestPointOnBounds (UnityEngine.Vector3 position);
Member Added: public bool Raycast (UnityEngine.Ray ray, out UnityEngine.RaycastHit hitInfo, float distance);
Member Added: public UnityEngine.Rigidbody attachedRigidbody { get; }
Member Added: public bool isTrigger { set; get; }
Member Added: public UnityEngine.PhysicMaterial material { set; get; }
Member Added: public UnityEngine.PhysicMaterial sharedMaterial { set; get; }
Member Added: public UnityEngine.Bounds bounds { get; }
New Type: UnityEngine.BoxCollider
Member Added: public BoxCollider ();
Member Added: public UnityEngine.Vector3 center { set; get; }
Member Added: public UnityEngine.Vector3 size { set; get; }
Member Added: public UnityEngine.Vector3 extents { set; get; }
New Type: UnityEngine.SphereCollider
Member Added: public SphereCollider ();
Member Added: public UnityEngine.Vector3 center { set; get; }
Member Added: public float radius { set; get; }
New Type: UnityEngine.MeshCollider
Member Added: public MeshCollider ();
Member Added: public UnityEngine.Mesh mesh { set; get; }
Member Added: public UnityEngine.Mesh sharedMesh { set; get; }
Member Added: public bool convex { set; get; }
Member Added: public bool smoothSphereCollisions { set; get; }
New Type: UnityEngine.CapsuleCollider
Member Added: public CapsuleCollider ();
Member Added: public UnityEngine.Vector3 center { set; get; }
Member Added: public float radius { set; get; }
Member Added: public float height { set; get; }
Member Added: public int direction { set; get; }
New Type: UnityEngine.RaycastCollider
Member Added: public RaycastCollider ();
Member Added: public UnityEngine.Vector3 center { set; get; }
Member Added: public float length { set; get; }
New Type: UnityEngine.WheelFrictionCurve
Member Added: public float extremumSlip { set; get; }
Member Added: public float extremumValue { set; get; }
Member Added: public float asymptoteSlip { set; get; }
Member Added: public float asymptoteValue { set; get; }
Member Added: public float stiffness { set; get; }
New Type: UnityEngine.WheelHit
Member Added: public UnityEngine.Collider collider { set; get; }
Member Added: public UnityEngine.Vector3 point { set; get; }
Member Added: public UnityEngine.Vector3 normal { set; get; }
Member Added: public UnityEngine.Vector3 forwardDir { set; get; }
Member Added: public UnityEngine.Vector3 sidewaysDir { set; get; }
Member Added: public float force { set; get; }
Member Added: public float forwardSlip { set; get; }
Member Added: public float sidewaysSlip { set; get; }
New Type: UnityEngine.WheelCollider
Member Added: public WheelCollider ();
Member Added: public bool GetGroundHit (out UnityEngine.WheelHit hit);
Member Added: public UnityEngine.Vector3 center { set; get; }
Member Added: public float radius { set; get; }
Member Added: public float suspensionDistance { set; get; }
Member Added: public UnityEngine.JointSpring suspensionSpring { set; get; }
Member Added: public float mass { set; get; }
Member Added: public UnityEngine.WheelFrictionCurve forwardFriction { set; get; }
Member Added: public UnityEngine.WheelFrictionCurve sidewaysFriction { set; get; }
Member Added: public float motorTorque { set; get; }
Member Added: public float brakeTorque { set; get; }
Member Added: public float steerAngle { set; get; }
Member Added: public bool isGrounded { get; }
Member Added: public float rpm { get; }
New Type: UnityEngine.RaycastHit
Member Added: public UnityEngine.Vector3 point { set; get; }
Member Added: public UnityEngine.Vector3 normal { set; get; }
Member Added: public UnityEngine.Vector3 barycentricCoordinate { set; get; }
Member Added: public float distance { set; get; }
Member Added: public int triangleIndex { get; }
Member Added: public UnityEngine.Vector2 textureCoord { get; }
Member Added: public UnityEngine.Vector2 textureCoord2 { get; }
Member Added: public UnityEngine.Vector2 textureCoord1 { get; }
Member Added: public UnityEngine.Collider collider { get; }
Member Added: public UnityEngine.Rigidbody rigidbody { get; }
Member Added: public UnityEngine.Transform transform { get; }
New Type: UnityEngine.PhysicMaterialCombine
Member Added: Average
Member Added: Multiply
Member Added: Minimum
Member Added: Maximum
New Type: UnityEngine.PhysicMaterial
Member Added: public PhysicMaterial ();
Member Added: public PhysicMaterial (string name);
Member Added: public float dynamicFriction { set; get; }
Member Added: public float staticFriction { set; get; }
Member Added: public float bouncyness { set; get; }
Member Added: public UnityEngine.Vector3 frictionDirection2 { set; get; }
Member Added: public float dynamicFriction2 { set; get; }
Member Added: public float staticFriction2 { set; get; }
Member Added: public UnityEngine.PhysicMaterialCombine frictionCombine { set; get; }
Member Added: public UnityEngine.PhysicMaterialCombine bounceCombine { set; get; }
Member Added: public UnityEngine.Vector3 frictionDirection { set; get; }
New Type: UnityEngine.ContactPoint
Member Added: public UnityEngine.Vector3 point { get; }
Member Added: public UnityEngine.Vector3 normal { get; }
Member Added: public UnityEngine.Collider thisCollider { get; }
Member Added: public UnityEngine.Collider otherCollider { get; }
New Type: UnityEngine.Collision
Member Added: public Collision ();
Member Added: public virtual System.Collections.IEnumerator GetEnumerator ();
Member Added: public UnityEngine.Vector3 relativeVelocity { get; }
Member Added: public UnityEngine.Rigidbody rigidbody { get; }
Member Added: public UnityEngine.Collider collider { get; }
Member Added: public UnityEngine.Transform transform { get; }
Member Added: public UnityEngine.GameObject gameObject { get; }
Member Added: public UnityEngine.ContactPoint[] contacts { get; }
Member Added: public UnityEngine.Vector3 impactForceSum { get; }
Member Added: public UnityEngine.Vector3 frictionForceSum { get; }
Member Added: public UnityEngine.Component other { get; }
New Type: UnityEngine.CollisionFlags
Member Added: None
Member Added: Sides
Member Added: Above
Member Added: Below
Member Added: CollidedSides
Member Added: CollidedAbove
Member Added: CollidedBelow
New Type: UnityEngine.ControllerColliderHit
Member Added: public ControllerColliderHit ();
Member Added: public UnityEngine.CharacterController controller { get; }
Member Added: public UnityEngine.Collider collider { get; }
Member Added: public UnityEngine.Rigidbody rigidbody { get; }
Member Added: public UnityEngine.GameObject gameObject { get; }
Member Added: public UnityEngine.Transform transform { get; }
Member Added: public UnityEngine.Vector3 point { get; }
Member Added: public UnityEngine.Vector3 normal { get; }
Member Added: public UnityEngine.Vector3 moveDirection { get; }
Member Added: public float moveLength { get; }
New Type: UnityEngine.ControllerControllerHit
Member Added: public ControllerControllerHit ();
Member Added: public UnityEngine.CharacterController controller { get; }
Member Added: public UnityEngine.CharacterController other { get; }
New Type: UnityEngine.CharacterController
Member Added: public CharacterController ();
Member Added: public bool SimpleMove (UnityEngine.Vector3 speed);
Member Added: public UnityEngine.CollisionFlags Move (UnityEngine.Vector3 motion);
Member Added: public bool isGrounded { get; }
Member Added: public UnityEngine.Vector3 velocity { get; }
Member Added: public UnityEngine.CollisionFlags collisionFlags { get; }
Member Added: public float radius { set; get; }
Member Added: public float height { set; get; }
Member Added: public UnityEngine.Vector3 center { set; get; }
Member Added: public float slopeLimit { set; get; }
Member Added: public float stepOffset { set; get; }
Member Added: public bool detectCollisions { set; get; }
New Type: UnityEngine.TextAsset
Member Added: public TextAsset ();
Member Added: public override string ToString ();
Member Added: public string text { get; }
Member Added: public byte[] bytes { get; }
New Type: UnityEngine.TerrainCollider
Member Added: public TerrainCollider ();
Member Added: public UnityEngine.TerrainData terrainData { set; get; }
New Type: UnityEngine.TreePrototype
Member Added: public TreePrototype ();
Member Added: public UnityEngine.GameObject prefab { set; get; }
Member Added: public float bendFactor { set; get; }
New Type: UnityEngine.DetailRenderMode
Member Added: GrassBillboard
Member Added: VertexLit
Member Added: Grass
New Type: UnityEngine.DetailPrototype
Member Added: public DetailPrototype ();
Member Added: public UnityEngine.GameObject prototype { set; get; }
Member Added: public UnityEngine.Texture2D prototypeTexture { set; get; }
Member Added: public float minWidth { set; get; }
Member Added: public float maxWidth { set; get; }
Member Added: public float minHeight { set; get; }
Member Added: public float maxHeight { set; get; }
Member Added: public float noiseSpread { set; get; }
Member Added: public float bendFactor { set; get; }
Member Added: public UnityEngine.Color healthyColor { set; get; }
Member Added: public UnityEngine.Color dryColor { set; get; }
Member Added: public float lightmapFactor { set; get; }
Member Added: public bool grayscaleLighting { set; get; }
Member Added: public UnityEngine.DetailRenderMode renderMode { set; get; }
Member Added: public bool usePrototypeMesh { set; get; }
New Type: UnityEngine.SplatPrototype
Member Added: public SplatPrototype ();
Member Added: public UnityEngine.Texture2D texture { set; get; }
Member Added: public UnityEngine.Vector2 tileSize { set; get; }
New Type: UnityEngine.TerrainChangedFlags
Member Added: Heightmap
Member Added: DetailPrototypes
Member Added: DetailData
Member Added: SplatPrototypes
Member Added: SplatData
Member Added: HeightmapDelayedUpdate
Member Added: FlushImmediately
New Type: UnityEngine.TerrainLighting
Member Added: Vertex
Member Added: Lightmap
Member Added: Pixel
Member Added: RenderModeCount
New Type: UnityEngine.TerrainData
Member Added: public TerrainData ();
Member Added: public void Init (int splatRes, int detailRes, int basemapRes);
Member Added: public float GetHeight (int x, int y);
Member Added: public float GetInterpolatedHeight (float x, float y);
Member Added: public float[,] GetHeights (int xBase, int yBase, int width, int height);
Member Added: public void SetHeights (int xBase, int yBase, float[,] heights);
Member Added: public int GetAdjustedSize (int size);
Member Added: public float GetSteepness (float x, float y);
Member Added: public UnityEngine.Vector3 GetInterpolatedNormal (float x, float y);
Member Added: public void SetHeightsDelayLOD (int xBase, int yBase, float[,] heights);
Member Added: public void ResetDirtyDetails ();
Member Added: public void RefreshPrototypes ();
Member Added: public int[] GetSupportedLayers (int xBase, int yBase, int totalWidth, int totalHeight);
Member Added: public int[,] GetDetailLayer (int xBase, int yBase, int width, int height, int layer);
Member Added: public void SetDetailLayer (int xBase, int yBase, int layer, int[,] details);
Member Added: public void RecalculateTreePositions ();
Member Added: public void RemoveTreePrototype (int index);
Member Added: public void RemoveDetailPrototype (int index);
Member Added: public float[,,] GetAlphamaps (int x, int y, int width, int height);
Member Added: public void SetAlphamaps (int x, int y, float[,,] map);
Member Added: public UnityEngine.Texture2D GetBaseMap ();
Member Added: public void SetBaseMapDirty ();
Member Added: public UnityEngine.Texture2D lightmap { set; get; }
Member Added: public int heightmapWidth { get; }
Member Added: public int heightmapHeight { get; }
Member Added: public int heightmapResolution { set; get; }
Member Added: public UnityEngine.Vector3 heightmapScale { get; }
Member Added: public UnityEngine.Vector3 size { set; get; }
Member Added: public int mipLevels { get; }
Member Added: public UnityEngine.Texture2D plantAtlasTexture { get; }
Member Added: public float wavingGrassStrength { set; get; }
Member Added: public float wavingGrassAmount { set; get; }
Member Added: public float wavingGrassSpeed { set; get; }
Member Added: public UnityEngine.Color wavingGrassTint { set; get; }
Member Added: public int detailWidth { get; }
Member Added: public int detailHeight { get; }
Member Added: public int detailResolution { set; get; }
Member Added: public int patchCount { get; }
Member Added: public UnityEngine.DetailPrototype[] detailPrototypes { set; get; }
Member Added: public UnityEngine.TreeInstance[] treeInstances { set; get; }
Member Added: public UnityEngine.TreePrototype[] treePrototypes { set; get; }
Member Added: public int alphamapLayers { get; }
Member Added: public int alphamapResolution { set; get; }
Member Added: public int alphamapWidth { get; }
Member Added: public int alphamapHeight { get; }
Member Added: public int baseMapResolution { set; get; }
Member Added: public int alphamapTextureCount { get; }
Member Added: public UnityEngine.Texture2D[] alphamapTextures { get; }
Member Added: public UnityEngine.SplatPrototype[] splatPrototypes { set; get; }
New Type: UnityEngine.TreeInstance
Member Added: public UnityEngine.Vector3 position { set; get; }
Member Added: public float widthScale { set; get; }
Member Added: public float heightScale { set; get; }
Member Added: public UnityEngine.Color color { set; get; }
Member Added: public UnityEngine.Color lightmapColor { set; get; }
Member Added: public int prototypeIndex { set; get; }
Member Added: public float temporaryDistance { set; get; }
New Type: UnityEngine.Terrain
Member Added: public Terrain ();
Member Added: public bool m_DrawTreesAndFoliage;
Member Added: public UnityEngine.Terrain.TerrainRenderFlags m_EditorRenderFlags;
Member Added: public float SampleHeight (UnityEngine.Vector3 worldPosition);
Member Added: public static UnityEngine.GameObject CreateTerrainGameObject (UnityEngine.TerrainData assignTerrain);
Member Added: public void Flush ();
Member Added: public void AddTreeInstance (UnityEngine.TreeInstance instance);
Member Added: public void RemoveTrees (UnityEngine.Vector2 position, float radius, int prototypeIndex);
Member Added: public void SetNeighbors (UnityEngine.Terrain left, UnityEngine.Terrain top, UnityEngine.Terrain right, UnityEngine.Terrain bottom);
Member Added: public static UnityEngine.Terrain activeTerrain { get; }
Member Added: public UnityEngine.TerrainData terrainData { set; get; }
Member Added: public float treeDistance { set; get; }
Member Added: public float treeBillboardDistance { set; get; }
Member Added: public float treeCrossFadeLength { set; get; }
Member Added: public int treeMaximumFullLODCount { set; get; }
Member Added: public float detailObjectDistance { set; get; }
Member Added: public float heightmapPixelError { set; get; }
Member Added: public int heightmapMaximumLOD { set; get; }
Member Added: public float basemapDistance { set; get; }
Member Added: public float splatmapDistance { set; get; }
Member Added: public UnityEngine.TerrainLighting lighting { set; get; }
Member Added: public bool useLightmap { set; get; }
Member Added: public bool castShadows { set; get; }
New Type: UnityEngine.Terrain/TerrainRenderFlags
Member Added: heightmap
Member Added: trees
Member Added: details
Member Added: all
Updating: UnityEngine.Terrain/TerrainRenderFlags
New Type: UnityEngine.WWW
Member Added: public WWW (string url);
Member Added: public WWW (string url, UnityEngine.WWWForm form);
Member Added: public WWW (string url, byte[] postData);
Member Added: public WWW (string url, byte[] postData, System.Collections.Hashtable headers);
Member Added: public virtual void Dispose ();
Member Added: ~WWW ();
Member Added: public void InitWWW (string url, byte[] postData, string[] iHeaders);
Member Added: public static string EscapeURL (string s);
Member Added: public static string EscapeURL (string s, System.Text.Encoding e);
Member Added: public static string UnEscapeURL (string s);
Member Added: public static string UnEscapeURL (string s, System.Text.Encoding e);
Member Added: public void LoadImageIntoTexture (UnityEngine.Texture2D tex);
Member Added: public static string GetURL (string url);
Member Added: public static UnityEngine.Texture2D GetTextureFromURL (string url);
Member Added: public void LoadUnityWeb ();
Member Added: public static UnityEngine.WWW LoadFromCacheOrDownload (string url, int version);
Member Added: public string data { get; }
Member Added: public byte[] bytes { get; }
Member Added: public int size { get; }
Member Added: public string error { get; }
Member Added: public UnityEngine.Texture2D texture { get; }
Member Added: public UnityEngine.AudioClip audioClip { get; }
Member Added: public UnityEngine.MovieTexture movie { get; }
Member Added: public bool isDone { get; }
Member Added: public float progress { get; }
Member Added: public float uploadProgress { get; }
Member Added: public UnityEngine.AudioClip oggVorbis { get; }
Member Added: public string url { get; }
Member Added: public UnityEngine.AssetBundle assetBundle { get; }
Member Added: public UnityEngine.ThreadPriority threadPriority { set; get; }
New Type: UnityEngine.WWWForm
Member Added: public WWWForm ();
Member Added: public void AddField (string fieldName, string value);
Member Added: public void AddField (string fieldName, string value, System.Text.Encoding e);
Member Added: public void AddField (string fieldName, int i);
Member Added: public void AddBinaryData (string fieldName, byte[] contents, string fileName);
Member Added: public void AddBinaryData (string fieldName, byte[] contents);
Member Added: public void AddBinaryData (string fieldName, byte[] contents, string fileName, string mimeType);
Member Added: public System.Collections.Hashtable headers { get; }
Member Added: public byte[] data { get; }
New Type: UnityEngine.WWWTranscoder
Member Added: public WWWTranscoder ();
Member Added: public static string URLEncode (string toEncode);
Member Added: public static string URLEncode (string toEncode, System.Text.Encoding e);
Member Added: public static byte[] URLEncode (byte[] toEncode);
Member Added: public static string QPEncode (string toEncode);
Member Added: public static string QPEncode (string toEncode, System.Text.Encoding e);
Member Added: public static byte[] QPEncode (byte[] toEncode);
Member Added: public static byte[] Encode (byte[] input, byte escapeChar, byte space, byte[] forbidden, bool uppercase);
Member Added: public static string URLDecode (string toEncode);
Member Added: public static string URLDecode (string toEncode, System.Text.Encoding e);
Member Added: public static byte[] URLDecode (byte[] toEncode);
Member Added: public static string QPDecode (string toEncode);
Member Added: public static string QPDecode (string toEncode, System.Text.Encoding e);
Member Added: public static byte[] QPDecode (byte[] toEncode);
Member Added: public static byte[] Decode (byte[] input, byte escapeChar, byte space);
Member Added: public static bool SevenBitClean (string s);
Member Added: public static bool SevenBitClean (string s, System.Text.Encoding e);
Member Added: public static bool SevenBitClean (byte[] input);
New Type: UnityEngine.CacheIndex
Member Added: public string name;
Member Added: public int bytesUsed;
Member Added: public int expires;
New Type: UnityEngine.Caching
Member Added: public Caching ();
Member Added: public static bool Authorize (string name, string domain, int size, string signature);
Member Added: public static void CleanCache ();
Member Added: public static void CleanNamedCache (string name);
Member Added: public static bool DeleteFromCache (string url);
Member Added: public static UnityEngine.CacheIndex[] index { get; }
Member Added: public static int spaceAvailable { get; }
Member Added: public static int spaceUsed { get; }
Member Added: public static int expirationDelay { set; get; }
Member Added: public static bool enabled { set; get; }
Updating: UnityEngine.Application/LogCallback
Updating: UnityEngine.GUI/WindowFunction
Updating: UnityEngine.AssemblyHelper
Updating: UnityEngine.SetupCoroutine
Updating: UnityEngine.SendMouseEvents
Updating: UnityEngine.StackTraceUtility
Updating: UnityEngine.UnityException
Updating: UnityEngine.MissingComponentException
Updating: UnityEngine.UnassignedReferenceException
Updating: UnityEngine.MissingReferenceException
Updating: UnityEngine.TextEditor
Updating: UnityEngine.TextEditor/DblClickSnapping
Updating: UnityEngine.TextEditor/DblClickSnapping
Updating: UnityEngine.WrapMode
Updating: UnityEngine.AnimationEvent
Updating: UnityEngine.AnimationClip
Updating: UnityEngine.Keyframe
Updating: UnityEngine.AnimationCurve
Updating: UnityEngine.PlayMode
Updating: UnityEngine.QueueMode
Updating: UnityEngine.AnimationBlendMode
Updating: UnityEngine.AnimationPlayMode
Updating: UnityEngine.Animation
Updating: UnityEngine.AnimationState
Updating: UnityEngine.ReferenceData
Updating: UnityEngine.HideFlags
Updating: UnityEngine.Object
Updating: UnityEngine.SendMessageOptions
Updating: UnityEngine.PrimitiveType
Updating: UnityEngine.GameObject
Updating: UnityEngine.Component
Updating: UnityEngine.Behaviour
Updating: UnityEngine.Space
Updating: UnityEngine.Transform
Updating: UnityEngine.MonoBehaviour
Updating: UnityEngine.Input
Updating: UnityEngine.Time
Updating: UnityEngine.LayerMask
Updating: UnityEngine.RuntimePlatform
Updating: UnityEngine.SystemLanguage
Updating: UnityEngine.LogType
Updating: UnityEngine.Application
Updating: UnityEngine.Application/LogCallback
Updating: UnityEngine.AudioClip
Updating: UnityEngine.AudioVelocityUpdateMode
Updating: UnityEngine.AudioListener
Updating: UnityEngine.AudioSource
Updating: UnityEngine.Debug
Updating: UnityEngine.Random
Updating: UnityEngine.PlayerPrefs
Updating: UnityEngine.PlayerPrefsException
Updating: UnityEngine.SystemInfo
Updating: UnityEngine.YieldInstruction
Updating: UnityEngine.WaitForSeconds
Updating: UnityEngine.WaitForFixedUpdate
Updating: UnityEngine.WaitForEndOfFrame
Updating: UnityEngine.Coroutine
Updating: UnityEngine.RequireComponent
Updating: UnityEngine.AddComponentMenu
Updating: UnityEngine.ContextMenu
Updating: UnityEngine.ExecuteInEditMode
Updating: UnityEngine.HideInInspector
Updating: UnityEngine.ScriptableObject
Updating: UnityEngine.AssetUtility
Updating: UnityEngine.RefCounted
Updating: UnityEngine.TrackedReference
Updating: UnityEngine.Resources
Updating: UnityEngine.AsyncOperation
Updating: UnityEngine.AssetBundleRequest
Updating: UnityEngine.AssetBundle
Updating: UnityEngine.SerializePrivateVariables
Updating: UnityEngine.ThreadPriority
Updating: UnityEngine.SerializeField
Updating: UnityEngine.Profiler
Updating: UnityEngine.LightType
Updating: UnityEngine.LightRenderMode
Updating: UnityEngine.LightShadows
Updating: UnityEngine.Light
Updating: UnityEngine.RenderSettings
Updating: UnityEngine.QualityLevel
Updating: UnityEngine.QualitySettings
Updating: UnityEngine.CameraClearFlags
Updating: UnityEngine.DepthTextureMode
Updating: UnityEngine.Camera
Updating: UnityEngine.TexGenMode
Updating: UnityEngine.Shader
Updating: UnityEngine.AnisotropicFiltering
Updating: UnityEngine.FilterMode
Updating: UnityEngine.TextureWrapMode
Updating: UnityEngine.Texture
Updating: UnityEngine.TextureFormat
Updating: UnityEngine.Texture2D
Updating: UnityEngine.CubemapFace
Updating: UnityEngine.Cubemap
Updating: UnityEngine.MeshFilter
Updating: UnityEngine.CombineInstance
Updating: UnityEngine.Mesh
Updating: UnityEngine.BoneWeight
Updating: UnityEngine.SkinQuality
Updating: UnityEngine.SkinnedMeshRenderer
Updating: UnityEngine.Material
Updating: UnityEngine.Flare
Updating: UnityEngine.LensFlare
Updating: UnityEngine.Renderer
Updating: UnityEngine.Projector
Updating: UnityEngine.Skybox
Updating: UnityEngine.TextMesh
Updating: UnityEngine.Particle
Updating: UnityEngine.ParticleEmitter
Updating: UnityEngine.ParticleAnimator
Updating: UnityEngine.TrailRenderer
Updating: UnityEngine.ParticleRenderMode
Updating: UnityEngine.ParticleRenderer
Updating: UnityEngine.LineRenderer
Updating: UnityEngine.MaterialPropertyBlock
Updating: UnityEngine.Graphics
Updating: UnityEngine.Resolution
Updating: UnityEngine.LightmapData
Updating: UnityEngine.LightmapSettings
Updating: UnityEngine.GeometryUtility
Updating: UnityEngine.Screen
Updating: UnityEngine.RenderTextureFormat
Updating: UnityEngine.RenderTexture
Updating: UnityEngine.MovieTexture
Updating: UnityEngine.GL
Updating: UnityEngine.GUIElement
Updating: UnityEngine.GUITexture
Updating: UnityEngine.TextAlignment
Updating: UnityEngine.TextAnchor
Updating: UnityEngine.GUIText
Updating: UnityEngine.Font
Updating: UnityEngine.GUILayer
Updating: UnityEngine.MeshRenderer
Updating: UnityEngine.ScriptableShaderPass
Updating: UnityEngine.RenderBeforeQueues
Updating: UnityEngine.ScaleMode
Updating: UnityEngine.GUI
Updating: UnityEngine.GUI/WindowFunction
Updating: UnityEngine.GUILayout
Updating: UnityEngine.GUILayoutUtility
Updating: UnityEngine.GUILayoutEntry
Updating: UnityEngine.GUILayoutGroup
Updating: UnityEngine.GUIScrollGroup
Updating: UnityEngine.GUILayoutOption
Updating: UnityEngine.GUILayoutOption/Type
Updating: UnityEngine.GUILayoutOption/Type
Updating: UnityEngine.ExitGUIException
Updating: UnityEngine.FocusType
Updating: UnityEngine.IDList
Updating: UnityEngine.GUIUtility
Updating: UnityEngine.ImagePosition
Updating: UnityEngine.GUIContent
Updating: UnityEngine.GUIStyleState
Updating: UnityEngine.RectOffset
Updating: UnityEngine.GUIStyle
Updating: UnityEngine.PlatformSelection
Updating: UnityEngine.GUISettings
Updating: UnityEngine.GUISkin
Updating: UnityEngine.GUIClip
Updating: UnityEngine.Gizmos
Updating: UnityEngine.EventType
Updating: UnityEngine.Event
Updating: UnityEngine.TextClipping
Updating: UnityEngine.KeyCode
Updating: UnityEngine.Vector2
Updating: UnityEngine.Vector3
Updating: UnityEngine.Color
Updating: UnityEngine.Color32
Updating: UnityEngine.Quaternion
Updating: UnityEngine.Rect
Updating: UnityEngine.Matrix4x4
Updating: UnityEngine.Bounds
Updating: UnityEngine.Vector4
Updating: UnityEngine.Ray
Updating: UnityEngine.Plane
Updating: UnityEngine.Mathf
Updating: UnityEngine.RPCMode
Updating: UnityEngine.ConnectionTesterStatus
Updating: UnityEngine.NetworkConnectionError
Updating: UnityEngine.NetworkDisconnection
Updating: UnityEngine.MasterServerEvent
Updating: UnityEngine.NetworkStateSynchronization
Updating: UnityEngine.NetworkPeerType
Updating: UnityEngine.NetworkPlayer
Updating: UnityEngine.NetworkViewID
Updating: UnityEngine.Ping
Updating: UnityEngine.NetworkView
Updating: UnityEngine.Network
Updating: UnityEngine.BitStream
Updating: UnityEngine.RPC
Updating: UnityEngine.HostData
Updating: UnityEngine.MasterServer
Updating: UnityEngine.NetworkMessageInfo
Updating: UnityEngine.ForceMode
Updating: UnityEngine.Physics
Updating: UnityEngine.Dynamics
Updating: UnityEngine.Rigidbody
Updating: UnityEngine.RigidbodyInterpolation
Updating: UnityEngine.JointMotor
Updating: UnityEngine.JointSpring
Updating: UnityEngine.JointLimits
Updating: UnityEngine.Joint
Updating: UnityEngine.HingeJoint
Updating: UnityEngine.SpringJoint
Updating: UnityEngine.FixedJoint
Updating: UnityEngine.SoftJointLimit
Updating: UnityEngine.JointDriveMode
Updating: UnityEngine.JointProjectionMode
Updating: UnityEngine.JointDrive
Updating: UnityEngine.CharacterJoint
Updating: UnityEngine.ConfigurableJointMotion
Updating: UnityEngine.RotationDriveMode
Updating: UnityEngine.ConfigurableJoint
Updating: UnityEngine.ConstantForce
Updating: UnityEngine.Collider
Updating: UnityEngine.BoxCollider
Updating: UnityEngine.SphereCollider
Updating: UnityEngine.MeshCollider
Updating: UnityEngine.CapsuleCollider
Updating: UnityEngine.RaycastCollider
Updating: UnityEngine.WheelFrictionCurve
Updating: UnityEngine.WheelHit
Updating: UnityEngine.WheelCollider
Updating: UnityEngine.RaycastHit
Updating: UnityEngine.PhysicMaterialCombine
Updating: UnityEngine.PhysicMaterial
Updating: UnityEngine.ContactPoint
Updating: UnityEngine.Collision
Updating: UnityEngine.CollisionFlags
Updating: UnityEngine.ControllerColliderHit
Updating: UnityEngine.ControllerControllerHit
Updating: UnityEngine.CharacterController
Updating: UnityEngine.TextAsset
Updating: UnityEngine.TerrainCollider
Updating: UnityEngine.TreePrototype
Updating: UnityEngine.DetailRenderMode
Updating: UnityEngine.DetailPrototype
Updating: UnityEngine.SplatPrototype
Updating: UnityEngine.TerrainChangedFlags
Updating: UnityEngine.TerrainLighting
Updating: UnityEngine.TerrainData
Updating: UnityEngine.TreeInstance
Updating: UnityEngine.Terrain
Updating: UnityEngine.Terrain/TerrainRenderFlags
Updating: UnityEngine.Terrain/TerrainRenderFlags
Updating: UnityEngine.WWW
Updating: UnityEngine.WWWForm
Updating: UnityEngine.WWWTranscoder
Updating: UnityEngine.CacheIndex
Updating: UnityEngine.Caching
Updating: UnityEngine.Application/LogCallback
Updating: UnityEngine.GUI/WindowFunction
Updating: UnityEngine.AssemblyHelper
Updating: UnityEngine.SetupCoroutine
Updating: UnityEngine.SendMouseEvents
Updating: UnityEngine.StackTraceUtility
Updating: UnityEngine.UnityException
Updating: UnityEngine.MissingComponentException
Updating: UnityEngine.UnassignedReferenceException
Updating: UnityEngine.MissingReferenceException
Updating: UnityEngine.TextEditor
Updating: UnityEngine.TextEditor/DblClickSnapping
Updating: UnityEngine.TextEditor/DblClickSnapping
Updating: UnityEngine.WrapMode
Updating: UnityEngine.AnimationEvent
Updating: UnityEngine.AnimationClip
Updating: UnityEngine.Keyframe
Updating: UnityEngine.AnimationCurve
Updating: UnityEngine.PlayMode
Updating: UnityEngine.QueueMode
Updating: UnityEngine.AnimationBlendMode
Updating: UnityEngine.AnimationPlayMode
Updating: UnityEngine.Animation
Updating: UnityEngine.AnimationState
Updating: UnityEngine.ReferenceData
Updating: UnityEngine.HideFlags
Updating: UnityEngine.Object
Updating: UnityEngine.SendMessageOptions
Updating: UnityEngine.PrimitiveType
Updating: UnityEngine.GameObject
Updating: UnityEngine.Component
Updating: UnityEngine.Behaviour
Updating: UnityEngine.Space
Updating: UnityEngine.Transform
Updating: UnityEngine.MonoBehaviour
Updating: UnityEngine.Input
Updating: UnityEngine.Time
Updating: UnityEngine.LayerMask
Updating: UnityEngine.RuntimePlatform
Updating: UnityEngine.SystemLanguage
Updating: UnityEngine.LogType
Updating: UnityEngine.Application
Updating: UnityEngine.Application/LogCallback
Updating: UnityEngine.AudioClip
Updating: UnityEngine.AudioVelocityUpdateMode
Updating: UnityEngine.AudioListener
Updating: UnityEngine.AudioSource
Updating: UnityEngine.Debug
Updating: UnityEngine.Random
Updating: UnityEngine.PlayerPrefs
Updating: UnityEngine.PlayerPrefsException
Updating: UnityEngine.SystemInfo
Updating: UnityEngine.YieldInstruction
Updating: UnityEngine.WaitForSeconds
Updating: UnityEngine.WaitForFixedUpdate
Updating: UnityEngine.WaitForEndOfFrame
Updating: UnityEngine.Coroutine
Updating: UnityEngine.RequireComponent
Updating: UnityEngine.AddComponentMenu
Updating: UnityEngine.ContextMenu
Updating: UnityEngine.ExecuteInEditMode
Updating: UnityEngine.HideInInspector
Updating: UnityEngine.ScriptableObject
Updating: UnityEngine.AssetUtility
Updating: UnityEngine.RefCounted
Updating: UnityEngine.TrackedReference
Updating: UnityEngine.Resources
Updating: UnityEngine.AsyncOperation
Updating: UnityEngine.AssetBundleRequest
Updating: UnityEngine.AssetBundle
Updating: UnityEngine.SerializePrivateVariables
Updating: UnityEngine.ThreadPriority
Updating: UnityEngine.SerializeField
Updating: UnityEngine.Profiler
Updating: UnityEngine.LightType
Updating: UnityEngine.LightRenderMode
Updating: UnityEngine.LightShadows
Updating: UnityEngine.Light
Updating: UnityEngine.RenderSettings
Updating: UnityEngine.QualityLevel
Updating: UnityEngine.QualitySettings
Updating: UnityEngine.CameraClearFlags
Updating: UnityEngine.DepthTextureMode
Updating: UnityEngine.Camera
Updating: UnityEngine.TexGenMode
Updating: UnityEngine.Shader
Updating: UnityEngine.AnisotropicFiltering
Updating: UnityEngine.FilterMode
Updating: UnityEngine.TextureWrapMode
Updating: UnityEngine.Texture
Updating: UnityEngine.TextureFormat
Updating: UnityEngine.Texture2D
Updating: UnityEngine.CubemapFace
Updating: UnityEngine.Cubemap
Updating: UnityEngine.MeshFilter
Updating: UnityEngine.CombineInstance
Updating: UnityEngine.Mesh
Updating: UnityEngine.BoneWeight
Updating: UnityEngine.SkinQuality
Updating: UnityEngine.SkinnedMeshRenderer
Updating: UnityEngine.Material
Updating: UnityEngine.Flare
Updating: UnityEngine.LensFlare
Updating: UnityEngine.Renderer
Updating: UnityEngine.Projector
Updating: UnityEngine.Skybox
Updating: UnityEngine.TextMesh
Updating: UnityEngine.Particle
Updating: UnityEngine.ParticleEmitter
Updating: UnityEngine.ParticleAnimator
Updating: UnityEngine.TrailRenderer
Updating: UnityEngine.ParticleRenderMode
Updating: UnityEngine.ParticleRenderer
Updating: UnityEngine.LineRenderer
Updating: UnityEngine.MaterialPropertyBlock
Updating: UnityEngine.Graphics
Updating: UnityEngine.Resolution
Updating: UnityEngine.LightmapData
Updating: UnityEngine.LightmapSettings
Updating: UnityEngine.GeometryUtility
Updating: UnityEngine.Screen
Updating: UnityEngine.RenderTextureFormat
Updating: UnityEngine.RenderTexture
Updating: UnityEngine.MovieTexture
Updating: UnityEngine.GL
Updating: UnityEngine.GUIElement
Updating: UnityEngine.GUITexture
Updating: UnityEngine.TextAlignment
Updating: UnityEngine.TextAnchor
Updating: UnityEngine.GUIText
Updating: UnityEngine.Font
Updating: UnityEngine.GUILayer
Updating: UnityEngine.MeshRenderer
Updating: UnityEngine.ScriptableShaderPass
Updating: UnityEngine.RenderBeforeQueues
Updating: UnityEngine.ScaleMode
Updating: UnityEngine.GUI
Updating: UnityEngine.GUI/WindowFunction
Updating: UnityEngine.GUILayout
Updating: UnityEngine.GUILayoutUtility
Updating: UnityEngine.GUILayoutEntry
Updating: UnityEngine.GUILayoutGroup
Updating: UnityEngine.GUIScrollGroup
Updating: UnityEngine.GUILayoutOption
Updating: UnityEngine.GUILayoutOption/Type
Updating: UnityEngine.GUILayoutOption/Type
Updating: UnityEngine.ExitGUIException
Updating: UnityEngine.FocusType
Updating: UnityEngine.IDList
Updating: UnityEngine.GUIUtility
Updating: UnityEngine.ImagePosition
Updating: UnityEngine.GUIContent
Updating: UnityEngine.GUIStyleState
Updating: UnityEngine.RectOffset
Updating: UnityEngine.GUIStyle
Updating: UnityEngine.PlatformSelection
Updating: UnityEngine.GUISettings
Updating: UnityEngine.GUISkin
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom1;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom10;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom11;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom12;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom13;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom14;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom15;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom16;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom17;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom18;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom19;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom2;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom20;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom3;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom4;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom5;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom6;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom7;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom8;'
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle custom9;'
Updating: UnityEngine.GUIClip
Updating: UnityEngine.Gizmos
Updating: UnityEngine.EventType
Updating: UnityEngine.Event
Updating: UnityEngine.TextClipping
Updating: UnityEngine.KeyCode
Updating: UnityEngine.Vector2
Updating: UnityEngine.Vector3
Updating: UnityEngine.Color
Updating: UnityEngine.Color32
Updating: UnityEngine.Quaternion
Updating: UnityEngine.Rect
Updating: UnityEngine.Matrix4x4
Updating: UnityEngine.Bounds
Updating: UnityEngine.Vector4
Updating: UnityEngine.Ray
Updating: UnityEngine.Plane
Updating: UnityEngine.Mathf
Updating: UnityEngine.RPCMode
Updating: UnityEngine.ConnectionTesterStatus
Updating: UnityEngine.NetworkConnectionError
Updating: UnityEngine.NetworkDisconnection
Updating: UnityEngine.MasterServerEvent
Updating: UnityEngine.NetworkStateSynchronization
Updating: UnityEngine.NetworkPeerType
Updating: UnityEngine.NetworkPlayer
Updating: UnityEngine.NetworkViewID
Updating: UnityEngine.Ping
Updating: UnityEngine.NetworkView
Updating: UnityEngine.Network
Updating: UnityEngine.BitStream
Updating: UnityEngine.RPC
Updating: UnityEngine.HostData
Updating: UnityEngine.MasterServer
Updating: UnityEngine.NetworkMessageInfo
Updating: UnityEngine.ForceMode
Updating: UnityEngine.Physics
Updating: UnityEngine.Dynamics
Updating: UnityEngine.Rigidbody
Updating: UnityEngine.RigidbodyInterpolation
Updating: UnityEngine.JointMotor
Updating: UnityEngine.JointSpring
Updating: UnityEngine.JointLimits
Updating: UnityEngine.Joint
Updating: UnityEngine.HingeJoint
Updating: UnityEngine.SpringJoint
Updating: UnityEngine.FixedJoint
Updating: UnityEngine.SoftJointLimit
Updating: UnityEngine.JointDriveMode
Updating: UnityEngine.JointProjectionMode
Updating: UnityEngine.JointDrive
Updating: UnityEngine.CharacterJoint
Updating: UnityEngine.ConfigurableJointMotion
Updating: UnityEngine.RotationDriveMode
Updating: UnityEngine.ConfigurableJoint
Updating: UnityEngine.ConstantForce
Updating: UnityEngine.Collider
Updating: UnityEngine.BoxCollider
Updating: UnityEngine.SphereCollider
Updating: UnityEngine.MeshCollider
Updating: UnityEngine.CapsuleCollider
Updating: UnityEngine.RaycastCollider
Updating: UnityEngine.WheelFrictionCurve
Updating: UnityEngine.WheelHit
Updating: UnityEngine.WheelCollider
Updating: UnityEngine.RaycastHit
Updating: UnityEngine.PhysicMaterialCombine
Updating: UnityEngine.PhysicMaterial
Updating: UnityEngine.ContactPoint
Updating: UnityEngine.Collision
Updating: UnityEngine.CollisionFlags
Updating: UnityEngine.ControllerColliderHit
Updating: UnityEngine.ControllerControllerHit
Updating: UnityEngine.CharacterController
Updating: UnityEngine.TextAsset
Updating: UnityEngine.TerrainCollider
Updating: UnityEngine.TreePrototype
Updating: UnityEngine.DetailRenderMode
Updating: UnityEngine.DetailPrototype
Updating: UnityEngine.SplatPrototype
Updating: UnityEngine.TerrainChangedFlags
Updating: UnityEngine.TerrainLighting
Updating: UnityEngine.TerrainData
Updating: UnityEngine.TreeInstance
Updating: UnityEngine.Terrain
Updating: UnityEngine.Terrain/TerrainRenderFlags
Updating: UnityEngine.Terrain/TerrainRenderFlags
Updating: UnityEngine.WWW
Updating: UnityEngine.WWWForm
Updating: UnityEngine.WWWTranscoder
Updating: UnityEngine.CacheIndex
Updating: UnityEngine.Caching
Updating: UnityEngine.Application/LogCallback
Updating: UnityEngine.GUI/WindowFunction
Members Added: 3125, Members Deleted: 20
