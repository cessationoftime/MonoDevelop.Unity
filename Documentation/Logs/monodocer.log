New Type: UnityEngine.AndroidJavaObject
Member Added: public AndroidJavaObject (IntPtr jobject);
Member Added: protected AndroidJavaObject ();
Member Added: public AndroidJavaObject (string className, object[] args);
Member Added: protected IntPtr m_jobject;
Member Added: protected IntPtr m_jclass;
Member Added: protected System.Collections.Generic.Dictionary<int,IntPtr> m_methodIDs;
Member Added: protected System.Collections.Generic.Dictionary<int,IntPtr> m_fieldIDs;
Member Added: ~AndroidJavaObject ();
Member Added: protected virtual void Dispose (bool disposing);
Member Added: protected void _Dispose ();
Member Added: protected void _Call (string methodName, object[] args);
Member Added: protected ReturnType _Call<ReturnType> (string methodName, object[] args);
Member Added: protected FieldType _Get<FieldType> (string fieldName);
Member Added: protected void _Set<FieldType> (string fieldName, FieldType val);
Member Added: protected void _CallStatic (string methodName, object[] args);
Member Added: protected ReturnType _CallStatic<ReturnType> (string methodName, object[] args);
Member Added: protected FieldType _GetStatic<FieldType> (string fieldName);
Member Added: protected void _SetStatic<FieldType> (string fieldName, FieldType val);
Member Added: protected IntPtr _GetRawObject ();
Member Added: protected IntPtr _GetRawClass ();
Member Added: protected IntPtr GetCachedMethodID (string methodName, object[] args, bool isStatic);
Member Added: protected IntPtr GetCachedMethodID<ReturnType> (string methodName, object[] args, bool isStatic);
Member Added: protected IntPtr GetCachedFieldID<FieldType> (string fieldName, bool isStatic);
Member Added: protected static int GetSignatureHash (object[] args);
Member Added: protected static int GetSignatureHash<ReturnType> (object[] args);
Member Added: public void Dispose ();
Member Added: public void Call (string methodName, object[] args);
Member Added: public void CallStatic (string methodName, object[] args);
Member Added: public FieldType Get<FieldType> (string fieldName);
Member Added: public void Set<FieldType> (string fieldName, FieldType val);
Member Added: public FieldType GetStatic<FieldType> (string fieldName);
Member Added: public void SetStatic<FieldType> (string fieldName, FieldType val);
Member Added: public IntPtr GetRawObject ();
Member Added: public IntPtr GetRawClass ();
Member Added: public ReturnType Call<ReturnType> (string methodName, object[] args);
Member Added: public ReturnType CallStatic<ReturnType> (string methodName, object[] args);
Namespace Directory Created: UnityEngine
New Namespace File: UnityEngine
New Type: UnityEngine.AndroidJavaClass
Member Added: public AndroidJavaClass (string className);
New Type: UnityEngine.SocialPlatforms.GameCenter.GameCenterPlatform
Member Added: public GameCenterPlatform ();
Member Added: public static void ResetAllAchievements (Action<bool> callback);
Member Added: public static void ShowDefaultAchievementCompletionBanner (bool value);
Namespace Directory Created: UnityEngine.SocialPlatforms.GameCenter
New Namespace File: UnityEngine.SocialPlatforms.GameCenter
New Type: UnityEngine.ImplementedInActionScriptAttribute
Member Added: public ImplementedInActionScriptAttribute ();
New Type: UnityEngine.SocialPlatforms.Impl.LocalUser
Member Added: public LocalUser ();
Member Added: public void Authenticate (Action<bool> callback);
Member Added: public void LoadFriends (Action<bool> callback);
Member Added: public void SetFriends (UnityEngine.SocialPlatforms.IUserProfile[] friends);
Member Added: public void SetAuthenticated (bool value);
Member Added: public void SetUnderage (bool value);
Member Added: public UnityEngine.SocialPlatforms.IUserProfile[] friends { get; }
Member Added: public bool authenticated { get; }
Member Added: public bool underage { get; }
Namespace Directory Created: UnityEngine.SocialPlatforms.Impl
New Namespace File: UnityEngine.SocialPlatforms.Impl
New Type: UnityEngine.SocialPlatforms.Impl.UserProfile
Member Added: public UserProfile ();
Member Added: public UserProfile (string name, string id, bool friend);
Member Added: public UserProfile (string name, string id, bool friend, UnityEngine.SocialPlatforms.UserState state, UnityEngine.Texture2D image);
Member Added: protected string m_UserName;
Member Added: protected string m_ID;
Member Added: protected bool m_IsFriend;
Member Added: protected UnityEngine.SocialPlatforms.UserState m_State;
Member Added: protected UnityEngine.Texture2D m_Image;
Member Added: public override string ToString ();
Member Added: public void SetUserName (string name);
Member Added: public void SetUserID (string id);
Member Added: public void SetImage (UnityEngine.Texture2D image);
Member Added: public void SetIsFriend (bool value);
Member Added: public void SetState (UnityEngine.SocialPlatforms.UserState state);
Member Added: public string userName { get; }
Member Added: public string id { get; }
Member Added: public bool isFriend { get; }
Member Added: public UnityEngine.SocialPlatforms.UserState state { get; }
Member Added: public UnityEngine.Texture2D image { get; }
New Type: UnityEngine.SocialPlatforms.Impl.Achievement
Member Added: public Achievement (string id, double percentCompleted, bool completed, bool hidden, DateTime lastReportedDate);
Member Added: public Achievement (string id, double percent);
Member Added: public Achievement ();
Member Added: public override string ToString ();
Member Added: public void ReportProgress (Action<bool> callback);
Member Added: public void SetCompleted (bool value);
Member Added: public void SetHidden (bool value);
Member Added: public void SetLastReportedDate (DateTime date);
Member Added: public string id { set; get; }
Member Added: public double percentCompleted { set; get; }
Member Added: public bool completed { get; }
Member Added: public bool hidden { get; }
Member Added: public DateTime lastReportedDate { get; }
New Type: UnityEngine.SocialPlatforms.Impl.AchievementDescription
Member Added: public AchievementDescription (string id, string title, UnityEngine.Texture2D image, string achievedDescription, string unachievedDescription, bool hidden, int points);
Member Added: public override string ToString ();
Member Added: public void SetImage (UnityEngine.Texture2D image);
Member Added: public string id { set; get; }
Member Added: public string title { get; }
Member Added: public UnityEngine.Texture2D image { get; }
Member Added: public string achievedDescription { get; }
Member Added: public string unachievedDescription { get; }
Member Added: public bool hidden { get; }
Member Added: public int points { get; }
New Type: UnityEngine.SocialPlatforms.Impl.Score
Member Added: public Score ();
Member Added: public Score (string leaderboardID, long value);
Member Added: public Score (string leaderboardID, long value, string userID, DateTime date, string formattedValue, int rank);
Member Added: public override string ToString ();
Member Added: public void ReportScore (Action<bool> callback);
Member Added: public void SetDate (DateTime date);
Member Added: public void SetFormattedValue (string value);
Member Added: public void SetUserID (string userID);
Member Added: public void SetRank (int rank);
Member Added: public string leaderboardID { set; get; }
Member Added: public long value { set; get; }
Member Added: public DateTime date { get; }
Member Added: public string formattedValue { get; }
Member Added: public string userID { get; }
Member Added: public int rank { get; }
New Type: UnityEngine.SocialPlatforms.Impl.Leaderboard
Member Added: public Leaderboard ();
Member Added: public void SetUserFilter (string[] userIDs);
Member Added: public override string ToString ();
Member Added: public void LoadScores (Action<bool> callback);
Member Added: public void SetLocalUserScore (UnityEngine.SocialPlatforms.IScore score);
Member Added: public void SetMaxRange (uint maxRange);
Member Added: public void SetScores (UnityEngine.SocialPlatforms.IScore[] scores);
Member Added: public void SetTitle (string title);
Member Added: public bool loading { get; }
Member Added: public string id { set; get; }
Member Added: public UnityEngine.SocialPlatforms.UserScope userScope { set; get; }
Member Added: public UnityEngine.SocialPlatforms.Range range { set; get; }
Member Added: public UnityEngine.SocialPlatforms.TimeScope timeScope { set; get; }
Member Added: public UnityEngine.SocialPlatforms.IScore localUserScore { get; }
Member Added: public uint maxRange { get; }
Member Added: public UnityEngine.SocialPlatforms.IScore[] scores { get; }
Member Added: public string title { get; }
New Type: UnityEngine.SocialPlatforms.Local
Member Added: public Local ();
Member Added: void ISocialPlatform.Authenticate (UnityEngine.SocialPlatforms.ILocalUser user, Action<bool> callback);
Member Added: void ISocialPlatform.LoadFriends (UnityEngine.SocialPlatforms.ILocalUser user, Action<bool> callback);
Member Added: void ISocialPlatform.LoadScores (UnityEngine.SocialPlatforms.ILeaderboard board, Action<bool> callback);
Member Added: bool ISocialPlatform.GetLoading (UnityEngine.SocialPlatforms.ILeaderboard board);
Member Added: public void LoadUsers (string[] userIDs, Action<UnityEngine.SocialPlatforms.IUserProfile[]> callback);
Member Added: public void ReportProgress (string id, double progress, Action<bool> callback);
Member Added: public void LoadAchievementDescriptions (Action<UnityEngine.SocialPlatforms.IAchievementDescription[]> callback);
Member Added: public void LoadAchievements (Action<UnityEngine.SocialPlatforms.IAchievement[]> callback);
Member Added: public void ReportScore (long score, string board, Action<bool> callback);
Member Added: public void LoadScores (string leaderboardID, Action<UnityEngine.SocialPlatforms.IScore[]> callback);
Member Added: public void ShowAchievementsUI ();
Member Added: public void ShowLeaderboardUI ();
Member Added: public UnityEngine.SocialPlatforms.ILeaderboard CreateLeaderboard ();
Member Added: public UnityEngine.SocialPlatforms.IAchievement CreateAchievement ();
Member Added: public UnityEngine.SocialPlatforms.ILocalUser localUser { get; }
Namespace Directory Created: UnityEngine.SocialPlatforms
New Namespace File: UnityEngine.SocialPlatforms
New Type: UnityEngine.Social
Member Added: public static void LoadUsers (string[] userIDs, Action<UnityEngine.SocialPlatforms.IUserProfile[]> callback);
Member Added: public static void ReportProgress (string achievementID, double progress, Action<bool> callback);
Member Added: public static void LoadAchievementDescriptions (Action<UnityEngine.SocialPlatforms.IAchievementDescription[]> callback);
Member Added: public static void LoadAchievements (Action<UnityEngine.SocialPlatforms.IAchievement[]> callback);
Member Added: public static void ReportScore (long score, string board, Action<bool> callback);
Member Added: public static void LoadScores (string leaderboardID, Action<UnityEngine.SocialPlatforms.IScore[]> callback);
Member Added: public static UnityEngine.SocialPlatforms.ILeaderboard CreateLeaderboard ();
Member Added: public static UnityEngine.SocialPlatforms.IAchievement CreateAchievement ();
Member Added: public static void ShowAchievementsUI ();
Member Added: public static void ShowLeaderboardUI ();
Member Added: public static UnityEngine.SocialPlatforms.ISocialPlatform Active { set; get; }
Member Added: public static UnityEngine.SocialPlatforms.ILocalUser localUser { get; }
New Type: UnityEngine.SocialPlatforms.ISocialPlatform
Member Added: public void LoadUsers (string[] userIDs, Action<UnityEngine.SocialPlatforms.IUserProfile[]> callback);
Member Added: public void ReportProgress (string achievementID, double progress, Action<bool> callback);
Member Added: public void LoadAchievementDescriptions (Action<UnityEngine.SocialPlatforms.IAchievementDescription[]> callback);
Member Added: public void LoadAchievements (Action<UnityEngine.SocialPlatforms.IAchievement[]> callback);
Member Added: public UnityEngine.SocialPlatforms.IAchievement CreateAchievement ();
Member Added: public void ReportScore (long score, string board, Action<bool> callback);
Member Added: public void LoadScores (string leaderboardID, Action<UnityEngine.SocialPlatforms.IScore[]> callback);
Member Added: public UnityEngine.SocialPlatforms.ILeaderboard CreateLeaderboard ();
Member Added: public void ShowAchievementsUI ();
Member Added: public void ShowLeaderboardUI ();
Member Added: public void Authenticate (UnityEngine.SocialPlatforms.ILocalUser user, Action<bool> callback);
Member Added: public void LoadFriends (UnityEngine.SocialPlatforms.ILocalUser user, Action<bool> callback);
Member Added: public void LoadScores (UnityEngine.SocialPlatforms.ILeaderboard board, Action<bool> callback);
Member Added: public bool GetLoading (UnityEngine.SocialPlatforms.ILeaderboard board);
Member Added: public UnityEngine.SocialPlatforms.ILocalUser localUser { get; }
New Type: UnityEngine.SocialPlatforms.ILocalUser
Member Added: public void Authenticate (Action<bool> callback);
Member Added: public void LoadFriends (Action<bool> callback);
Member Added: public UnityEngine.SocialPlatforms.IUserProfile[] friends { get; }
Member Added: public bool authenticated { get; }
Member Added: public bool underage { get; }
New Type: UnityEngine.SocialPlatforms.UserState
Member Added: Online
Member Added: OnlineAndAway
Member Added: OnlineAndBusy
Member Added: Offline
Member Added: Playing
New Type: UnityEngine.SocialPlatforms.IUserProfile
Member Added: public string userName { get; }
Member Added: public string id { get; }
Member Added: public bool isFriend { get; }
Member Added: public UnityEngine.SocialPlatforms.UserState state { get; }
Member Added: public UnityEngine.Texture2D image { get; }
New Type: UnityEngine.SocialPlatforms.IAchievement
Member Added: public void ReportProgress (Action<bool> callback);
Member Added: public string id { set; get; }
Member Added: public double percentCompleted { set; get; }
Member Added: public bool completed { get; }
Member Added: public bool hidden { get; }
Member Added: public DateTime lastReportedDate { get; }
New Type: UnityEngine.SocialPlatforms.IAchievementDescription
Member Added: public string id { set; get; }
Member Added: public string title { get; }
Member Added: public UnityEngine.Texture2D image { get; }
Member Added: public string achievedDescription { get; }
Member Added: public string unachievedDescription { get; }
Member Added: public bool hidden { get; }
Member Added: public int points { get; }
New Type: UnityEngine.SocialPlatforms.IScore
Member Added: public void ReportScore (Action<bool> callback);
Member Added: public string leaderboardID { set; get; }
Member Added: public long value { set; get; }
Member Added: public DateTime date { get; }
Member Added: public string formattedValue { get; }
Member Added: public string userID { get; }
Member Added: public int rank { get; }
New Type: UnityEngine.SocialPlatforms.UserScope
Member Added: Global
Member Added: FriendsOnly
New Type: UnityEngine.SocialPlatforms.TimeScope
Member Added: Today
Member Added: Week
Member Added: AllTime
New Type: UnityEngine.SocialPlatforms.Range
Member Added: public Range (int fromValue, int valueCount);
Member Added: public int from;
Member Added: public int count;
New Type: UnityEngine.SocialPlatforms.ILeaderboard
Member Added: public void SetUserFilter (string[] userIDs);
Member Added: public void LoadScores (Action<bool> callback);
Member Added: public bool loading { get; }
Member Added: public string id { set; get; }
Member Added: public UnityEngine.SocialPlatforms.UserScope userScope { set; get; }
Member Added: public UnityEngine.SocialPlatforms.Range range { set; get; }
Member Added: public UnityEngine.SocialPlatforms.TimeScope timeScope { set; get; }
Member Added: public UnityEngine.SocialPlatforms.IScore localUserScore { get; }
Member Added: public uint maxRange { get; }
Member Added: public UnityEngine.SocialPlatforms.IScore[] scores { get; }
Member Added: public string title { get; }
New Type: UnityEngine.Security
Member Added: public Security ();
Member Added: public static bool PrefetchSocketPolicy (string ip, int atPort);
Member Added: public static bool PrefetchSocketPolicy (string ip, int atPort, int timeout);
New Type: UnityEngine.Types
Member Added: public static Type GetType (string typeName, string assemblyName);
New Type: UnityEngine.StackTraceUtility
Member Added: public StackTraceUtility ();
Member Added: public static string ExtractStackTrace ();
Member Added: public static string ExtractStringFromException (object exception);
New Type: UnityEngine.UnityException
Member Added: public UnityException ();
Member Added: public UnityException (string message);
Member Added: public UnityException (string message, Exception innerException);
Member Added: protected UnityException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
New Type: UnityEngine.MissingComponentException
Member Added: public MissingComponentException ();
Member Added: public MissingComponentException (string message);
Member Added: public MissingComponentException (string message, Exception innerException);
Member Added: protected MissingComponentException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
New Type: UnityEngine.UnassignedReferenceException
Member Added: public UnassignedReferenceException ();
Member Added: public UnassignedReferenceException (string message);
Member Added: public UnassignedReferenceException (string message, Exception innerException);
Member Added: protected UnassignedReferenceException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
New Type: UnityEngine.MissingReferenceException
Member Added: public MissingReferenceException ();
Member Added: public MissingReferenceException (string message);
Member Added: public MissingReferenceException (string message, Exception innerException);
Member Added: protected MissingReferenceException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
New Type: UnityEngine.TextEditor
Member Added: public TextEditor ();
Member Added: public int pos;
Member Added: public int selectPos;
Member Added: public int controlID;
Member Added: public UnityEngine.GUIContent content;
Member Added: public UnityEngine.GUIStyle style;
Member Added: public UnityEngine.Rect position;
Member Added: public bool multiline;
Member Added: public bool hasHorizontalCursorPos;
Member Added: public bool isPasswordField;
Member Added: public UnityEngine.Vector2 scrollOffset;
Member Added: public UnityEngine.Vector2 graphicalCursorPos;
Member Added: public UnityEngine.Vector2 graphicalSelectCursorPos;
Member Added: public void OnFocus ();
Member Added: public virtual void OnLostFocus ();
Member Added: public bool HandleKeyEvent (UnityEngine.Event e);
Member Added: public bool DeleteWordBack ();
Member Added: public bool DeleteWordForward ();
Member Added: public bool Delete ();
Member Added: public bool CanPaste ();
Member Added: public bool Backspace ();
Member Added: public void SelectAll ();
Member Added: public void SelectNone ();
Member Added: public bool DeleteSelection ();
Member Added: public void ReplaceSelection (string replace);
Member Added: public void Insert (char c);
Member Added: public void MoveSelectionToAltCursor ();
Member Added: public void MoveRight ();
Member Added: public void MoveLeft ();
Member Added: public void MoveUp ();
Member Added: public void MoveDown ();
Member Added: public void MoveLineStart ();
Member Added: public void MoveLineEnd ();
Member Added: public void MoveGraphicalLineStart ();
Member Added: public void MoveGraphicalLineEnd ();
Member Added: public void MoveTextStart ();
Member Added: public void MoveTextEnd ();
Member Added: public void MoveParagraphForward ();
Member Added: public void MoveParagraphBackward ();
Member Added: public void MoveCursorToPosition (UnityEngine.Vector2 cursorPosition);
Member Added: public void MoveAltCursorToPosition (UnityEngine.Vector2 cursorPosition);
Member Added: public bool IsOverSelection (UnityEngine.Vector2 cursorPosition);
Member Added: public void SelectToPosition (UnityEngine.Vector2 cursorPosition);
Member Added: public void SelectLeft ();
Member Added: public void SelectRight ();
Member Added: public void SelectUp ();
Member Added: public void SelectDown ();
Member Added: public void SelectTextEnd ();
Member Added: public void SelectTextStart ();
Member Added: public void MouseDragSelectsWholeWords (bool on);
Member Added: public void DblClickSnap (UnityEngine.TextEditor.DblClickSnapping snapping);
Member Added: public void MoveWordRight ();
Member Added: public void MoveToStartOfNextWord ();
Member Added: public void MoveToEndOfPreviousWord ();
Member Added: public void SelectToStartOfNextWord ();
Member Added: public void SelectToEndOfPreviousWord ();
Member Added: public int FindStartOfNextWord (int p);
Member Added: public void MoveWordLeft ();
Member Added: public void SelectWordRight ();
Member Added: public void SelectWordLeft ();
Member Added: public void ExpandSelectGraphicalLineStart ();
Member Added: public void ExpandSelectGraphicalLineEnd ();
Member Added: public void SelectGraphicalLineStart ();
Member Added: public void SelectGraphicalLineEnd ();
Member Added: public void SelectParagraphForward ();
Member Added: public void SelectParagraphBackward ();
Member Added: public void SelectCurrentWord ();
Member Added: public void SelectCurrentParagraph ();
Member Added: public void DrawCursor (string text);
Member Added: public void SaveBackup ();
Member Added: public void Undo ();
Member Added: public bool Cut ();
Member Added: public void Copy ();
Member Added: public bool Paste ();
Member Added: public void ClampPos ();
Member Added: public bool hasSelection { get; }
Member Added: public string SelectedText { get; }
New Type: UnityEngine.TextEditor/DblClickSnapping
Member Added: WORDS
Member Added: PARAGRAPHS
New Namespace File: 
Updating: UnityEngine.TextEditor/DblClickSnapping
New Type: UnityEngine.TrackedReference
Member Added: protected TrackedReference ();
Member Added: public override bool Equals (object o);
Member Added: public override int GetHashCode ();
Member Added: public static bool op_Equality (UnityEngine.TrackedReference x, UnityEngine.TrackedReference y);
Member Added: public static bool op_Inequality (UnityEngine.TrackedReference x, UnityEngine.TrackedReference y);
Member Added: public static bool op_Implicit (UnityEngine.TrackedReference exists);
New Type: UnityEngine.WWW
Member Added: public WWW (string url);
Member Added: public WWW (string url, UnityEngine.WWWForm form);
Member Added: public WWW (string url, byte[] postData);
Member Added: public WWW (string url, byte[] postData, System.Collections.Hashtable headers);
Member Added: public void Dispose ();
Member Added: ~WWW ();
Member Added: public void InitWWW (string url, byte[] postData, string[] iHeaders);
Member Added: public static string EscapeURL (string s);
Member Added: public static string EscapeURL (string s, System.Text.Encoding e);
Member Added: public static string UnEscapeURL (string s);
Member Added: public static string UnEscapeURL (string s, System.Text.Encoding e);
Member Added: public UnityEngine.AudioClip GetAudioClip (bool threeD);
Member Added: public UnityEngine.AudioClip GetAudioClip (bool threeD, bool stream);
Member Added: public UnityEngine.AudioClip GetAudioClip (bool threeD, bool stream, UnityEngine.AudioType audioType);
Member Added: public void LoadImageIntoTexture (UnityEngine.Texture2D tex);
Member Added: public static string GetURL (string url);
Member Added: public static UnityEngine.Texture2D GetTextureFromURL (string url);
Member Added: public void LoadUnityWeb ();
Member Added: public static UnityEngine.WWW LoadFromCacheOrDownload (string url, int version);
Member Added: public System.Collections.Generic.Dictionary<string,string> responseHeaders { get; }
Member Added: public string text { get; }
Member Added: public string data { get; }
Member Added: public byte[] bytes { get; }
Member Added: public int size { get; }
Member Added: public string error { get; }
Member Added: public UnityEngine.Texture2D texture { get; }
Member Added: public UnityEngine.Texture2D textureNonReadable { get; }
Member Added: public UnityEngine.AudioClip audioClip { get; }
Member Added: public UnityEngine.MovieTexture movie { get; }
Member Added: public bool isDone { get; }
Member Added: public float progress { get; }
Member Added: public float uploadProgress { get; }
Member Added: public UnityEngine.AudioClip oggVorbis { get; }
Member Added: public string url { get; }
Member Added: public UnityEngine.AssetBundle assetBundle { get; }
Member Added: public UnityEngine.ThreadPriority threadPriority { set; get; }
New Type: UnityEngine.Serialization.UnitySurrogateSelector
Member Added: public UnitySurrogateSelector ();
Member Added: public System.Runtime.Serialization.ISerializationSurrogate GetSurrogate (Type type, System.Runtime.Serialization.StreamingContext context, out System.Runtime.Serialization.ISurrogateSelector selector);
Member Added: public void ChainSelector (System.Runtime.Serialization.ISurrogateSelector selector);
Member Added: public System.Runtime.Serialization.ISurrogateSelector GetNextSelector ();
Namespace Directory Created: UnityEngine.Serialization
New Namespace File: UnityEngine.Serialization
New Type: UnityEngineInternal.TypeInferenceRules
Member Added: TypeReferencedByFirstArgument
Member Added: TypeReferencedBySecondArgument
Member Added: ArrayOfTypeReferencedByFirstArgument
Member Added: TypeOfFirstArgument
Namespace Directory Created: UnityEngineInternal
New Namespace File: UnityEngineInternal
New Type: UnityEngineInternal.TypeInferenceRuleAttribute
Member Added: public TypeInferenceRuleAttribute (UnityEngineInternal.TypeInferenceRules rule);
Member Added: public TypeInferenceRuleAttribute (string rule);
Member Added: public override string ToString ();
New Type: UnityEngine.WrapMode
Member Added: Once
Member Added: Loop
Member Added: PingPong
Member Added: Default
Member Added: ClampForever
Member Added: Clamp
New Type: UnityEngine.AnimationEvent
Member Added: public AnimationEvent ();
Member Added: ~AnimationEvent ();
Member Added: public string data { set; get; }
Member Added: public string stringParameter { set; get; }
Member Added: public float floatParameter { set; get; }
Member Added: public int intParameter { set; get; }
Member Added: public UnityEngine.Object objectReferenceParameter { set; get; }
Member Added: public string functionName { set; get; }
Member Added: public float time { set; get; }
Member Added: public UnityEngine.SendMessageOptions messageOptions { set; get; }
Member Added: public UnityEngine.AnimationState animationState { get; }
New Type: UnityEngine.AnimationClip
Member Added: public AnimationClip ();
Member Added: public void SetCurve (string relativePath, Type type, string propertyName, UnityEngine.AnimationCurve curve);
Member Added: public void EnsureQuaternionContinuity ();
Member Added: public void ClearCurves ();
Member Added: public void AddEvent (UnityEngine.AnimationEvent evt);
Member Added: public float length { get; }
Member Added: public float frameRate { get; }
Member Added: public UnityEngine.WrapMode wrapMode { set; get; }
Member Added: public UnityEngine.Bounds localBounds { set; get; }
New Type: UnityEngine.Keyframe
Member Added: public Keyframe (float time, float value);
Member Added: public Keyframe (float time, float value, float inTangent, float outTangent);
Member Added: public float time { set; get; }
Member Added: public float value { set; get; }
Member Added: public float inTangent { set; get; }
Member Added: public float outTangent { set; get; }
Member Added: public int tangentMode { set; get; }
New Type: UnityEngine.AnimationCurve
Member Added: public AnimationCurve (UnityEngine.Keyframe[] keys);
Member Added: public AnimationCurve ();
Member Added: ~AnimationCurve ();
Member Added: public float Evaluate (float time);
Member Added: public int AddKey (float time, float value);
Member Added: public int AddKey (UnityEngine.Keyframe key);
Member Added: public int MoveKey (int index, UnityEngine.Keyframe key);
Member Added: public void RemoveKey (int index);
Member Added: public void SmoothTangents (int index, float weight);
Member Added: public static UnityEngine.AnimationCurve Linear (float timeStart, float valueStart, float timeEnd, float valueEnd);
Member Added: public static UnityEngine.AnimationCurve EaseInOut (float timeStart, float valueStart, float timeEnd, float valueEnd);
Member Added: public UnityEngine.Keyframe[] keys { set; get; }
Member Added: public UnityEngine.Keyframe this[int index] { get; }
Member Added: public int length { get; }
Member Added: public UnityEngine.WrapMode preWrapMode { set; get; }
Member Added: public UnityEngine.WrapMode postWrapMode { set; get; }
New Type: UnityEngine.PlayMode
Member Added: StopSameLayer
Member Added: StopAll
New Type: UnityEngine.QueueMode
Member Added: CompleteOthers
Member Added: PlayNow
New Type: UnityEngine.AnimationBlendMode
Member Added: Blend
Member Added: Additive
New Type: UnityEngine.AnimationPlayMode
Member Added: Stop
Member Added: Queue
Member Added: Mix
New Type: UnityEngine.AnimationCullingType
Member Added: AlwaysAnimate
Member Added: BasedOnRenderers
Member Added: BasedOnClipBounds
Member Added: BasedOnUserBounds
New Type: UnityEngine.Animation
Member Added: public Animation ();
Member Added: public void Stop ();
Member Added: public void Stop (string name);
Member Added: public void Rewind (string name);
Member Added: public void Rewind ();
Member Added: public void Sample ();
Member Added: public bool IsPlaying (string name);
Member Added: public bool Play ();
Member Added: public bool Play (UnityEngine.PlayMode mode);
Member Added: public bool Play (string animation, UnityEngine.PlayMode mode);
Member Added: public bool Play (string animation);
Member Added: public void CrossFade (string animation, float fadeLength, UnityEngine.PlayMode mode);
Member Added: public void CrossFade (string animation, float fadeLength);
Member Added: public void CrossFade (string animation);
Member Added: public void Blend (string animation, float targetWeight, float fadeLength);
Member Added: public void Blend (string animation, float targetWeight);
Member Added: public void Blend (string animation);
Member Added: public UnityEngine.AnimationState CrossFadeQueued (string animation, float fadeLength, UnityEngine.QueueMode queue, UnityEngine.PlayMode mode);
Member Added: public UnityEngine.AnimationState CrossFadeQueued (string animation, float fadeLength, UnityEngine.QueueMode queue);
Member Added: public UnityEngine.AnimationState CrossFadeQueued (string animation, float fadeLength);
Member Added: public UnityEngine.AnimationState CrossFadeQueued (string animation);
Member Added: public UnityEngine.AnimationState PlayQueued (string animation, UnityEngine.QueueMode queue, UnityEngine.PlayMode mode);
Member Added: public UnityEngine.AnimationState PlayQueued (string animation, UnityEngine.QueueMode queue);
Member Added: public UnityEngine.AnimationState PlayQueued (string animation);
Member Added: public void AddClip (UnityEngine.AnimationClip clip, string newName);
Member Added: public void AddClip (UnityEngine.AnimationClip clip, string newName, int firstFrame, int lastFrame, bool addLoopFrame);
Member Added: public void AddClip (UnityEngine.AnimationClip clip, string newName, int firstFrame, int lastFrame);
Member Added: public void RemoveClip (UnityEngine.AnimationClip clip);
Member Added: public void RemoveClip (string clipName);
Member Added: public int GetClipCount ();
Member Added: public bool Play (UnityEngine.AnimationPlayMode mode);
Member Added: public bool Play (string animation, UnityEngine.AnimationPlayMode mode);
Member Added: public void SyncLayer (int layer);
Member Added: public System.Collections.IEnumerator GetEnumerator ();
Member Added: public UnityEngine.AnimationClip GetClip (string name);
Member Added: public UnityEngine.AnimationClip clip { set; get; }
Member Added: public bool playAutomatically { set; get; }
Member Added: public UnityEngine.WrapMode wrapMode { set; get; }
Member Added: public bool isPlaying { get; }
Member Added: public UnityEngine.AnimationState this[string name] { get; }
Member Added: public bool animatePhysics { set; get; }
Member Added: public bool animateOnlyIfVisible { set; get; }
Member Added: public UnityEngine.AnimationCullingType cullingType { set; get; }
Member Added: public UnityEngine.Bounds localBounds { set; get; }
New Type: UnityEngine.AnimationState
Member Added: public AnimationState ();
Member Added: public void AddMixingTransform (UnityEngine.Transform mix, bool recursive);
Member Added: public void AddMixingTransform (UnityEngine.Transform mix);
Member Added: public void RemoveMixingTransform (UnityEngine.Transform mix);
Member Added: public bool enabled { set; get; }
Member Added: public float weight { set; get; }
Member Added: public UnityEngine.WrapMode wrapMode { set; get; }
Member Added: public float time { set; get; }
Member Added: public float normalizedTime { set; get; }
Member Added: public float speed { set; get; }
Member Added: public float normalizedSpeed { set; get; }
Member Added: public float length { get; }
Member Added: public int layer { set; get; }
Member Added: public UnityEngine.AnimationClip clip { get; }
Member Added: public string name { set; get; }
Member Added: public UnityEngine.AnimationBlendMode blendMode { set; get; }
New Type: UnityEngine.HideFlags
Member Added: HideInHierarchy
Member Added: HideInInspector
Member Added: DontSave
Member Added: NotEditable
Member Added: HideAndDontSave
New Type: UnityEngine.SendMessageOptions
Member Added: RequireReceiver
Member Added: DontRequireReceiver
New Type: UnityEngine.PrimitiveType
Member Added: Sphere
Member Added: Capsule
Member Added: Cylinder
Member Added: Cube
Member Added: Plane
New Type: UnityEngine.Space
Member Added: World
Member Added: Self
New Type: UnityEngine.LayerMask
Member Added: public static string LayerToName (int layer);
Member Added: public static int NameToLayer (string layerName);
Member Added: public static int op_Implicit (UnityEngine.LayerMask mask);
Member Added: public static UnityEngine.LayerMask op_Implicit (int intVal);
Member Added: public int value { set; get; }
New Type: UnityEngine.RuntimePlatform
Member Added: OSXEditor
Member Added: OSXPlayer
Member Added: WindowsPlayer
Member Added: OSXWebPlayer
Member Added: OSXDashboardPlayer
Member Added: WindowsWebPlayer
Member Added: WiiPlayer
Member Added: WindowsEditor
Member Added: IPhonePlayer
Member Added: XBOX360
Member Added: PS3
Member Added: Android
Member Added: NaCl
Member Added: LinuxPlayer
Member Added: FlashPlayer
New Type: UnityEngine.SystemLanguage
Member Added: Afrikaans
Member Added: Arabic
Member Added: Basque
Member Added: Belarusian
Member Added: Bulgarian
Member Added: Catalan
Member Added: Chinese
Member Added: Czech
Member Added: Danish
Member Added: Dutch
Member Added: English
Member Added: Estonian
Member Added: Faroese
Member Added: Finnish
Member Added: French
Member Added: German
Member Added: Greek
Member Added: Hebrew
Member Added: Hugarian
Member Added: Icelandic
Member Added: Indonesian
Member Added: Italian
Member Added: Japanese
Member Added: Korean
Member Added: Latvian
Member Added: Lithuanian
Member Added: Norwegian
Member Added: Polish
Member Added: Portuguese
Member Added: Romanian
Member Added: Russian
Member Added: SerboCroatian
Member Added: Slovak
Member Added: Slovenian
Member Added: Spanish
Member Added: Swedish
Member Added: Thai
Member Added: Turkish
Member Added: Ukrainian
Member Added: Vietnamese
Member Added: Unknown
Member Added: Hungarian
New Type: UnityEngine.LogType
Member Added: Error
Member Added: Assert
Member Added: Warning
Member Added: Log
Member Added: Exception
New Type: UnityEngine.AudioSpeakerMode
Member Added: Raw
Member Added: Mono
Member Added: Stereo
Member Added: Quad
Member Added: Surround
Member Added: Mode5point1
Member Added: Mode7point1
Member Added: Prologic
New Type: UnityEngine.AudioSettings
Member Added: public AudioSettings ();
Member Added: public static void SetDSPBufferSize (int bufferLength, int numBuffers);
Member Added: public static void GetDSPBufferSize (out int bufferLength, out int numBuffers);
Member Added: public static UnityEngine.AudioSpeakerMode driverCaps { get; }
Member Added: public static UnityEngine.AudioSpeakerMode speakerMode { set; get; }
Member Added: public static int outputSampleRate { set; get; }
New Type: UnityEngine.AudioType
Member Added: UNKNOWN
Member Added: ACC
Member Added: AIFF
Member Added: GCADPCM
Member Added: IT
Member Added: MOD
Member Added: MPEG
Member Added: OGGVORBIS
Member Added: S3M
Member Added: WAV
Member Added: XM
Member Added: XMA
Member Added: AUDIOQUEUE
New Type: UnityEngine.AudioClip
Member Added: public AudioClip ();
Member Added: public void GetData (float[] data, int offsetSamples);
Member Added: public void SetData (float[] data, int offsetSamples);
Member Added: public static UnityEngine.AudioClip Create (string name, int lengthSamples, int channels, int frequency, bool _3D, bool stream);
Member Added: public static UnityEngine.AudioClip Create (string name, int lengthSamples, int channels, int frequency, bool _3D, bool stream, UnityEngine.AudioClip.PCMReaderCallback pcmreadercallback);
Member Added: public static UnityEngine.AudioClip Create (string name, int lengthSamples, int channels, int frequency, bool _3D, bool stream, UnityEngine.AudioClip.PCMReaderCallback pcmreadercallback, UnityEngine.AudioClip.PCMSetPositionCallback pcmsetpositioncallback);
Member Added: public float length { get; }
Member Added: public int samples { get; }
Member Added: public int channels { get; }
Member Added: public int frequency { get; }
Member Added: public bool isReadyToPlay { get; }
New Type: UnityEngine.AudioClip/PCMReaderCallback
New Type: UnityEngine.AudioClip/PCMSetPositionCallback
New Type: UnityEngine.AudioVelocityUpdateMode
Member Added: Auto
Member Added: Fixed
Member Added: Dynamic
New Type: UnityEngine.AudioListener
Member Added: public AudioListener ();
Member Added: public static float[] GetOutputData (int numSamples, int channel);
Member Added: public static void GetOutputData (float[] samples, int channel);
Member Added: public static float[] GetSpectrumData (int numSamples, int channel, UnityEngine.FFTWindow window);
Member Added: public static void GetSpectrumData (float[] samples, int channel, UnityEngine.FFTWindow window);
Member Added: public static float volume { set; get; }
Member Added: public static bool pause { set; get; }
Member Added: public UnityEngine.AudioVelocityUpdateMode velocityUpdateMode { set; get; }
New Type: UnityEngine.Microphone
Member Added: public Microphone ();
Member Added: public static UnityEngine.AudioClip Start (string deviceName, bool loop, int lengthSec, int frequency);
Member Added: public static void End (string deviceName);
Member Added: public static bool IsRecording (string deviceName);
Member Added: public static int GetPosition (string deviceName);
Member Added: public static void GetDeviceCaps (string deviceName, out int minFreq, out int maxFreq);
Member Added: public static string[] devices { get; }
New Type: UnityEngine.FFTWindow
Member Added: Rectangular
Member Added: Triangle
Member Added: Hamming
Member Added: Hanning
Member Added: Blackman
Member Added: BlackmanHarris
New Type: UnityEngine.AudioRolloffMode
Member Added: Logarithmic
Member Added: Linear
Member Added: Custom
New Type: UnityEngine.AudioSource
Member Added: public AudioSource ();
Member Added: public void Play (ulong delay);
Member Added: public void Play ();
Member Added: public void Stop ();
Member Added: public void Pause ();
Member Added: public void PlayOneShot (UnityEngine.AudioClip clip, float volumeScale);
Member Added: public void PlayOneShot (UnityEngine.AudioClip clip);
Member Added: public static void PlayClipAtPoint (UnityEngine.AudioClip clip, UnityEngine.Vector3 position);
Member Added: public static void PlayClipAtPoint (UnityEngine.AudioClip clip, UnityEngine.Vector3 position, float volume);
Member Added: public float[] GetOutputData (int numSamples, int channel);
Member Added: public void GetOutputData (float[] samples, int channel);
Member Added: public float[] GetSpectrumData (int numSamples, int channel, UnityEngine.FFTWindow window);
Member Added: public void GetSpectrumData (float[] samples, int channel, UnityEngine.FFTWindow window);
Member Added: public float volume { set; get; }
Member Added: public float pitch { set; get; }
Member Added: public float time { set; get; }
Member Added: public int timeSamples { set; get; }
Member Added: public UnityEngine.AudioClip clip { set; get; }
Member Added: public bool isPlaying { get; }
Member Added: public bool loop { set; get; }
Member Added: public bool ignoreListenerVolume { set; get; }
Member Added: public bool playOnAwake { set; get; }
Member Added: public UnityEngine.AudioVelocityUpdateMode velocityUpdateMode { set; get; }
Member Added: public float panLevel { set; get; }
Member Added: public bool bypassEffects { set; get; }
Member Added: public float dopplerLevel { set; get; }
Member Added: public float spread { set; get; }
Member Added: public int priority { set; get; }
Member Added: public bool mute { set; get; }
Member Added: public float minDistance { set; get; }
Member Added: public float maxDistance { set; get; }
Member Added: public float pan { set; get; }
Member Added: public UnityEngine.AudioRolloffMode rolloffMode { set; get; }
Member Added: public float minVolume { set; get; }
Member Added: public float maxVolume { set; get; }
Member Added: public float rolloffFactor { set; get; }
New Type: UnityEngine.AudioReverbPreset
Member Added: Off
Member Added: Generic
Member Added: PaddedCell
Member Added: Room
Member Added: Bathroom
Member Added: Livingroom
Member Added: Stoneroom
Member Added: Auditorium
Member Added: Concerthall
Member Added: Cave
Member Added: Arena
Member Added: Hangar
Member Added: CarpetedHallway
Member Added: Hallway
Member Added: StoneCorridor
Member Added: Alley
Member Added: Forest
Member Added: City
Member Added: Mountains
Member Added: Quarry
Member Added: Plain
Member Added: ParkingLot
Member Added: SewerPipe
Member Added: Underwater
Member Added: Drugged
Member Added: Dizzy
Member Added: Psychotic
Member Added: User
New Type: UnityEngine.AudioReverbZone
Member Added: public AudioReverbZone ();
Member Added: public float minDistance { set; get; }
Member Added: public float maxDistance { set; get; }
Member Added: public UnityEngine.AudioReverbPreset reverbPreset { set; get; }
Member Added: public int room { set; get; }
Member Added: public int roomHF { set; get; }
Member Added: public int roomLF { set; get; }
Member Added: public float decayTime { set; get; }
Member Added: public float decayHFRatio { set; get; }
Member Added: public int reflections { set; get; }
Member Added: public float reflectionsDelay { set; get; }
Member Added: public int reverb { set; get; }
Member Added: public float reverbDelay { set; get; }
Member Added: public float HFReference { set; get; }
Member Added: public float LFReference { set; get; }
Member Added: public float roomRolloffFactor { set; get; }
Member Added: public float diffusion { set; get; }
Member Added: public float density { set; get; }
New Type: UnityEngine.AudioLowPassFilter
Member Added: public AudioLowPassFilter ();
Member Added: public float cutoffFrequency { set; get; }
Member Added: public float lowpassResonaceQ { set; get; }
New Type: UnityEngine.AudioHighPassFilter
Member Added: public AudioHighPassFilter ();
Member Added: public float cutoffFrequency { set; get; }
Member Added: public float highpassResonaceQ { set; get; }
New Type: UnityEngine.AudioDistortionFilter
Member Added: public AudioDistortionFilter ();
Member Added: public float distortionLevel { set; get; }
New Type: UnityEngine.AudioEchoFilter
Member Added: public AudioEchoFilter ();
Member Added: public float delay { set; get; }
Member Added: public float decayRatio { set; get; }
Member Added: public float dryMix { set; get; }
Member Added: public float wetMix { set; get; }
New Type: UnityEngine.AudioChorusFilter
Member Added: public AudioChorusFilter ();
Member Added: public float dryMix { set; get; }
Member Added: public float wetMix1 { set; get; }
Member Added: public float wetMix2 { set; get; }
Member Added: public float wetMix3 { set; get; }
Member Added: public float delay { set; get; }
Member Added: public float rate { set; get; }
Member Added: public float depth { set; get; }
Member Added: public float feedback { set; get; }
New Type: UnityEngine.AudioReverbFilter
Member Added: public AudioReverbFilter ();
Member Added: public UnityEngine.AudioReverbPreset reverbPreset { set; get; }
Member Added: public float dryLevel { set; get; }
Member Added: public float room { set; get; }
Member Added: public float roomHF { set; get; }
Member Added: public float roomRolloff { set; get; }
Member Added: public float decayTime { set; get; }
Member Added: public float decayHFRatio { set; get; }
Member Added: public float reflectionsLevel { set; get; }
Member Added: public float reflectionsDelay { set; get; }
Member Added: public float reverbLevel { set; get; }
Member Added: public float reverbDelay { set; get; }
Member Added: public float diffusion { set; get; }
Member Added: public float density { set; get; }
Member Added: public float hfReference { set; get; }
Member Added: public float roomLF { set; get; }
Member Added: public float lFReference { set; get; }
New Type: UnityEngine.PlayerPrefs
Member Added: public PlayerPrefs ();
Member Added: public static void SetInt (string key, int value);
Member Added: public static int GetInt (string key, int defaultValue);
Member Added: public static int GetInt (string key);
Member Added: public static void SetFloat (string key, float value);
Member Added: public static float GetFloat (string key, float defaultValue);
Member Added: public static float GetFloat (string key);
Member Added: public static void SetString (string key, string value);
Member Added: public static string GetString (string key, string defaultValue);
Member Added: public static string GetString (string key);
Member Added: public static bool HasKey (string key);
Member Added: public static void DeleteKey (string key);
Member Added: public static void DeleteAll ();
Member Added: public static void Save ();
New Type: UnityEngine.PlayerPrefsException
Member Added: public PlayerPrefsException (string error);
New Type: UnityEngine.DeviceType
Member Added: Unknown
Member Added: Handheld
Member Added: Console
Member Added: Desktop
New Type: UnityEngine.SystemInfo
Member Added: public SystemInfo ();
Member Added: public static bool SupportsRenderTextureFormat (UnityEngine.RenderTextureFormat format);
Member Added: public static string operatingSystem { get; }
Member Added: public static string processorType { get; }
Member Added: public static int processorCount { get; }
Member Added: public static int systemMemorySize { get; }
Member Added: public static int graphicsMemorySize { get; }
Member Added: public static string graphicsDeviceName { get; }
Member Added: public static string graphicsDeviceVendor { get; }
Member Added: public static int graphicsDeviceID { get; }
Member Added: public static int graphicsDeviceVendorID { get; }
Member Added: public static string graphicsDeviceVersion { get; }
Member Added: public static int graphicsShaderLevel { get; }
Member Added: public static int graphicsPixelFillrate { get; }
Member Added: public static bool supportsShadows { get; }
Member Added: public static bool supportsRenderTextures { get; }
Member Added: public static bool supportsImageEffects { get; }
Member Added: public static int supportedRenderTargetCount { get; }
Member Added: public static bool supportsVertexPrograms { get; }
Member Added: public static string deviceUniqueIdentifier { get; }
Member Added: public static string deviceName { get; }
Member Added: public static string deviceModel { get; }
Member Added: public static bool supportsAccelerometer { get; }
Member Added: public static bool supportsGyroscope { get; }
Member Added: public static bool supportsLocationService { get; }
Member Added: public static bool supportsVibration { get; }
Member Added: public static UnityEngine.DeviceType deviceType { get; }
New Type: UnityEngine.WaitForSeconds
Member Added: public WaitForSeconds (float seconds);
New Type: UnityEngine.WaitForFixedUpdate
Member Added: public WaitForFixedUpdate ();
New Type: UnityEngine.WaitForEndOfFrame
Member Added: public WaitForEndOfFrame ();
New Type: UnityEngine.Coroutine
Member Added: ~Coroutine ();
New Type: UnityEngine.RequireComponent
Member Added: public RequireComponent (Type requiredComponent);
Member Added: public RequireComponent (Type requiredComponent, Type requiredComponent2);
Member Added: public RequireComponent (Type requiredComponent, Type requiredComponent2, Type requiredComponent3);
Member Added: public Type m_Type0;
Member Added: public Type m_Type1;
Member Added: public Type m_Type2;
New Type: UnityEngine.AddComponentMenu
Member Added: public AddComponentMenu (string menuName);
Member Added: public string componentMenu { get; }
New Type: UnityEngine.ContextMenu
Member Added: public ContextMenu (string name);
Member Added: public string menuItem { get; }
New Type: UnityEngine.ExecuteInEditMode
Member Added: public ExecuteInEditMode ();
New Type: UnityEngine.HideInInspector
Member Added: public HideInInspector ();
New Type: UnityEngine.ScriptableObject
Member Added: public ScriptableObject ();
Member Added: public void SetDirty ();
Member Added: public static UnityEngine.ScriptableObject CreateInstance (string className);
Member Added: public static UnityEngine.ScriptableObject CreateInstance (Type type);
Member Added: public static T CreateInstance<T> () where T : UnityEngine.ScriptableObject;
New Type: UnityEngine.Resources
Member Added: public Resources ();
Member Added: public static UnityEngine.Object[] FindObjectsOfTypeAll (Type type);
Member Added: public static UnityEngine.Object Load (string path);
Member Added: public static UnityEngine.Object Load (string path, Type type);
Member Added: public static UnityEngine.Object[] LoadAll (string path, Type type);
Member Added: public static UnityEngine.Object[] LoadAll (string path);
Member Added: public static UnityEngine.Object GetBuiltinResource (Type type, string path);
Member Added: public static UnityEngine.Object LoadAssetAtPath (string assetPath, Type type);
Member Added: public static UnityEngine.AsyncOperation UnloadUnusedAssets ();
New Type: UnityEngine.AssetBundleCreateRequest
Member Added: public AssetBundleCreateRequest ();
Member Added: public UnityEngine.AssetBundle assetBundle { get; }
New Type: UnityEngine.AssetBundleRequest
Member Added: public AssetBundleRequest ();
Member Added: public UnityEngine.Object asset { get; }
New Type: UnityEngine.AssetBundle
Member Added: public AssetBundle ();
Member Added: public static UnityEngine.AssetBundleCreateRequest CreateFromMemory (byte[] binary);
Member Added: public static UnityEngine.AssetBundle CreateFromFile (string path);
Member Added: public bool Contains (string name);
Member Added: public UnityEngine.Object Load (string name);
Member Added: public UnityEngine.Object Load (string name, Type type);
Member Added: public UnityEngine.AssetBundleRequest LoadAsync (string name, Type type);
Member Added: public UnityEngine.Object[] LoadAll (Type type);
Member Added: public UnityEngine.Object[] LoadAll ();
Member Added: public void Unload (bool unloadAllLoadedObjects);
Member Added: public UnityEngine.Object mainAsset { get; }
New Type: UnityEngine.SerializePrivateVariables
Member Added: public SerializePrivateVariables ();
New Type: UnityEngine.ThreadPriority
Member Added: Low
Member Added: BelowNormal
Member Added: Normal
Member Added: High
New Type: UnityEngine.SerializeField
Member Added: public SerializeField ();
New Type: UnityEngine.Profiler
Member Added: public Profiler ();
Member Added: public static void AddFramesFromFile (string file);
Member Added: public static void BeginSample (string name);
Member Added: public static void BeginSample (string name, UnityEngine.Object targetObject);
Member Added: public static void EndSample ();
Member Added: public static int GetRuntimeMemorySize (UnityEngine.Object o);
Member Added: public static bool supported { get; }
Member Added: public static string logFile { set; get; }
Member Added: public static bool enableBinaryLog { set; get; }
Member Added: public static bool enabled { set; get; }
Member Added: public static uint usedHeapSize { get; }
New Type: UnityEngineInternal.Reproduction
Member Added: public Reproduction ();
Member Added: public static void CaptureScreenshot ();
New Type: UnityEngine.LightType
Member Added: Spot
Member Added: Directional
Member Added: Point
Member Added: Area
New Type: UnityEngine.LightRenderMode
Member Added: Auto
Member Added: ForcePixel
Member Added: ForceVertex
New Type: UnityEngine.LightShadows
Member Added: None
Member Added: Hard
Member Added: Soft
New Type: UnityEngine.OcclusionArea
Member Added: public OcclusionArea ();
Member Added: public UnityEngine.Vector3 center { set; get; }
Member Added: public UnityEngine.Vector3 size { set; get; }
New Type: UnityEngine.OcclusionPortal
Member Added: public OcclusionPortal ();
Member Added: public bool open { set; get; }
New Type: UnityEngine.FogMode
Member Added: Linear
Member Added: Exponential
Member Added: ExponentialSquared
New Type: UnityEngine.RenderSettings
Member Added: public RenderSettings ();
Member Added: public static bool fog { set; get; }
Member Added: public static UnityEngine.FogMode fogMode { set; get; }
Member Added: public static UnityEngine.Color fogColor { set; get; }
Member Added: public static float fogDensity { set; get; }
Member Added: public static float fogStartDistance { set; get; }
Member Added: public static float fogEndDistance { set; get; }
Member Added: public static UnityEngine.Color ambientLight { set; get; }
Member Added: public static float haloStrength { set; get; }
Member Added: public static float flareStrength { set; get; }
Member Added: public static UnityEngine.Material skybox { set; get; }
New Type: UnityEngine.QualityLevel
Member Added: Fastest
Member Added: Fast
Member Added: Simple
Member Added: Good
Member Added: Beautiful
Member Added: Fantastic
New Type: UnityEngine.ShadowProjection
Member Added: CloseFit
Member Added: StableFit
New Type: UnityEngine.QualitySettings
Member Added: public QualitySettings ();
Member Added: public static int GetQualityLevel ();
Member Added: public static void SetQualityLevel (int index, bool applyExpensiveChanges);
Member Added: public static void SetQualityLevel (int index);
Member Added: public static void IncreaseLevel (bool applyExpensiveChanges);
Member Added: public static void IncreaseLevel ();
Member Added: public static void DecreaseLevel (bool applyExpensiveChanges);
Member Added: public static void DecreaseLevel ();
Member Added: public static string[] names { get; }
Member Added: public static UnityEngine.QualityLevel currentLevel { set; get; }
Member Added: public static int pixelLightCount { set; get; }
Member Added: public static UnityEngine.ShadowProjection shadowProjection { set; get; }
Member Added: public static int shadowCascades { set; get; }
Member Added: public static float shadowDistance { set; get; }
Member Added: public static int masterTextureLimit { set; get; }
Member Added: public static UnityEngine.AnisotropicFiltering anisotropicFiltering { set; get; }
Member Added: public static float lodBias { set; get; }
Member Added: public static int maximumLODLevel { set; get; }
Member Added: public static bool softVegetation { set; get; }
Member Added: public static int maxQueuedFrames { set; get; }
Member Added: public static int vSyncCount { set; get; }
Member Added: public static int antiAliasing { set; get; }
Member Added: public static UnityEngine.ColorSpace desiredColorSpace { get; }
Member Added: public static UnityEngine.ColorSpace activeColorSpace { get; }
Member Added: public static UnityEngine.BlendWeights blendWeights { set; get; }
New Type: UnityEngine.CameraClearFlags
Member Added: Skybox
Member Added: Color
Member Added: SolidColor
Member Added: Depth
Member Added: Nothing
New Type: UnityEngine.DepthTextureMode
Member Added: None
Member Added: Depth
Member Added: DepthNormals
New Type: UnityEngine.TexGenMode
Member Added: None
Member Added: SphereMap
Member Added: Object
Member Added: EyeLinear
Member Added: CubeReflect
Member Added: CubeNormal
New Type: UnityEngine.Shader
Member Added: public Shader ();
Member Added: public static UnityEngine.Shader Find (string name);
Member Added: public static void EnableKeyword (string keyword);
Member Added: public static void DisableKeyword (string keyword);
Member Added: public static void SetGlobalColor (string propertyName, UnityEngine.Color color);
Member Added: public static void SetGlobalVector (string propertyName, UnityEngine.Vector4 vec);
Member Added: public static void SetGlobalFloat (string propertyName, float value);
Member Added: public static void SetGlobalTexture (string propertyName, UnityEngine.Texture tex);
Member Added: public static void SetGlobalMatrix (string propertyName, UnityEngine.Matrix4x4 mat);
Member Added: public static void SetGlobalTexGenMode (string propertyName, UnityEngine.TexGenMode mode);
Member Added: public static void SetGlobalTextureMatrixName (string propertyName, string matrixName);
Member Added: public static int PropertyToID (string name);
Member Added: public static void WarmupAllShaders ();
Member Added: public bool isSupported { get; }
Member Added: public int maximumLOD { set; get; }
Member Added: public static int globalMaximumLOD { set; get; }
Member Added: public int renderQueue { get; }
New Type: UnityEngine.AnisotropicFiltering
Member Added: Disable
Member Added: Enable
Member Added: ForceEnable
New Type: UnityEngine.BlendWeights
Member Added: OneBone
Member Added: TwoBones
Member Added: FourBones
New Type: UnityEngine.FilterMode
Member Added: Point
Member Added: Bilinear
Member Added: Trilinear
New Type: UnityEngine.TextureWrapMode
Member Added: Repeat
Member Added: Clamp
New Type: UnityEngine.TextureCompressionQuality
Member Added: Fast
Member Added: Normal
Member Added: Best
New Type: UnityEngine.Texture
Member Added: public Texture ();
Member Added: public int GetNativeTextureID ();
Member Added: public static int masterTextureLimit { set; get; }
Member Added: public static UnityEngine.AnisotropicFiltering anisotropicFiltering { set; get; }
Member Added: public virtual int width { set; get; }
Member Added: public virtual int height { set; get; }
Member Added: public UnityEngine.FilterMode filterMode { set; get; }
Member Added: public int anisoLevel { set; get; }
Member Added: public UnityEngine.TextureWrapMode wrapMode { set; get; }
Member Added: public float mipMapBias { set; get; }
Member Added: public UnityEngine.Vector2 texelSize { get; }
New Type: UnityEngine.TextureFormat
Member Added: Alpha8
Member Added: ARGB4444
Member Added: RGB24
Member Added: RGBA32
Member Added: ARGB32
Member Added: RGB565
Member Added: DXT1
Member Added: DXT5
Member Added: PVRTC_2BPP_RGB
Member Added: PVRTC_2BPP_RGBA
Member Added: PVRTC_4BPP_RGB
Member Added: PVRTC_4BPP_RGBA
Member Added: PVRTC_RGB2
Member Added: PVRTC_RGBA2
Member Added: PVRTC_RGB4
Member Added: PVRTC_RGBA4
Member Added: ETC_RGB4
Member Added: ATC_RGB4
Member Added: ATC_RGBA8
Member Added: BGRA32
Member Added: ATF_RGB_DXT1
Member Added: ATF_RGBA_JPG
Member Added: ATF_RGB_JPG
New Type: UnityEngine.Texture2D
Member Added: public Texture2D (int width, int height);
Member Added: public Texture2D (int width, int height, UnityEngine.TextureFormat format, bool mipmap);
Member Added: public Texture2D (int width, int height, UnityEngine.TextureFormat format, bool mipmap, bool linear);
Member Added: public void SetPixel (int x, int y, UnityEngine.Color color);
Member Added: public UnityEngine.Color GetPixel (int x, int y);
Member Added: public UnityEngine.Color GetPixelBilinear (float u, float v);
Member Added: public void SetPixels (UnityEngine.Color[] colors);
Member Added: public void SetPixels (UnityEngine.Color[] colors, int miplevel);
Member Added: public void SetPixels (int x, int y, int blockWidth, int blockHeight, UnityEngine.Color[] colors, int miplevel);
Member Added: public void SetPixels (int x, int y, int blockWidth, int blockHeight, UnityEngine.Color[] colors);
Member Added: public void SetPixels32 (UnityEngine.Color32[] colors, int miplevel);
Member Added: public void SetPixels32 (UnityEngine.Color32[] colors);
Member Added: public bool LoadImage (byte[] data);
Member Added: public UnityEngine.Color[] GetPixels ();
Member Added: public UnityEngine.Color[] GetPixels (int miplevel);
Member Added: public UnityEngine.Color[] GetPixels (int x, int y, int blockWidth, int blockHeight, int miplevel);
Member Added: public UnityEngine.Color[] GetPixels (int x, int y, int blockWidth, int blockHeight);
Member Added: public UnityEngine.Color32[] GetPixels32 (int miplevel);
Member Added: public UnityEngine.Color32[] GetPixels32 ();
Member Added: public void Apply (bool updateMipmaps, bool makeNoLongerReadable);
Member Added: public void Apply (bool updateMipmaps);
Member Added: public void Apply ();
Member Added: public bool Resize (int width, int height, UnityEngine.TextureFormat format, bool hasMipMap);
Member Added: public bool Resize (int width, int height);
Member Added: public void Compress (bool highQuality);
Member Added: public UnityEngine.Rect[] PackTextures (UnityEngine.Texture2D[] textures, int padding, int maximumAtlasSize, bool makeNoLongerReadable);
Member Added: public UnityEngine.Rect[] PackTextures (UnityEngine.Texture2D[] textures, int padding, int maximumAtlasSize);
Member Added: public UnityEngine.Rect[] PackTextures (UnityEngine.Texture2D[] textures, int padding);
Member Added: public void ReadPixels (UnityEngine.Rect source, int destX, int destY, bool recalculateMipMaps);
Member Added: public void ReadPixels (UnityEngine.Rect source, int destX, int destY);
Member Added: public byte[] EncodeToPNG ();
Member Added: public int mipmapCount { get; }
Member Added: public UnityEngine.TextureFormat format { get; }
New Type: UnityEngine.CubemapFace
Member Added: PositiveX
Member Added: NegativeX
Member Added: PositiveY
Member Added: NegativeY
Member Added: PositiveZ
Member Added: NegativeZ
New Type: UnityEngine.Cubemap
Member Added: public Cubemap (int size, UnityEngine.TextureFormat format, bool mipmap);
Member Added: public void SetPixel (UnityEngine.CubemapFace face, int x, int y, UnityEngine.Color color);
Member Added: public UnityEngine.Color GetPixel (UnityEngine.CubemapFace face, int x, int y);
Member Added: public UnityEngine.Color[] GetPixels (UnityEngine.CubemapFace face, int miplevel);
Member Added: public UnityEngine.Color[] GetPixels (UnityEngine.CubemapFace face);
Member Added: public void SetPixels (UnityEngine.Color[] colors, UnityEngine.CubemapFace face, int miplevel);
Member Added: public void SetPixels (UnityEngine.Color[] colors, UnityEngine.CubemapFace face);
Member Added: public void Apply (bool updateMipmaps);
Member Added: public void Apply ();
Member Added: public UnityEngine.TextureFormat format { get; }
New Type: UnityEngine.MeshFilter
Member Added: public MeshFilter ();
Member Added: public UnityEngine.Mesh mesh { set; get; }
Member Added: public UnityEngine.Mesh sharedMesh { set; get; }
New Type: UnityEngine.CombineInstance
Member Added: public UnityEngine.Mesh mesh { set; get; }
Member Added: public int subMeshIndex { set; get; }
Member Added: public UnityEngine.Matrix4x4 transform { set; get; }
New Type: UnityEngine.Mesh
Member Added: public Mesh ();
Member Added: public void Clear ();
Member Added: public void RecalculateBounds ();
Member Added: public void RecalculateNormals ();
Member Added: public void Optimize ();
Member Added: public int[] GetTriangles (int submesh);
Member Added: public void SetTriangles (int[] triangles, int submesh);
Member Added: public void SetTriangleStrip (int[] triangles, int submesh);
Member Added: public int[] GetTriangleStrip (int submesh);
Member Added: public void CombineMeshes (UnityEngine.CombineInstance[] combine, bool mergeSubMeshes, bool useMatrices);
Member Added: public void CombineMeshes (UnityEngine.CombineInstance[] combine, bool mergeSubMeshes);
Member Added: public void CombineMeshes (UnityEngine.CombineInstance[] combine);
Member Added: public UnityEngine.Vector3[] vertices { set; get; }
Member Added: public UnityEngine.Vector3[] normals { set; get; }
Member Added: public UnityEngine.Vector4[] tangents { set; get; }
Member Added: public UnityEngine.Vector2[] uv { set; get; }
Member Added: public UnityEngine.Vector2[] uv2 { set; get; }
Member Added: public UnityEngine.Vector2[] uv1 { set; get; }
Member Added: public UnityEngine.Bounds bounds { set; get; }
Member Added: public UnityEngine.Color[] colors { set; get; }
Member Added: public int[] triangles { set; get; }
Member Added: public int vertexCount { get; }
Member Added: public int subMeshCount { set; get; }
Member Added: public UnityEngine.BoneWeight[] boneWeights { set; get; }
Member Added: public UnityEngine.Matrix4x4[] bindposes { set; get; }
New Type: UnityEngine.BoneWeight
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public static bool op_Equality (UnityEngine.BoneWeight lhs, UnityEngine.BoneWeight rhs);
Member Added: public static bool op_Inequality (UnityEngine.BoneWeight lhs, UnityEngine.BoneWeight rhs);
Member Added: public float weight0 { set; get; }
Member Added: public float weight1 { set; get; }
Member Added: public float weight2 { set; get; }
Member Added: public float weight3 { set; get; }
Member Added: public int boneIndex0 { set; get; }
Member Added: public int boneIndex1 { set; get; }
Member Added: public int boneIndex2 { set; get; }
Member Added: public int boneIndex3 { set; get; }
New Type: UnityEngine.SkinQuality
Member Added: Auto
Member Added: Bone1
Member Added: Bone2
Member Added: Bone4
New Type: UnityEngine.SkinnedMeshRenderer
Member Added: public SkinnedMeshRenderer ();
Member Added: public UnityEngine.Transform[] bones { set; get; }
Member Added: public UnityEngine.SkinQuality quality { set; get; }
Member Added: public UnityEngine.Mesh sharedMesh { set; get; }
Member Added: public bool skinNormals { set; get; }
Member Added: public bool updateWhenOffscreen { set; get; }
Member Added: public UnityEngine.Bounds localBounds { set; get; }
New Type: UnityEngine.Material
Member Added: public Material (string contents);
Member Added: public Material (UnityEngine.Shader shader);
Member Added: public Material (UnityEngine.Material source);
Member Added: public void SetColor (string propertyName, UnityEngine.Color color);
Member Added: public UnityEngine.Color GetColor (string propertyName);
Member Added: public void SetVector (string propertyName, UnityEngine.Vector4 vector);
Member Added: public UnityEngine.Vector4 GetVector (string propertyName);
Member Added: public void SetTexture (string propertyName, UnityEngine.Texture texture);
Member Added: public UnityEngine.Texture GetTexture (string propertyName);
Member Added: public void SetTextureOffset (string propertyName, UnityEngine.Vector2 offset);
Member Added: public UnityEngine.Vector2 GetTextureOffset (string propertyName);
Member Added: public void SetTextureScale (string propertyName, UnityEngine.Vector2 scale);
Member Added: public UnityEngine.Vector2 GetTextureScale (string propertyName);
Member Added: public void SetMatrix (string propertyName, UnityEngine.Matrix4x4 matrix);
Member Added: public UnityEngine.Matrix4x4 GetMatrix (string propertyName);
Member Added: public void SetFloat (string propertyName, float value);
Member Added: public float GetFloat (string propertyName);
Member Added: public bool HasProperty (string propertyName);
Member Added: public string GetTag (string tag, bool searchFallbacks, string defaultValue);
Member Added: public string GetTag (string tag, bool searchFallbacks);
Member Added: public void Lerp (UnityEngine.Material start, UnityEngine.Material end, float t);
Member Added: public bool SetPass (int pass);
Member Added: public static UnityEngine.Material Create (string scriptContents);
Member Added: public void CopyPropertiesFromMaterial (UnityEngine.Material mat);
Member Added: public UnityEngine.Shader shader { set; get; }
Member Added: public UnityEngine.Color color { set; get; }
Member Added: public UnityEngine.Texture mainTexture { set; get; }
Member Added: public UnityEngine.Vector2 mainTextureOffset { set; get; }
Member Added: public UnityEngine.Vector2 mainTextureScale { set; get; }
Member Added: public int passCount { get; }
Member Added: public int renderQueue { set; get; }
New Type: UnityEngine.Flare
Member Added: public Flare ();
New Type: UnityEngine.LensFlare
Member Added: public LensFlare ();
Member Added: public UnityEngine.Flare flare { set; get; }
Member Added: public float brightness { set; get; }
Member Added: public UnityEngine.Color color { set; get; }
New Type: UnityEngine.Renderer
Member Added: public Renderer ();
Member Added: public void SetPropertyBlock (UnityEngine.MaterialPropertyBlock properties);
Member Added: public void Render (int material);
Member Added: public bool isPartOfStaticBatch { get; }
Member Added: public UnityEngine.Matrix4x4 worldToLocalMatrix { get; }
Member Added: public UnityEngine.Matrix4x4 localToWorldMatrix { get; }
Member Added: public bool enabled { set; get; }
Member Added: public bool castShadows { set; get; }
Member Added: public bool receiveShadows { set; get; }
Member Added: public UnityEngine.Material material { set; get; }
Member Added: public UnityEngine.Material sharedMaterial { set; get; }
Member Added: public UnityEngine.Material[] sharedMaterials { set; get; }
Member Added: public UnityEngine.Material[] materials { set; get; }
Member Added: public UnityEngine.Bounds bounds { get; }
Member Added: public int lightmapIndex { set; get; }
Member Added: public UnityEngine.Vector4 lightmapTilingOffset { set; get; }
Member Added: public bool isVisible { get; }
Member Added: public bool useLightProbes { set; get; }
Member Added: public UnityEngine.Transform lightProbeAnchor { set; get; }
New Type: UnityEngine.Projector
Member Added: public Projector ();
Member Added: public float nearClipPlane { set; get; }
Member Added: public float farClipPlane { set; get; }
Member Added: public float fieldOfView { set; get; }
Member Added: public float aspectRatio { set; get; }
Member Added: public bool isOrthoGraphic { set; get; }
Member Added: public bool orthographic { set; get; }
Member Added: public float orthographicSize { set; get; }
Member Added: public float orthoGraphicSize { set; get; }
Member Added: public int ignoreLayers { set; get; }
Member Added: public UnityEngine.Material material { set; get; }
New Type: UnityEngine.Skybox
Member Added: public Skybox ();
Member Added: public UnityEngine.Material material { set; get; }
New Type: UnityEngine.TextMesh
Member Added: public TextMesh ();
Member Added: public string text { set; get; }
Member Added: public UnityEngine.Font font { set; get; }
Member Added: public int fontSize { set; get; }
Member Added: public UnityEngine.FontStyle fontStyle { set; get; }
Member Added: public float offsetZ { set; get; }
Member Added: public UnityEngine.TextAlignment alignment { set; get; }
Member Added: public UnityEngine.TextAnchor anchor { set; get; }
Member Added: public float characterSize { set; get; }
Member Added: public float lineSpacing { set; get; }
Member Added: public float tabSize { set; get; }
New Type: UnityEngine.Particle
Member Added: public UnityEngine.Vector3 position { set; get; }
Member Added: public UnityEngine.Vector3 velocity { set; get; }
Member Added: public float energy { set; get; }
Member Added: public float startEnergy { set; get; }
Member Added: public float size { set; get; }
Member Added: public float rotation { set; get; }
Member Added: public float angularVelocity { set; get; }
Member Added: public UnityEngine.Color color { set; get; }
New Type: UnityEngine.ParticleEmitter
Member Added: public ParticleEmitter ();
Member Added: public void ClearParticles ();
Member Added: public void Emit ();
Member Added: public void Emit (int count);
Member Added: public void Emit (UnityEngine.Vector3 pos, UnityEngine.Vector3 velocity, float size, float energy, UnityEngine.Color color);
Member Added: public void Emit (UnityEngine.Vector3 pos, UnityEngine.Vector3 velocity, float size, float energy, UnityEngine.Color color, float rotation, float angularVelocity);
Member Added: public void Simulate (float deltaTime);
Member Added: public bool emit { set; get; }
Member Added: public float minSize { set; get; }
Member Added: public float maxSize { set; get; }
Member Added: public float minEnergy { set; get; }
Member Added: public float maxEnergy { set; get; }
Member Added: public float minEmission { set; get; }
Member Added: public float maxEmission { set; get; }
Member Added: public float emitterVelocityScale { set; get; }
Member Added: public UnityEngine.Vector3 worldVelocity { set; get; }
Member Added: public UnityEngine.Vector3 localVelocity { set; get; }
Member Added: public UnityEngine.Vector3 rndVelocity { set; get; }
Member Added: public bool useWorldSpace { set; get; }
Member Added: public bool rndRotation { set; get; }
Member Added: public float angularVelocity { set; get; }
Member Added: public float rndAngularVelocity { set; get; }
Member Added: public UnityEngine.Particle[] particles { set; get; }
Member Added: public int particleCount { get; }
Member Added: public bool enabled { set; get; }
New Type: UnityEngine.ParticleAnimator
Member Added: public ParticleAnimator ();
Member Added: public bool doesAnimateColor { set; get; }
Member Added: public UnityEngine.Vector3 worldRotationAxis { set; get; }
Member Added: public UnityEngine.Vector3 localRotationAxis { set; get; }
Member Added: public float sizeGrow { set; get; }
Member Added: public UnityEngine.Vector3 rndForce { set; get; }
Member Added: public UnityEngine.Vector3 force { set; get; }
Member Added: public float damping { set; get; }
Member Added: public bool autodestruct { set; get; }
Member Added: public UnityEngine.Color[] colorAnimation { set; get; }
New Type: UnityEngine.TrailRenderer
Member Added: public TrailRenderer ();
Member Added: public float time { set; get; }
Member Added: public float startWidth { set; get; }
Member Added: public float endWidth { set; get; }
Member Added: public bool autodestruct { set; get; }
New Type: UnityEngine.ParticleRenderMode
Member Added: Billboard
Member Added: Stretch
Member Added: SortedBillboard
Member Added: HorizontalBillboard
Member Added: VerticalBillboard
New Type: UnityEngine.ParticleRenderer
Member Added: public ParticleRenderer ();
Member Added: public UnityEngine.ParticleRenderMode particleRenderMode { set; get; }
Member Added: public float lengthScale { set; get; }
Member Added: public float velocityScale { set; get; }
Member Added: public float cameraVelocityScale { set; get; }
Member Added: public float maxParticleSize { set; get; }
Member Added: public int uvAnimationXTile { set; get; }
Member Added: public int uvAnimationYTile { set; get; }
Member Added: public float uvAnimationCycles { set; get; }
Member Added: public int animatedTextureCount { set; get; }
Member Added: public float maxPartileSize { set; get; }
Member Added: public UnityEngine.Rect[] uvTiles { set; get; }
Member Added: public UnityEngine.AnimationCurve widthCurve { set; get; }
Member Added: public UnityEngine.AnimationCurve heightCurve { set; get; }
Member Added: public UnityEngine.AnimationCurve rotationCurve { set; get; }
New Type: UnityEngine.LineRenderer
Member Added: public LineRenderer ();
Member Added: public void SetWidth (float start, float end);
Member Added: public void SetColors (UnityEngine.Color start, UnityEngine.Color end);
Member Added: public void SetVertexCount (int count);
Member Added: public void SetPosition (int index, UnityEngine.Vector3 position);
Member Added: public bool useWorldSpace { set; get; }
New Type: UnityEngine.MaterialPropertyBlock
Member Added: public MaterialPropertyBlock ();
Member Added: ~MaterialPropertyBlock ();
Member Added: public void AddFloat (string name, float value);
Member Added: public void AddFloat (int nameID, float value);
Member Added: public void AddVector (string name, UnityEngine.Vector4 value);
Member Added: public void AddVector (int nameID, UnityEngine.Vector4 value);
Member Added: public void AddColor (string name, UnityEngine.Color value);
Member Added: public void AddColor (int nameID, UnityEngine.Color value);
Member Added: public void AddMatrix (string name, UnityEngine.Matrix4x4 value);
Member Added: public void AddMatrix (int nameID, UnityEngine.Matrix4x4 value);
Member Added: public void Clear ();
New Type: UnityEngine.RenderBuffer
New Type: UnityEngine.Graphics
Member Added: public Graphics ();
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Material material, int layer, UnityEngine.Camera camera, int submeshIndex);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Material material, int layer, UnityEngine.Camera camera);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Material material, int layer);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Material material, int layer, UnityEngine.Camera camera, int submeshIndex, UnityEngine.MaterialPropertyBlock properties);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, int layer, UnityEngine.Camera camera, int submeshIndex);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, int layer, UnityEngine.Camera camera);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, int layer);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, int layer, UnityEngine.Camera camera, int submeshIndex, UnityEngine.MaterialPropertyBlock properties);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Material material, int layer, UnityEngine.Camera camera, int submeshIndex, UnityEngine.MaterialPropertyBlock properties, bool castShadows, bool receiveShadows);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, int layer, UnityEngine.Camera camera, int submeshIndex, UnityEngine.MaterialPropertyBlock properties, bool castShadows, bool receiveShadows);
Member Added: public static void DrawMeshNow (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation);
Member Added: public static void DrawMeshNow (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, int materialIndex);
Member Added: public static void DrawMeshNow (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix);
Member Added: public static void DrawMeshNow (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, int materialIndex);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, int materialIndex);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix);
Member Added: public static void DrawMesh (UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, int materialIndex);
Member Added: public static void DrawTexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture);
Member Added: public static void DrawTexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, UnityEngine.Material mat);
Member Added: public static void DrawTexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, int leftBorder, int rightBorder, int topBorder, int bottomBorder);
Member Added: public static void DrawTexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, int leftBorder, int rightBorder, int topBorder, int bottomBorder, UnityEngine.Material mat);
Member Added: public static void DrawTexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, UnityEngine.Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder);
Member Added: public static void DrawTexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, UnityEngine.Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder, UnityEngine.Material mat);
Member Added: public static void DrawTexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, UnityEngine.Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder, UnityEngine.Color color);
Member Added: public static void DrawTexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, UnityEngine.Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder, UnityEngine.Color color, UnityEngine.Material mat);
Member Added: public static void Blit (UnityEngine.Texture source, UnityEngine.RenderTexture dest);
Member Added: public static void Blit (UnityEngine.Texture source, UnityEngine.RenderTexture dest, UnityEngine.Material mat);
Member Added: public static void Blit (UnityEngine.Texture source, UnityEngine.RenderTexture dest, UnityEngine.Material mat, int pass);
Member Added: public static void Blit (UnityEngine.Texture source, UnityEngine.Material mat);
Member Added: public static void Blit (UnityEngine.Texture source, UnityEngine.Material mat, int pass);
Member Added: public static void BlitMultiTap (UnityEngine.Texture source, UnityEngine.RenderTexture dest, UnityEngine.Material mat, UnityEngine.Vector2[] offsets);
Member Added: public static void SetRenderTarget (UnityEngine.RenderTexture rt);
Member Added: public static void SetRenderTarget (UnityEngine.RenderBuffer colorBuffer, UnityEngine.RenderBuffer depthBuffer);
Member Added: public static void SetRenderTarget (UnityEngine.RenderBuffer[] colorBuffers, UnityEngine.RenderBuffer depthBuffer);
Member Added: public static UnityEngine.RenderBuffer activeColorBuffer { get; }
Member Added: public static UnityEngine.RenderBuffer activeDepthBuffer { get; }
Member Added: public static string deviceName { get; }
Member Added: public static string deviceVendor { get; }
Member Added: public static string deviceVersion { get; }
Member Added: public static bool supportsVertexProgram { get; }
New Type: UnityEngine.Resolution
Member Added: public int width { set; get; }
Member Added: public int height { set; get; }
Member Added: public int refreshRate { set; get; }
New Type: UnityEngine.LightmapData
Member Added: public LightmapData ();
Member Added: public UnityEngine.Texture2D lightmapFar { set; get; }
Member Added: public UnityEngine.Texture2D lightmap { set; get; }
Member Added: public UnityEngine.Texture2D lightmapNear { set; get; }
New Type: UnityEngine.LightmapsMode
Member Added: Single
Member Added: Dual
Member Added: Directional
New Type: UnityEngine.ColorSpace
Member Added: Uninitialized
Member Added: Gamma
Member Added: Linear
New Type: UnityEngine.LightProbes
Member Added: public LightProbes ();
Member Added: public void GetInterpolatedLightProbe (UnityEngine.Vector3 position, UnityEngine.Renderer renderer, float[] coefficients);
Member Added: public UnityEngine.Vector3[] positions { get; }
Member Added: public float[] coefficients { set; get; }
Member Added: public int count { get; }
Member Added: public int cellCount { get; }
New Type: UnityEngine.LightmapSettings
Member Added: public LightmapSettings ();
Member Added: public static UnityEngine.LightmapData[] lightmaps { set; get; }
Member Added: public static UnityEngine.LightmapsMode lightmapsMode { set; get; }
Member Added: public static UnityEngine.ColorSpace bakedColorSpace { set; get; }
Member Added: public static UnityEngine.LightProbes lightProbes { set; get; }
New Type: UnityEngine.GeometryUtility
Member Added: public GeometryUtility ();
Member Added: public static UnityEngine.Plane[] CalculateFrustumPlanes (UnityEngine.Camera camera);
Member Added: public static UnityEngine.Plane[] CalculateFrustumPlanes (UnityEngine.Matrix4x4 worldToProjectionMatrix);
Member Added: public static bool TestPlanesAABB (UnityEngine.Plane[] planes, UnityEngine.Bounds bounds);
New Type: UnityEngine.ScreenOrientation
Member Added: Unknown
Member Added: Portrait
Member Added: PortraitUpsideDown
Member Added: LandscapeLeft
Member Added: LandscapeRight
Member Added: AutoRotation
Member Added: Landscape
New Type: UnityEngine.Screen
Member Added: public Screen ();
Member Added: public static void SetResolution (int width, int height, bool fullscreen, int preferredRefreshRate);
Member Added: public static void SetResolution (int width, int height, bool fullscreen);
Member Added: public static UnityEngine.Resolution[] resolutions { get; }
Member Added: public static UnityEngine.Resolution[] GetResolution { get; }
Member Added: public static UnityEngine.Resolution currentResolution { get; }
Member Added: public static bool showCursor { set; get; }
Member Added: public static bool lockCursor { set; get; }
Member Added: public static int width { get; }
Member Added: public static int height { get; }
Member Added: public static float dpi { get; }
Member Added: public static bool fullScreen { set; get; }
Member Added: public static bool autorotateToPortrait { set; get; }
Member Added: public static bool autorotateToPortraitUpsideDown { set; get; }
Member Added: public static bool autorotateToLandscapeLeft { set; get; }
Member Added: public static bool autorotateToLandscapeRight { set; get; }
Member Added: public static UnityEngine.ScreenOrientation orientation { set; get; }
Member Added: public static int sleepTimeout { set; get; }
New Type: UnityEngine.SleepTimeout
Member Added: NeverSleep
Member Added: SystemSetting
New Type: UnityEngine.RenderTextureFormat
Member Added: ARGB32
Member Added: Depth
Member Added: ARGBHalf
Member Added: RGB565
Member Added: ARGB4444
Member Added: ARGB1555
Member Added: Default
Member Added: DefaultHDR
New Type: UnityEngine.RenderTextureReadWrite
Member Added: Default
Member Added: Linear
Member Added: sRGB
New Type: UnityEngine.RenderTexture
Member Added: public RenderTexture (int width, int height, int depth, UnityEngine.RenderTextureFormat format, UnityEngine.RenderTextureReadWrite readWrite);
Member Added: public RenderTexture (int width, int height, int depth, UnityEngine.RenderTextureFormat format);
Member Added: public RenderTexture (int width, int height, int depth);
Member Added: public static UnityEngine.RenderTexture GetTemporary (int width, int height, int depthBuffer, UnityEngine.RenderTextureFormat format, UnityEngine.RenderTextureReadWrite readWrite);
Member Added: public static UnityEngine.RenderTexture GetTemporary (int width, int height, int depthBuffer, UnityEngine.RenderTextureFormat format);
Member Added: public static UnityEngine.RenderTexture GetTemporary (int width, int height, int depthBuffer);
Member Added: public static UnityEngine.RenderTexture GetTemporary (int width, int height);
Member Added: public static void ReleaseTemporary (UnityEngine.RenderTexture temp);
Member Added: public bool Create ();
Member Added: public void Release ();
Member Added: public bool IsCreated ();
Member Added: public void DiscardContents ();
Member Added: public void SetGlobalShaderProperty (string propertyName);
Member Added: public UnityEngine.Vector2 GetTexelOffset ();
Member Added: public void SetBorderColor (UnityEngine.Color color);
Member Added: public override int width { set; get; }
Member Added: public override int height { set; get; }
Member Added: public int depth { set; get; }
Member Added: public bool isPowerOfTwo { set; get; }
Member Added: public bool sRGB { get; }
Member Added: public UnityEngine.RenderTextureFormat format { set; get; }
Member Added: public bool useMipMap { set; get; }
Member Added: public bool isCubemap { set; get; }
Member Added: public UnityEngine.RenderBuffer colorBuffer { get; }
Member Added: public UnityEngine.RenderBuffer depthBuffer { get; }
Member Added: public static UnityEngine.RenderTexture active { set; get; }
Member Added: public static bool enabled { set; get; }
New Type: UnityEngine.MovieTexture
Member Added: public MovieTexture ();
Member Added: public void Play ();
Member Added: public void Stop ();
Member Added: public void Pause ();
Member Added: public UnityEngine.AudioClip audioClip { get; }
Member Added: public bool loop { set; get; }
Member Added: public bool isPlaying { get; }
Member Added: public bool isReadyToPlay { get; }
Member Added: public float duration { get; }
New Type: UnityEngine.GL
Member Added: public GL ();
Member Added: public const int TRIANGLES = 4;
Member Added: public const int TRIANGLE_STRIP = 5;
Member Added: public const int QUADS = 7;
Member Added: public const int LINES = 1;
Member Added: public static void Vertex3 (float x, float y, float z);
Member Added: public static void Vertex (UnityEngine.Vector3 v);
Member Added: public static void Color (UnityEngine.Color c);
Member Added: public static void TexCoord (UnityEngine.Vector3 v);
Member Added: public static void TexCoord2 (float x, float y);
Member Added: public static void TexCoord3 (float x, float y, float z);
Member Added: public static void MultiTexCoord2 (int unit, float x, float y);
Member Added: public static void MultiTexCoord3 (int unit, float x, float y, float z);
Member Added: public static void MultiTexCoord (int unit, UnityEngine.Vector3 v);
Member Added: public static void Begin (int mode);
Member Added: public static void End ();
Member Added: public static void LoadOrtho ();
Member Added: public static void LoadPixelMatrix ();
Member Added: public static void LoadPixelMatrix (float left, float right, float bottom, float top);
Member Added: public static void Viewport (UnityEngine.Rect pixelRect);
Member Added: public static void LoadProjectionMatrix (UnityEngine.Matrix4x4 mat);
Member Added: public static void LoadIdentity ();
Member Added: public static void MultMatrix (UnityEngine.Matrix4x4 mat);
Member Added: public static void PushMatrix ();
Member Added: public static void PopMatrix ();
Member Added: public static UnityEngine.Matrix4x4 GetGPUProjectionMatrix (UnityEngine.Matrix4x4 proj, bool renderIntoTexture);
Member Added: public static void SetRevertBackfacing (bool revertBackFaces);
Member Added: public static void Clear (bool clearDepth, bool clearColor, UnityEngine.Color backgroundColor);
Member Added: public static void ClearWithSkybox (bool clearDepth, UnityEngine.Camera camera);
Member Added: public static void InvalidateState ();
Member Added: public static void IssuePluginEvent (int eventID);
Member Added: public static UnityEngine.Matrix4x4 modelview { set; get; }
New Type: UnityEngine.GUIElement
Member Added: public GUIElement ();
Member Added: public bool HitTest (UnityEngine.Vector3 screenPosition, UnityEngine.Camera camera);
Member Added: public bool HitTest (UnityEngine.Vector3 screenPosition);
Member Added: public UnityEngine.Rect GetScreenRect (UnityEngine.Camera camera);
Member Added: public UnityEngine.Rect GetScreenRect ();
New Type: UnityEngine.GUITexture
Member Added: public GUITexture ();
Member Added: public UnityEngine.Color color { set; get; }
Member Added: public UnityEngine.Texture texture { set; get; }
Member Added: public UnityEngine.Rect pixelInset { set; get; }
New Type: UnityEngine.TextAlignment
Member Added: Left
Member Added: Center
Member Added: Right
New Type: UnityEngine.TextAnchor
Member Added: UpperLeft
Member Added: UpperCenter
Member Added: UpperRight
Member Added: MiddleLeft
Member Added: MiddleCenter
Member Added: MiddleRight
Member Added: LowerLeft
Member Added: LowerCenter
Member Added: LowerRight
New Type: UnityEngine.GUIText
Member Added: public GUIText ();
Member Added: public string text { set; get; }
Member Added: public UnityEngine.Material material { set; get; }
Member Added: public UnityEngine.Vector2 pixelOffset { set; get; }
Member Added: public UnityEngine.Font font { set; get; }
Member Added: public UnityEngine.TextAlignment alignment { set; get; }
Member Added: public UnityEngine.TextAnchor anchor { set; get; }
Member Added: public float lineSpacing { set; get; }
Member Added: public float tabSize { set; get; }
Member Added: public int fontSize { set; get; }
Member Added: public UnityEngine.FontStyle fontStyle { set; get; }
New Type: UnityEngine.Font
Member Added: public Font ();
Member Added: public bool HasCharacter (char c);
Member Added: public UnityEngine.Material material { set; get; }
Member Added: public string[] fontNames { set; get; }
New Type: UnityEngine.GUILayer
Member Added: public GUILayer ();
Member Added: public UnityEngine.GUIElement HitTest (UnityEngine.Vector3 screenPosition);
New Type: UnityEngine.MeshRenderer
Member Added: public MeshRenderer ();
New Type: UnityEngine.StaticBatchingUtility
Member Added: public StaticBatchingUtility ();
Member Added: public static void Combine (UnityEngine.GameObject staticBatchRoot);
Member Added: public static void Combine (UnityEngine.GameObject[] gos, UnityEngine.GameObject staticBatchRoot);
New Type: UnityEngine.ImageEffectTransformsToLDR
Member Added: public ImageEffectTransformsToLDR ();
New Type: UnityEngine.ImageEffectOpaque
Member Added: public ImageEffectOpaque ();
New Type: UnityEngine.LODGroup
Member Added: public LODGroup ();
Member Added: public UnityEngine.Vector3 localReferencePoint { set; get; }
Member Added: public float size { set; get; }
Member Added: public int lodCount { get; }
New Type: UnityEngine.ScaleMode
Member Added: StretchToFill
Member Added: ScaleAndCrop
Member Added: ScaleToFit
New Type: UnityEngine.GUI
Member Added: public GUI ();
Member Added: public static void Label (UnityEngine.Rect position, string text);
Member Added: public static void Label (UnityEngine.Rect position, UnityEngine.Texture image);
Member Added: public static void Label (UnityEngine.Rect position, UnityEngine.GUIContent content);
Member Added: public static void Label (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static void Label (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.GUIStyle style);
Member Added: public static void Label (UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static void DrawTexture (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.ScaleMode scaleMode, bool alphaBlend);
Member Added: public static void DrawTexture (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.ScaleMode scaleMode);
Member Added: public static void DrawTexture (UnityEngine.Rect position, UnityEngine.Texture image);
Member Added: public static void DrawTexture (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.ScaleMode scaleMode, bool alphaBlend, float imageAspect);
Member Added: public static void DrawTextureWithTexCoords (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.Rect texCoords);
Member Added: public static void DrawTextureWithTexCoords (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.Rect texCoords, bool alphaBlend);
Member Added: public static void Box (UnityEngine.Rect position, string text);
Member Added: public static void Box (UnityEngine.Rect position, UnityEngine.Texture image);
Member Added: public static void Box (UnityEngine.Rect position, UnityEngine.GUIContent content);
Member Added: public static void Box (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static void Box (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.GUIStyle style);
Member Added: public static void Box (UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static bool Button (UnityEngine.Rect position, string text);
Member Added: public static bool Button (UnityEngine.Rect position, UnityEngine.Texture image);
Member Added: public static bool Button (UnityEngine.Rect position, UnityEngine.GUIContent content);
Member Added: public static bool Button (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static bool Button (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.GUIStyle style);
Member Added: public static bool Button (UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static bool RepeatButton (UnityEngine.Rect position, string text);
Member Added: public static bool RepeatButton (UnityEngine.Rect position, UnityEngine.Texture image);
Member Added: public static bool RepeatButton (UnityEngine.Rect position, UnityEngine.GUIContent content);
Member Added: public static bool RepeatButton (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static bool RepeatButton (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.GUIStyle style);
Member Added: public static bool RepeatButton (UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static string TextField (UnityEngine.Rect position, string text);
Member Added: public static string TextField (UnityEngine.Rect position, string text, int maxLength);
Member Added: public static string TextField (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static string TextField (UnityEngine.Rect position, string text, int maxLength, UnityEngine.GUIStyle style);
Member Added: public static string PasswordField (UnityEngine.Rect position, string password, char maskChar);
Member Added: public static string PasswordField (UnityEngine.Rect position, string password, char maskChar, int maxLength);
Member Added: public static string PasswordField (UnityEngine.Rect position, string password, char maskChar, UnityEngine.GUIStyle style);
Member Added: public static string PasswordField (UnityEngine.Rect position, string password, char maskChar, int maxLength, UnityEngine.GUIStyle style);
Member Added: public static string TextArea (UnityEngine.Rect position, string text);
Member Added: public static string TextArea (UnityEngine.Rect position, string text, int maxLength);
Member Added: public static string TextArea (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static string TextArea (UnityEngine.Rect position, string text, int maxLength, UnityEngine.GUIStyle style);
Member Added: public static void SetNextControlName (string name);
Member Added: public static string GetNameOfFocusedControl ();
Member Added: public static void FocusControl (string name);
Member Added: public static bool Toggle (UnityEngine.Rect position, bool value, string text);
Member Added: public static bool Toggle (UnityEngine.Rect position, bool value, UnityEngine.Texture image);
Member Added: public static bool Toggle (UnityEngine.Rect position, bool value, UnityEngine.GUIContent content);
Member Added: public static bool Toggle (UnityEngine.Rect position, bool value, string text, UnityEngine.GUIStyle style);
Member Added: public static bool Toggle (UnityEngine.Rect position, bool value, UnityEngine.Texture image, UnityEngine.GUIStyle style);
Member Added: public static bool Toggle (UnityEngine.Rect position, bool value, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: protected static bool DoToggle (UnityEngine.Rect position, int id, bool value, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static int Toolbar (UnityEngine.Rect position, int selected, string[] texts);
Member Added: public static int Toolbar (UnityEngine.Rect position, int selected, UnityEngine.Texture[] images);
Member Added: public static int Toolbar (UnityEngine.Rect position, int selected, UnityEngine.GUIContent[] content);
Member Added: public static int Toolbar (UnityEngine.Rect position, int selected, string[] texts, UnityEngine.GUIStyle style);
Member Added: public static int Toolbar (UnityEngine.Rect position, int selected, UnityEngine.Texture[] images, UnityEngine.GUIStyle style);
Member Added: public static int Toolbar (UnityEngine.Rect position, int selected, UnityEngine.GUIContent[] contents, UnityEngine.GUIStyle style);
Member Added: public static int SelectionGrid (UnityEngine.Rect position, int selected, string[] texts, int xCount);
Member Added: public static int SelectionGrid (UnityEngine.Rect position, int selected, UnityEngine.Texture[] images, int xCount);
Member Added: public static int SelectionGrid (UnityEngine.Rect position, int selected, UnityEngine.GUIContent[] content, int xCount);
Member Added: public static int SelectionGrid (UnityEngine.Rect position, int selected, string[] texts, int xCount, UnityEngine.GUIStyle style);
Member Added: public static int SelectionGrid (UnityEngine.Rect position, int selected, UnityEngine.Texture[] images, int xCount, UnityEngine.GUIStyle style);
Member Added: public static int SelectionGrid (UnityEngine.Rect position, int selected, UnityEngine.GUIContent[] contents, int xCount, UnityEngine.GUIStyle style);
Member Added: public static float HorizontalSlider (UnityEngine.Rect position, float value, float leftValue, float rightValue);
Member Added: public static float HorizontalSlider (UnityEngine.Rect position, float value, float leftValue, float rightValue, UnityEngine.GUIStyle slider, UnityEngine.GUIStyle thumb);
Member Added: public static float VerticalSlider (UnityEngine.Rect position, float value, float topValue, float bottomValue);
Member Added: public static float VerticalSlider (UnityEngine.Rect position, float value, float topValue, float bottomValue, UnityEngine.GUIStyle slider, UnityEngine.GUIStyle thumb);
Member Added: public static float Slider (UnityEngine.Rect position, float value, float size, float start, float end, UnityEngine.GUIStyle slider, UnityEngine.GUIStyle thumb, bool horiz, int id);
Member Added: public static float HorizontalScrollbar (UnityEngine.Rect position, float value, float size, float leftValue, float rightValue);
Member Added: public static float HorizontalScrollbar (UnityEngine.Rect position, float value, float size, float leftValue, float rightValue, UnityEngine.GUIStyle style);
Member Added: public static float VerticalScrollbar (UnityEngine.Rect position, float value, float size, float topValue, float bottomValue);
Member Added: public static float VerticalScrollbar (UnityEngine.Rect position, float value, float size, float topValue, float bottomValue, UnityEngine.GUIStyle style);
Member Added: public static void BeginGroup (UnityEngine.Rect position);
Member Added: public static void BeginGroup (UnityEngine.Rect position, string text);
Member Added: public static void BeginGroup (UnityEngine.Rect position, UnityEngine.Texture image);
Member Added: public static void BeginGroup (UnityEngine.Rect position, UnityEngine.GUIContent content);
Member Added: public static void BeginGroup (UnityEngine.Rect position, UnityEngine.GUIStyle style);
Member Added: public static void BeginGroup (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static void BeginGroup (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.GUIStyle style);
Member Added: public static void BeginGroup (UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static void EndGroup ();
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Rect position, UnityEngine.Vector2 scrollPosition, UnityEngine.Rect viewRect);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Rect position, UnityEngine.Vector2 scrollPosition, UnityEngine.Rect viewRect, bool alwaysShowHorizontal, bool alwaysShowVertical);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Rect position, UnityEngine.Vector2 scrollPosition, UnityEngine.Rect viewRect, UnityEngine.GUIStyle horizontalScrollbar, UnityEngine.GUIStyle verticalScrollbar);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Rect position, UnityEngine.Vector2 scrollPosition, UnityEngine.Rect viewRect, bool alwaysShowHorizontal, bool alwaysShowVertical, UnityEngine.GUIStyle horizontalScrollbar, UnityEngine.GUIStyle verticalScrollbar);
Member Added: protected static UnityEngine.Vector2 DoBeginScrollView (UnityEngine.Rect position, UnityEngine.Vector2 scrollPosition, UnityEngine.Rect viewRect, bool alwaysShowHorizontal, bool alwaysShowVertical, UnityEngine.GUIStyle horizontalScrollbar, UnityEngine.GUIStyle verticalScrollbar, UnityEngine.GUIStyle background);
Member Added: public static void EndScrollView ();
Member Added: public static void EndScrollView (bool handleScrollWheel);
Member Added: public static void ScrollTo (UnityEngine.Rect position);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect clientRect, UnityEngine.GUI.WindowFunction func, string text);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect clientRect, UnityEngine.GUI.WindowFunction func, UnityEngine.Texture image);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect clientRect, UnityEngine.GUI.WindowFunction func, UnityEngine.GUIContent content);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect clientRect, UnityEngine.GUI.WindowFunction func, string text, UnityEngine.GUIStyle style);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect clientRect, UnityEngine.GUI.WindowFunction func, UnityEngine.Texture image, UnityEngine.GUIStyle style);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect clientRect, UnityEngine.GUI.WindowFunction func, UnityEngine.GUIContent title, UnityEngine.GUIStyle style);
Member Added: public static void DragWindow (UnityEngine.Rect position);
Member Added: public static void DragWindow ();
Member Added: public static void BringWindowToFront (int windowID);
Member Added: public static void BringWindowToBack (int windowID);
Member Added: public static void FocusWindow (int windowID);
Member Added: public static void UnfocusWindow ();
Member Added: public static UnityEngine.GUISkin skin { set; get; }
Member Added: public static UnityEngine.Color color { set; get; }
Member Added: public static UnityEngine.Color backgroundColor { set; get; }
Member Added: public static UnityEngine.Color contentColor { set; get; }
Member Added: public static bool changed { set; get; }
Member Added: public static bool enabled { set; get; }
Member Added: public static UnityEngine.Matrix4x4 matrix { set; get; }
Member Added: public static string tooltip { set; get; }
Member Added: protected static string mouseTooltip { get; }
Member Added: protected static UnityEngine.Rect tooltipRect { set; get; }
Member Added: public static int depth { set; get; }
New Type: UnityEngine.GUI/WindowFunction
New Type: UnityEngine.GUILayout
Member Added: public GUILayout ();
Member Added: public static void Label (UnityEngine.Texture image, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Label (string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Label (UnityEngine.GUIContent content, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Label (UnityEngine.Texture image, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Label (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Label (UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Box (UnityEngine.Texture image, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Box (string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Box (UnityEngine.GUIContent content, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Box (UnityEngine.Texture image, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Box (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Box (UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Button (UnityEngine.Texture image, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Button (string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Button (UnityEngine.GUIContent content, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Button (UnityEngine.Texture image, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Button (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Button (UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool RepeatButton (UnityEngine.Texture image, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool RepeatButton (string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool RepeatButton (UnityEngine.GUIContent content, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool RepeatButton (UnityEngine.Texture image, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool RepeatButton (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool RepeatButton (UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextField (string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextField (string text, int maxLength, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextField (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextField (string text, int maxLength, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string PasswordField (string password, char maskChar, UnityEngine.GUILayoutOption[] options);
Member Added: public static string PasswordField (string password, char maskChar, int maxLength, UnityEngine.GUILayoutOption[] options);
Member Added: public static string PasswordField (string password, char maskChar, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string PasswordField (string password, char maskChar, int maxLength, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextArea (string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextArea (string text, int maxLength, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextArea (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextArea (string text, int maxLength, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (bool value, UnityEngine.Texture image, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (bool value, string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (bool value, UnityEngine.GUIContent content, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (bool value, UnityEngine.Texture image, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (bool value, string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (bool value, UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Toolbar (int selected, string[] texts, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Toolbar (int selected, UnityEngine.Texture[] images, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Toolbar (int selected, UnityEngine.GUIContent[] content, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Toolbar (int selected, string[] texts, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Toolbar (int selected, UnityEngine.Texture[] images, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Toolbar (int selected, UnityEngine.GUIContent[] contents, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int SelectionGrid (int selected, string[] texts, int xCount, UnityEngine.GUILayoutOption[] options);
Member Added: public static int SelectionGrid (int selected, UnityEngine.Texture[] images, int xCount, UnityEngine.GUILayoutOption[] options);
Member Added: public static int SelectionGrid (int selected, UnityEngine.GUIContent[] content, int xCount, UnityEngine.GUILayoutOption[] options);
Member Added: public static int SelectionGrid (int selected, string[] texts, int xCount, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int SelectionGrid (int selected, UnityEngine.Texture[] images, int xCount, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int SelectionGrid (int selected, UnityEngine.GUIContent[] contents, int xCount, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static float HorizontalSlider (float value, float leftValue, float rightValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static float HorizontalSlider (float value, float leftValue, float rightValue, UnityEngine.GUIStyle slider, UnityEngine.GUIStyle thumb, UnityEngine.GUILayoutOption[] options);
Member Added: public static float VerticalSlider (float value, float leftValue, float rightValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static float VerticalSlider (float value, float leftValue, float rightValue, UnityEngine.GUIStyle slider, UnityEngine.GUIStyle thumb, UnityEngine.GUILayoutOption[] options);
Member Added: public static float HorizontalScrollbar (float value, float size, float leftValue, float rightValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static float HorizontalScrollbar (float value, float size, float leftValue, float rightValue, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static float VerticalScrollbar (float value, float size, float topValue, float bottomValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static float VerticalScrollbar (float value, float size, float topValue, float bottomValue, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Space (float pixels);
Member Added: public static void FlexibleSpace ();
Member Added: public static void BeginHorizontal (UnityEngine.GUILayoutOption[] options);
Member Added: public static void BeginHorizontal (UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void BeginHorizontal (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void BeginHorizontal (UnityEngine.Texture image, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void BeginHorizontal (UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void EndHorizontal ();
Member Added: public static void BeginVertical (UnityEngine.GUILayoutOption[] options);
Member Added: public static void BeginVertical (UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void BeginVertical (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void BeginVertical (UnityEngine.Texture image, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void BeginVertical (UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void EndVertical ();
Member Added: public static void BeginArea (UnityEngine.Rect screenRect);
Member Added: public static void BeginArea (UnityEngine.Rect screenRect, string text);
Member Added: public static void BeginArea (UnityEngine.Rect screenRect, UnityEngine.Texture image);
Member Added: public static void BeginArea (UnityEngine.Rect screenRect, UnityEngine.GUIContent content);
Member Added: public static void BeginArea (UnityEngine.Rect screenRect, UnityEngine.GUIStyle style);
Member Added: public static void BeginArea (UnityEngine.Rect screenRect, string text, UnityEngine.GUIStyle style);
Member Added: public static void BeginArea (UnityEngine.Rect screenRect, UnityEngine.Texture image, UnityEngine.GUIStyle style);
Member Added: public static void BeginArea (UnityEngine.Rect screenRect, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static void EndArea ();
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, bool alwaysShowHorizontal, bool alwaysShowVertical, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, UnityEngine.GUIStyle horizontalScrollbar, UnityEngine.GUIStyle verticalScrollbar, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, bool alwaysShowHorizontal, bool alwaysShowVertical, UnityEngine.GUIStyle horizontalScrollbar, UnityEngine.GUIStyle verticalScrollbar, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, bool alwaysShowHorizontal, bool alwaysShowVertical, UnityEngine.GUIStyle horizontalScrollbar, UnityEngine.GUIStyle verticalScrollbar, UnityEngine.GUIStyle background, UnityEngine.GUILayoutOption[] options);
Member Added: public static void EndScrollView ();
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect screenRect, UnityEngine.GUI.WindowFunction func, string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect screenRect, UnityEngine.GUI.WindowFunction func, UnityEngine.Texture image, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect screenRect, UnityEngine.GUI.WindowFunction func, UnityEngine.GUIContent content, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect screenRect, UnityEngine.GUI.WindowFunction func, string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect screenRect, UnityEngine.GUI.WindowFunction func, UnityEngine.Texture image, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect Window (int id, UnityEngine.Rect screenRect, UnityEngine.GUI.WindowFunction func, UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.GUILayoutOption Width (float width);
Member Added: public static UnityEngine.GUILayoutOption MinWidth (float minWidth);
Member Added: public static UnityEngine.GUILayoutOption MaxWidth (float maxWidth);
Member Added: public static UnityEngine.GUILayoutOption Height (float height);
Member Added: public static UnityEngine.GUILayoutOption MinHeight (float minHeight);
Member Added: public static UnityEngine.GUILayoutOption MaxHeight (float maxHeight);
Member Added: public static UnityEngine.GUILayoutOption ExpandWidth (bool expand);
Member Added: public static UnityEngine.GUILayoutOption ExpandHeight (bool expand);
New Type: UnityEngine.GUILayoutUtility
Member Added: public GUILayoutUtility ();
Member Added: public static void BeginGroup (string GroupName);
Member Added: public static void EndGroup (string groupName);
Member Added: public static UnityEngine.Rect GetRect (UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static UnityEngine.Rect GetRect (UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect GetRect (float width, float height);
Member Added: public static UnityEngine.Rect GetRect (float width, float height, UnityEngine.GUIStyle style);
Member Added: public static UnityEngine.Rect GetRect (float width, float height, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect GetRect (float width, float height, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect GetRect (float minWidth, float maxWidth, float minHeight, float maxHeight);
Member Added: public static UnityEngine.Rect GetRect (float minWidth, float maxWidth, float minHeight, float maxHeight, UnityEngine.GUIStyle style);
Member Added: public static UnityEngine.Rect GetRect (float minWidth, float maxWidth, float minHeight, float maxHeight, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect GetRect (float minWidth, float maxWidth, float minHeight, float maxHeight, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect GetLastRect ();
Member Added: public static UnityEngine.Rect GetAspectRect (float aspect);
Member Added: public static UnityEngine.Rect GetAspectRect (float aspect, UnityEngine.GUIStyle style);
Member Added: public static UnityEngine.Rect GetAspectRect (float aspect, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect GetAspectRect (float aspect, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
New Type: UnityEngine.GUILayoutOption
New Type: UnityEngine.ExitGUIException
Member Added: public ExitGUIException ();
New Type: UnityEngine.FocusType
Member Added: Native
Member Added: Keyboard
Member Added: Passive
New Type: UnityEngine.GUIUtility
Member Added: public GUIUtility ();
Member Added: protected static int s_KeyboardControl;
Member Added: public static bool s_LogControlID;
Member Added: public static int GetControlID (UnityEngine.FocusType focus);
Member Added: public static int GetControlID (int hint, UnityEngine.FocusType focus);
Member Added: public static int GetControlID (UnityEngine.GUIContent contents, UnityEngine.FocusType focus);
Member Added: public static int GetControlID (UnityEngine.FocusType focus, UnityEngine.Rect position);
Member Added: public static int GetControlID (int hint, UnityEngine.FocusType focus, UnityEngine.Rect position);
Member Added: public static int GetControlID (UnityEngine.GUIContent contents, UnityEngine.FocusType focus, UnityEngine.Rect position);
Member Added: public static object GetStateObject (Type t, int controlID);
Member Added: public static object QueryStateObject (Type t, int controlID);
Member Added: protected static void SkipToControlID (int id);
Member Added: public static void UpdateUndoName ();
Member Added: public static void ExitGUI ();
Member Added: protected static void MoveNextAndScroll (bool forward);
Member Added: protected static void MoveKeyboardFocus (int ID, bool moveForward, bool sendToNextScriptIfNeeded);
Member Added: public static UnityEngine.Vector2 GUIToScreenPoint (UnityEngine.Vector2 guiPoint);
Member Added: public static UnityEngine.Vector2 ScreenToGUIPoint (UnityEngine.Vector2 screenPoint);
Member Added: public static void RotateAroundPivot (float angle, UnityEngine.Vector2 pivotPoint);
Member Added: public static void ScaleAroundPivot (UnityEngine.Vector2 scale, UnityEngine.Vector2 pivotPoint);
Member Added: public static int hotControl { set; get; }
Member Added: public static int keyboardControl { set; get; }
New Type: UnityEngine.ImagePosition
Member Added: ImageLeft
Member Added: ImageAbove
Member Added: ImageOnly
Member Added: TextOnly
New Type: UnityEngine.GUIContent
Member Added: public GUIContent ();
Member Added: public GUIContent (string text);
Member Added: public GUIContent (UnityEngine.Texture image);
Member Added: public GUIContent (string text, UnityEngine.Texture image);
Member Added: public GUIContent (string text, string tooltip);
Member Added: public GUIContent (UnityEngine.Texture image, string tooltip);
Member Added: public GUIContent (string text, UnityEngine.Texture image, string tooltip);
Member Added: public GUIContent (UnityEngine.GUIContent src);
Member Added: public static UnityEngine.GUIContent none;
Member Added: public string text { set; get; }
Member Added: public UnityEngine.Texture image { set; get; }
Member Added: public string tooltip { set; get; }
New Type: UnityEngine.GUIStyleState
Member Added: public GUIStyleState ();
Member Added: public UnityEngine.Texture2D background { set; get; }
Member Added: public UnityEngine.Color textColor { set; get; }
New Type: UnityEngine.RectOffset
Member Added: public RectOffset ();
Member Added: public RectOffset (int left, int right, int top, int bottom);
Member Added: public UnityEngine.Rect Add (UnityEngine.Rect rect);
Member Added: public UnityEngine.Rect Remove (UnityEngine.Rect rect);
Member Added: public override string ToString ();
Member Added: public int left { set; get; }
Member Added: public int right { set; get; }
Member Added: public int top { set; get; }
Member Added: public int bottom { set; get; }
Member Added: public int horizontal { get; }
Member Added: public int vertical { get; }
New Type: UnityEngine.FontStyle
Member Added: Normal
Member Added: Bold
Member Added: Italic
Member Added: BoldAndItalic
New Type: UnityEngine.GUIStyle
Member Added: public GUIStyle ();
Member Added: public GUIStyle (UnityEngine.GUIStyle other);
Member Added: ~GUIStyle ();
Member Added: public void Draw (UnityEngine.Rect position, bool isHover, bool isActive, bool on, bool hasKeyboardFocus);
Member Added: public void Draw (UnityEngine.Rect position, string text, bool isHover, bool isActive, bool on, bool hasKeyboardFocus);
Member Added: public void Draw (UnityEngine.Rect position, UnityEngine.Texture image, bool isHover, bool isActive, bool on, bool hasKeyboardFocus);
Member Added: public void Draw (UnityEngine.Rect position, UnityEngine.GUIContent content, bool isHover, bool isActive, bool on, bool hasKeyboardFocus);
Member Added: public void Draw (UnityEngine.Rect position, UnityEngine.GUIContent content, int controlID);
Member Added: public void Draw (UnityEngine.Rect position, UnityEngine.GUIContent content, int controlID, bool on);
Member Added: public void DrawCursor (UnityEngine.Rect position, UnityEngine.GUIContent content, int controlID, int Character);
Member Added: public void DrawWithTextSelection (UnityEngine.Rect position, UnityEngine.GUIContent content, int controlID, int firstSelectedCharacter, int lastSelectedCharacter);
Member Added: public UnityEngine.Vector2 GetCursorPixelPosition (UnityEngine.Rect position, UnityEngine.GUIContent content, int cursorStringIndex);
Member Added: public int GetCursorStringIndex (UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.Vector2 cursorPixelPosition);
Member Added: public UnityEngine.Vector2 CalcSize (UnityEngine.GUIContent content);
Member Added: public UnityEngine.Vector2 CalcScreenSize (UnityEngine.Vector2 contentSize);
Member Added: public float CalcHeight (UnityEngine.GUIContent content, float width);
Member Added: public void CalcMinMaxWidth (UnityEngine.GUIContent content, out float minWidth, out float maxWidth);
Member Added: public override string ToString ();
Member Added: public static UnityEngine.GUIStyle op_Implicit (string str);
Member Added: public string name { set; get; }
Member Added: public UnityEngine.GUIStyleState normal { set; get; }
Member Added: public UnityEngine.GUIStyleState hover { set; get; }
Member Added: public UnityEngine.GUIStyleState active { set; get; }
Member Added: public UnityEngine.GUIStyleState onNormal { set; get; }
Member Added: public UnityEngine.GUIStyleState onHover { set; get; }
Member Added: public UnityEngine.GUIStyleState onActive { set; get; }
Member Added: public UnityEngine.GUIStyleState focused { set; get; }
Member Added: public UnityEngine.GUIStyleState onFocused { set; get; }
Member Added: public UnityEngine.RectOffset border { set; get; }
Member Added: public UnityEngine.RectOffset margin { set; get; }
Member Added: public UnityEngine.RectOffset padding { set; get; }
Member Added: public UnityEngine.RectOffset overflow { set; get; }
Member Added: public UnityEngine.Font font { set; get; }
Member Added: public UnityEngine.ImagePosition imagePosition { set; get; }
Member Added: public UnityEngine.TextAnchor alignment { set; get; }
Member Added: public bool wordWrap { set; get; }
Member Added: public UnityEngine.TextClipping clipping { set; get; }
Member Added: public UnityEngine.Vector2 contentOffset { set; get; }
Member Added: public UnityEngine.Vector2 clipOffset { set; get; }
Member Added: public float fixedWidth { set; get; }
Member Added: public int fontSize { set; get; }
Member Added: public UnityEngine.FontStyle fontStyle { set; get; }
Member Added: public float fixedHeight { set; get; }
Member Added: public bool stretchWidth { set; get; }
Member Added: public bool stretchHeight { set; get; }
Member Added: public float lineHeight { get; }
Member Added: public static UnityEngine.GUIStyle none { get; }
Member Added: public bool isHeightDependantOnWidth { get; }
New Type: UnityEngine.GUISettings
Member Added: public GUISettings ();
Member Added: public bool doubleClickSelectsWord { set; get; }
Member Added: public bool tripleClickSelectsLine { set; get; }
Member Added: public UnityEngine.Color cursorColor { set; get; }
Member Added: public float cursorFlashSpeed { set; get; }
Member Added: public UnityEngine.Color selectionColor { set; get; }
New Type: UnityEngine.GUISkin
Member Added: public GUISkin ();
Member Added: public UnityEngine.GUIStyle GetStyle (string styleName);
Member Added: public UnityEngine.GUIStyle FindStyle (string styleName);
Member Added: public System.Collections.IEnumerator GetEnumerator ();
Member Added: public UnityEngine.Font font { set; get; }
Member Added: public UnityEngine.GUIStyle box { set; get; }
Member Added: public UnityEngine.GUIStyle label { set; get; }
Member Added: public UnityEngine.GUIStyle textField { set; get; }
Member Added: public UnityEngine.GUIStyle textArea { set; get; }
Member Added: public UnityEngine.GUIStyle button { set; get; }
Member Added: public UnityEngine.GUIStyle toggle { set; get; }
Member Added: public UnityEngine.GUIStyle window { set; get; }
Member Added: public UnityEngine.GUIStyle horizontalSlider { set; get; }
Member Added: public UnityEngine.GUIStyle horizontalSliderThumb { set; get; }
Member Added: public UnityEngine.GUIStyle verticalSlider { set; get; }
Member Added: public UnityEngine.GUIStyle verticalSliderThumb { set; get; }
Member Added: public UnityEngine.GUIStyle horizontalScrollbar { set; get; }
Member Added: public UnityEngine.GUIStyle horizontalScrollbarThumb { set; get; }
Member Added: public UnityEngine.GUIStyle horizontalScrollbarLeftButton { set; get; }
Member Added: public UnityEngine.GUIStyle horizontalScrollbarRightButton { set; get; }
Member Added: public UnityEngine.GUIStyle verticalScrollbar { set; get; }
Member Added: public UnityEngine.GUIStyle verticalScrollbarThumb { set; get; }
Member Added: public UnityEngine.GUIStyle verticalScrollbarUpButton { set; get; }
Member Added: public UnityEngine.GUIStyle verticalScrollbarDownButton { set; get; }
Member Added: public UnityEngine.GUIStyle scrollView { set; get; }
Member Added: public UnityEngine.GUIStyle[] customStyles { set; get; }
Member Added: public UnityEngine.GUISettings settings { get; }
New Type: UnityEngine.FullScreenMovieControlMode
Member Added: Full
Member Added: Minimal
Member Added: CancelOnInput
Member Added: Hidden
New Type: UnityEngine.FullScreenMovieScalingMode
Member Added: None
Member Added: AspectFit
Member Added: AspectFill
Member Added: Fill
New Type: UnityEngine.Handheld
Member Added: public Handheld ();
Member Added: public static bool PlayFullScreenMovie (string path, UnityEngine.Color bgColor, UnityEngine.FullScreenMovieControlMode controlMode, UnityEngine.FullScreenMovieScalingMode scalingMode);
Member Added: public static bool PlayFullScreenMovie (string path, UnityEngine.Color bgColor, UnityEngine.FullScreenMovieControlMode controlMode);
Member Added: public static bool PlayFullScreenMovie (string path, UnityEngine.Color bgColor);
Member Added: public static bool PlayFullScreenMovie (string path);
Member Added: public static void Vibrate ();
Member Added: public static bool use32BitDisplayBuffer { set; get; }
New Type: UnityEngine.TouchScreenKeyboardType
Member Added: Default
Member Added: ASCIICapable
Member Added: NumbersAndPunctuation
Member Added: URL
Member Added: NumberPad
Member Added: PhonePad
Member Added: NamePhonePad
Member Added: EmailAddress
New Type: UnityEngine.TouchScreenKeyboard
Member Added: public TouchScreenKeyboard (string text, UnityEngine.TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure, bool alert, string textPlaceholder);
Member Added: ~TouchScreenKeyboard ();
Member Added: public static UnityEngine.TouchScreenKeyboard Open (string text, UnityEngine.TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure, bool alert);
Member Added: public static UnityEngine.TouchScreenKeyboard Open (string text, UnityEngine.TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure);
Member Added: public static UnityEngine.TouchScreenKeyboard Open (string text, UnityEngine.TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline);
Member Added: public static UnityEngine.TouchScreenKeyboard Open (string text, UnityEngine.TouchScreenKeyboardType keyboardType, bool autocorrection);
Member Added: public static UnityEngine.TouchScreenKeyboard Open (string text, UnityEngine.TouchScreenKeyboardType keyboardType);
Member Added: public static UnityEngine.TouchScreenKeyboard Open (string text);
Member Added: public static UnityEngine.TouchScreenKeyboard Open (string text, UnityEngine.TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure, bool alert, string textPlaceholder);
Member Added: public string text { set; get; }
Member Added: public static bool hideInput { set; get; }
Member Added: public bool active { set; get; }
Member Added: public bool done { get; }
Member Added: public static bool autorotateToPortrait { set; get; }
Member Added: public static bool autorotateToPortraitUpsideDown { set; get; }
Member Added: public static bool autorotateToLandscapeLeft { set; get; }
Member Added: public static bool autorotateToLandscapeRight { set; get; }
Member Added: public static UnityEngine.Rect area { get; }
Member Added: public static bool visible { get; }
New Type: UnityEngine.iPhoneGeneration
Member Added: Unknown
Member Added: iPhone
Member Added: iPhone3G
Member Added: iPhone3GS
Member Added: iPodTouch1Gen
Member Added: iPodTouch2Gen
Member Added: iPodTouch3Gen
Member Added: iPad1Gen
Member Added: iPhone4
Member Added: iPodTouch4Gen
Member Added: iPad2Gen
Member Added: iPhone4S
New Type: UnityEngine.iPhone
Member Added: public iPhone ();
Member Added: public static void SetNoBackupFlag (string path);
Member Added: public static void ResetNoBackupFlag (string path);
Member Added: public static UnityEngine.iPhoneGeneration generation { get; }
New Type: UnityEngine.Gizmos
Member Added: public Gizmos ();
Member Added: public static void DrawRay (UnityEngine.Ray r);
Member Added: public static void DrawRay (UnityEngine.Vector3 from, UnityEngine.Vector3 direction);
Member Added: public static void DrawLine (UnityEngine.Vector3 from, UnityEngine.Vector3 to);
Member Added: public static void DrawWireSphere (UnityEngine.Vector3 center, float radius);
Member Added: public static void DrawSphere (UnityEngine.Vector3 center, float radius);
Member Added: public static void DrawWireCube (UnityEngine.Vector3 center, UnityEngine.Vector3 size);
Member Added: public static void DrawCube (UnityEngine.Vector3 center, UnityEngine.Vector3 size);
Member Added: public static void DrawIcon (UnityEngine.Vector3 center, string name, bool allowScaling);
Member Added: public static void DrawIcon (UnityEngine.Vector3 center, string name);
Member Added: public static void DrawGUITexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture);
Member Added: public static void DrawGUITexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, UnityEngine.Material mat);
Member Added: public static void DrawGUITexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, int leftBorder, int rightBorder, int topBorder, int bottomBorder, UnityEngine.Material mat);
Member Added: public static void DrawGUITexture (UnityEngine.Rect screenRect, UnityEngine.Texture texture, int leftBorder, int rightBorder, int topBorder, int bottomBorder);
Member Added: public static void DrawFrustum (UnityEngine.Vector3 center, float fov, float maxRange, float minRange, float aspect);
Member Added: public static UnityEngine.Color color { set; get; }
Member Added: public static UnityEngine.Matrix4x4 matrix { set; get; }
New Type: UnityEngine.EventType
Member Added: MouseDown
Member Added: MouseUp
Member Added: MouseMove
Member Added: MouseDrag
Member Added: KeyDown
Member Added: KeyUp
Member Added: ScrollWheel
Member Added: Repaint
Member Added: Layout
Member Added: DragUpdated
Member Added: DragPerform
Member Added: DragExited
Member Added: Ignore
Member Added: Used
Member Added: ValidateCommand
Member Added: ExecuteCommand
Member Added: ContextClick
Member Added: mouseDown
Member Added: mouseUp
Member Added: mouseMove
Member Added: mouseDrag
Member Added: keyDown
Member Added: keyUp
Member Added: scrollWheel
Member Added: repaint
Member Added: layout
Member Added: dragUpdated
Member Added: dragPerform
Member Added: ignore
Member Added: used
New Type: UnityEngine.EventModifiers
Member Added: Shift
Member Added: Control
Member Added: Alt
Member Added: Command
Member Added: Numeric
Member Added: CapsLock
Member Added: FunctionKey
New Type: UnityEngine.Event
Member Added: public Event ();
Member Added: public Event (UnityEngine.Event other);
Member Added: public UnityEngine.EventType GetTypeForControl (int controlID);
Member Added: public void Use ();
Member Added: public static UnityEngine.Event KeyboardEvent (string key);
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object obj);
Member Added: public override string ToString ();
Member Added: public UnityEngine.EventType rawType { get; }
Member Added: public UnityEngine.EventType type { set; get; }
Member Added: public UnityEngine.Vector2 mousePosition { set; get; }
Member Added: public UnityEngine.Vector2 delta { set; get; }
Member Added: public UnityEngine.Ray mouseRay { set; get; }
Member Added: public int button { set; get; }
Member Added: public UnityEngine.EventModifiers modifiers { set; get; }
Member Added: public float pressure { set; get; }
Member Added: public int clickCount { set; get; }
Member Added: public char character { set; get; }
Member Added: public string commandName { set; get; }
Member Added: public UnityEngine.KeyCode keyCode { set; get; }
Member Added: public bool shift { set; get; }
Member Added: public bool control { set; get; }
Member Added: public bool alt { set; get; }
Member Added: public bool command { set; get; }
Member Added: public bool capsLock { set; get; }
Member Added: public bool numeric { set; get; }
Member Added: public bool functionKey { get; }
Member Added: public static UnityEngine.Event current { set; get; }
Member Added: public bool isKey { get; }
Member Added: public bool isMouse { get; }
New Type: UnityEngine.TextClipping
Member Added: Overflow
Member Added: Clip
New Type: UnityEngine.KeyCode
Member Added: None
Member Added: Backspace
Member Added: Delete
Member Added: Tab
Member Added: Clear
Member Added: Return
Member Added: Pause
Member Added: Escape
Member Added: Space
Member Added: Keypad0
Member Added: Keypad1
Member Added: Keypad2
Member Added: Keypad3
Member Added: Keypad4
Member Added: Keypad5
Member Added: Keypad6
Member Added: Keypad7
Member Added: Keypad8
Member Added: Keypad9
Member Added: KeypadPeriod
Member Added: KeypadDivide
Member Added: KeypadMultiply
Member Added: KeypadMinus
Member Added: KeypadPlus
Member Added: KeypadEnter
Member Added: KeypadEquals
Member Added: UpArrow
Member Added: DownArrow
Member Added: RightArrow
Member Added: LeftArrow
Member Added: Insert
Member Added: Home
Member Added: End
Member Added: PageUp
Member Added: PageDown
Member Added: F1
Member Added: F2
Member Added: F3
Member Added: F4
Member Added: F5
Member Added: F6
Member Added: F7
Member Added: F8
Member Added: F9
Member Added: F10
Member Added: F11
Member Added: F12
Member Added: F13
Member Added: F14
Member Added: F15
Member Added: Alpha0
Member Added: Alpha1
Member Added: Alpha2
Member Added: Alpha3
Member Added: Alpha4
Member Added: Alpha5
Member Added: Alpha6
Member Added: Alpha7
Member Added: Alpha8
Member Added: Alpha9
Member Added: Exclaim
Member Added: DoubleQuote
Member Added: Hash
Member Added: Dollar
Member Added: Ampersand
Member Added: Quote
Member Added: LeftParen
Member Added: RightParen
Member Added: Asterisk
Member Added: Plus
Member Added: Comma
Member Added: Minus
Member Added: Period
Member Added: Slash
Member Added: Colon
Member Added: Semicolon
Member Added: Less
Member Added: Equals
Member Added: Greater
Member Added: Question
Member Added: At
Member Added: LeftBracket
Member Added: Backslash
Member Added: RightBracket
Member Added: Caret
Member Added: Underscore
Member Added: BackQuote
Member Added: A
Member Added: B
Member Added: C
Member Added: D
Member Added: E
Member Added: F
Member Added: G
Member Added: H
Member Added: I
Member Added: J
Member Added: K
Member Added: L
Member Added: M
Member Added: N
Member Added: O
Member Added: P
Member Added: Q
Member Added: R
Member Added: S
Member Added: T
Member Added: U
Member Added: V
Member Added: W
Member Added: X
Member Added: Y
Member Added: Z
Member Added: Numlock
Member Added: CapsLock
Member Added: ScrollLock
Member Added: RightShift
Member Added: LeftShift
Member Added: RightControl
Member Added: LeftControl
Member Added: RightAlt
Member Added: LeftAlt
Member Added: LeftApple
Member Added: LeftWindows
Member Added: RightApple
Member Added: RightWindows
Member Added: AltGr
Member Added: Help
Member Added: Print
Member Added: SysReq
Member Added: Break
Member Added: Menu
Member Added: Mouse0
Member Added: Mouse1
Member Added: Mouse2
Member Added: Mouse3
Member Added: Mouse4
Member Added: Mouse5
Member Added: Mouse6
Member Added: JoystickButton0
Member Added: JoystickButton1
Member Added: JoystickButton2
Member Added: JoystickButton3
Member Added: JoystickButton4
Member Added: JoystickButton5
Member Added: JoystickButton6
Member Added: JoystickButton7
Member Added: JoystickButton8
Member Added: JoystickButton9
Member Added: JoystickButton10
Member Added: JoystickButton11
Member Added: JoystickButton12
Member Added: JoystickButton13
Member Added: JoystickButton14
Member Added: JoystickButton15
Member Added: JoystickButton16
Member Added: JoystickButton17
Member Added: JoystickButton18
Member Added: JoystickButton19
Member Added: Joystick1Button0
Member Added: Joystick1Button1
Member Added: Joystick1Button2
Member Added: Joystick1Button3
Member Added: Joystick1Button4
Member Added: Joystick1Button5
Member Added: Joystick1Button6
Member Added: Joystick1Button7
Member Added: Joystick1Button8
Member Added: Joystick1Button9
Member Added: Joystick1Button10
Member Added: Joystick1Button11
Member Added: Joystick1Button12
Member Added: Joystick1Button13
Member Added: Joystick1Button14
Member Added: Joystick1Button15
Member Added: Joystick1Button16
Member Added: Joystick1Button17
Member Added: Joystick1Button18
Member Added: Joystick1Button19
Member Added: Joystick2Button0
Member Added: Joystick2Button1
Member Added: Joystick2Button2
Member Added: Joystick2Button3
Member Added: Joystick2Button4
Member Added: Joystick2Button5
Member Added: Joystick2Button6
Member Added: Joystick2Button7
Member Added: Joystick2Button8
Member Added: Joystick2Button9
Member Added: Joystick2Button10
Member Added: Joystick2Button11
Member Added: Joystick2Button12
Member Added: Joystick2Button13
Member Added: Joystick2Button14
Member Added: Joystick2Button15
Member Added: Joystick2Button16
Member Added: Joystick2Button17
Member Added: Joystick2Button18
Member Added: Joystick2Button19
Member Added: Joystick3Button0
Member Added: Joystick3Button1
Member Added: Joystick3Button2
Member Added: Joystick3Button3
Member Added: Joystick3Button4
Member Added: Joystick3Button5
Member Added: Joystick3Button6
Member Added: Joystick3Button7
Member Added: Joystick3Button8
Member Added: Joystick3Button9
Member Added: Joystick3Button10
Member Added: Joystick3Button11
Member Added: Joystick3Button12
Member Added: Joystick3Button13
Member Added: Joystick3Button14
Member Added: Joystick3Button15
Member Added: Joystick3Button16
Member Added: Joystick3Button17
Member Added: Joystick3Button18
Member Added: Joystick3Button19
Member Added: Joystick4Button0
Member Added: Joystick4Button1
Member Added: Joystick4Button2
Member Added: Joystick4Button3
Member Added: Joystick4Button4
Member Added: Joystick4Button5
Member Added: Joystick4Button6
Member Added: Joystick4Button7
Member Added: Joystick4Button8
Member Added: Joystick4Button9
Member Added: Joystick4Button10
Member Added: Joystick4Button11
Member Added: Joystick4Button12
Member Added: Joystick4Button13
Member Added: Joystick4Button14
Member Added: Joystick4Button15
Member Added: Joystick4Button16
Member Added: Joystick4Button17
Member Added: Joystick4Button18
Member Added: Joystick4Button19
New Type: UnityEngine.iPhoneTouchPhase
Member Added: Began
Member Added: Moved
Member Added: Stationary
Member Added: Ended
Member Added: Canceled
New Type: UnityEngine.iPhoneTouch
Member Added: public int fingerId { get; }
Member Added: public UnityEngine.Vector2 position { get; }
Member Added: public UnityEngine.Vector2 deltaPosition { get; }
Member Added: public float deltaTime { get; }
Member Added: public int tapCount { get; }
Member Added: public UnityEngine.iPhoneTouchPhase phase { get; }
Member Added: public UnityEngine.Vector2 positionDelta { get; }
Member Added: public float timeDelta { get; }
New Type: UnityEngine.iPhoneAccelerationEvent
Member Added: public UnityEngine.Vector3 acceleration { get; }
Member Added: public float deltaTime { get; }
Member Added: public float timeDelta { get; }
New Type: UnityEngine.iPhoneOrientation
Member Added: Unknown
Member Added: Portrait
Member Added: PortraitUpsideDown
Member Added: LandscapeLeft
Member Added: LandscapeRight
Member Added: FaceUp
Member Added: FaceDown
New Type: UnityEngine.iPhoneInput
Member Added: public iPhoneInput ();
Member Added: public static UnityEngine.iPhoneTouch GetTouch (int index);
Member Added: public static UnityEngine.iPhoneAccelerationEvent GetAccelerationEvent (int index);
Member Added: public static UnityEngine.iPhoneAccelerationEvent[] accelerationEvents { get; }
Member Added: public static UnityEngine.iPhoneTouch[] touches { get; }
Member Added: public static int touchCount { get; }
Member Added: public static bool multiTouchEnabled { set; get; }
Member Added: public static int accelerationEventCount { get; }
Member Added: public static UnityEngine.Vector3 acceleration { get; }
Member Added: public static UnityEngine.iPhoneOrientation orientation { get; }
Member Added: public static UnityEngine.LocationInfo lastLocation { get; }
New Type: UnityEngine.iPhoneScreenOrientation
Member Added: Unknown
Member Added: Portrait
Member Added: PortraitUpsideDown
Member Added: LandscapeLeft
Member Added: LandscapeRight
Member Added: Landscape
New Type: UnityEngine.iPhoneSettings
Member Added: public iPhoneSettings ();
Member Added: public static void StartLocationServiceUpdates (float desiredAccuracyInMeters, float updateDistanceInMeters);
Member Added: public static void StartLocationServiceUpdates (float desiredAccuracyInMeters);
Member Added: public static void StartLocationServiceUpdates ();
Member Added: public static void StopLocationServiceUpdates ();
Member Added: public static UnityEngine.iPhoneScreenOrientation screenOrientation { set; get; }
Member Added: public static bool verticalOrientation { set; get; }
Member Added: public static bool screenCanDarken { set; get; }
Member Added: public static string uniqueIdentifier { get; }
Member Added: public static string name { get; }
Member Added: public static string model { get; }
Member Added: public static string systemName { get; }
Member Added: public static string systemVersion { get; }
Member Added: public static UnityEngine.iPhoneNetworkReachability internetReachability { get; }
Member Added: public static UnityEngine.iPhoneGeneration generation { get; }
Member Added: public static UnityEngine.LocationServiceStatus locationServiceStatus { get; }
Member Added: public static bool locationServiceEnabledByUser { get; }
New Type: UnityEngine.iPhoneKeyboardType
Member Added: Default
Member Added: ASCIICapable
Member Added: NumbersAndPunctuation
Member Added: URL
Member Added: NumberPad
Member Added: PhonePad
Member Added: NamePhonePad
Member Added: EmailAddress
New Type: UnityEngine.iPhoneKeyboard
Member Added: public iPhoneKeyboard (string text, UnityEngine.iPhoneKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure, bool alert, string textPlaceholder);
Member Added: ~iPhoneKeyboard ();
Member Added: public static UnityEngine.iPhoneKeyboard Open (string text, UnityEngine.iPhoneKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure, bool alert);
Member Added: public static UnityEngine.iPhoneKeyboard Open (string text, UnityEngine.iPhoneKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure);
Member Added: public static UnityEngine.iPhoneKeyboard Open (string text, UnityEngine.iPhoneKeyboardType keyboardType, bool autocorrection, bool multiline);
Member Added: public static UnityEngine.iPhoneKeyboard Open (string text, UnityEngine.iPhoneKeyboardType keyboardType, bool autocorrection);
Member Added: public static UnityEngine.iPhoneKeyboard Open (string text, UnityEngine.iPhoneKeyboardType keyboardType);
Member Added: public static UnityEngine.iPhoneKeyboard Open (string text);
Member Added: public static UnityEngine.iPhoneKeyboard Open (string text, UnityEngine.iPhoneKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure, bool alert, string textPlaceholder);
Member Added: public string text { set; get; }
Member Added: public static bool hideInput { set; get; }
Member Added: public bool active { set; get; }
Member Added: public bool done { get; }
Member Added: public static bool autorotateToPortrait { set; get; }
Member Added: public static bool autorotateToPortraitUpsideDown { set; get; }
Member Added: public static bool autorotateToLandscapeLeft { set; get; }
Member Added: public static bool autorotateToLandscapeRight { set; get; }
Member Added: public static UnityEngine.Rect area { get; }
Member Added: public static bool visible { get; }
New Type: UnityEngine.iPhoneMovieControlMode
Member Added: Full
Member Added: Minimal
Member Added: CancelOnTouch
Member Added: Hidden
Member Added: VolumeOnly
New Type: UnityEngine.iPhoneMovieScalingMode
Member Added: None
Member Added: AspectFit
Member Added: AspectFill
Member Added: Fill
New Type: UnityEngine.iPhoneNetworkReachability
Member Added: NotReachable
Member Added: ReachableViaCarrierDataNetwork
Member Added: ReachableViaWiFiNetwork
New Type: UnityEngine.iPhoneUtils
Member Added: public iPhoneUtils ();
Member Added: public static void PlayMovie (string path, UnityEngine.Color bgColor, int controlMode, int scalingMode);
Member Added: public static void PlayMovie (string path, UnityEngine.Color bgColor, UnityEngine.iPhoneMovieControlMode controlMode, UnityEngine.iPhoneMovieScalingMode scalingMode);
Member Added: public static void PlayMovie (string path, UnityEngine.Color bgColor, UnityEngine.iPhoneMovieControlMode controlMode);
Member Added: public static void PlayMovie (string path, UnityEngine.Color bgColor);
Member Added: public static void PlayMovieURL (string url, UnityEngine.Color bgColor, int controlMode, int scalingMode);
Member Added: public static void PlayMovieURL (string url, UnityEngine.Color bgColor, UnityEngine.iPhoneMovieControlMode controlMode, UnityEngine.iPhoneMovieScalingMode scalingMode);
Member Added: public static void PlayMovieURL (string url, UnityEngine.Color bgColor, UnityEngine.iPhoneMovieControlMode controlMode);
Member Added: public static void PlayMovieURL (string url, UnityEngine.Color bgColor);
Member Added: public static void Vibrate ();
Member Added: public static bool isApplicationGenuine { get; }
Member Added: public static bool isApplicationGenuineAvailable { get; }
New Type: UnityEngine.ADSizeIdentifier
Member Added: Unknown
Member Added: Portrait
Member Added: Landscape
New Type: UnityEngine.ADPosition
Member Added: Manual
Member Added: Top
Member Added: Bottom
New Type: UnityEngine.ADErrorCode
Member Added: Unknown
Member Added: ServerFailure
Member Added: LoadingThrottled
Member Added: InventoryUnavailable
Member Added: ConfigurationError
Member Added: BannerVisibleWithoutContent
Member Added: ApplicationInactive
New Type: UnityEngine.ADError
Member Added: public ADError ();
Member Added: public UnityEngine.ADErrorCode code { get; }
Member Added: public string description { get; }
Member Added: public string reason { get; }
New Type: UnityEngine.ADBannerView
Member Added: public ADBannerView ();
Member Added: public void Show ();
Member Added: public void Hide ();
Member Added: public static UnityEngine.Vector2 GetSizeFromSizeIdentifier (UnityEngine.ADSizeIdentifier identifier);
Member Added: public void CancelAction ();
Member Added: ~ADBannerView ();
Member Added: public void InitWrapper ();
Member Added: public UnityEngine.ADSizeIdentifier[] requiredSizeIdentifiers { set; get; }
Member Added: public UnityEngine.ADSizeIdentifier currentSizeIdentifier { set; get; }
Member Added: public bool autoSize { set; get; }
Member Added: public UnityEngine.Vector2 position { set; get; }
Member Added: public UnityEngine.ADPosition autoPosition { set; get; }
Member Added: public bool visible { get; }
Member Added: public bool loaded { get; }
Member Added: public bool actionInProgress { get; }
Member Added: public UnityEngine.ADError error { get; }
New Type: UnityEngine.ADInterstitialAd
Member Added: public ADInterstitialAd ();
Member Added: public void CancelAction ();
Member Added: public bool Present ();
Member Added: ~ADInterstitialAd ();
Member Added: public bool loaded { get; }
Member Added: public bool actionInProgress { get; }
Member Added: public bool visible { get; }
Member Added: public UnityEngine.ADError error { get; }
New Type: UnityEngine.CalendarIdentifier
Member Added: GregorianCalendar
Member Added: BuddhistCalendar
Member Added: ChineseCalendar
Member Added: HebrewCalendar
Member Added: IslamicCalendar
Member Added: IslamicCivilCalendar
Member Added: JapaneseCalendar
Member Added: RepublicOfChinaCalendar
Member Added: PersianCalendar
Member Added: IndianCalendar
Member Added: ISO8601Calendar
New Type: UnityEngine.CalendarUnit
Member Added: Era
Member Added: Year
Member Added: Month
Member Added: Day
Member Added: Hour
Member Added: Minute
Member Added: Second
Member Added: Week
Member Added: Weekday
Member Added: WeekdayOrdinal
Member Added: Quarter
New Type: UnityEngine.LocalNotification
Member Added: public LocalNotification ();
Member Added: ~LocalNotification ();
Member Added: public DateTime fireDate { set; get; }
Member Added: public string timeZone { set; get; }
Member Added: public UnityEngine.CalendarUnit repeatInterval { set; get; }
Member Added: public UnityEngine.CalendarIdentifier repeatCalendar { set; get; }
Member Added: public string alertBody { set; get; }
Member Added: public string alertAction { set; get; }
Member Added: public bool hasAction { set; get; }
Member Added: public string alertLaunchImage { set; get; }
Member Added: public int applicationIconBadgeNumber { set; get; }
Member Added: public string soundName { set; get; }
Member Added: public static string defaultSoundName { get; }
Member Added: public System.Collections.IDictionary userInfo { set; get; }
New Type: UnityEngine.RemoteNotification
Member Added: ~RemoteNotification ();
Member Added: public string alertBody { get; }
Member Added: public bool hasAction { get; }
Member Added: public int applicationIconBadgeNumber { get; }
Member Added: public string soundName { get; }
Member Added: public System.Collections.IDictionary userInfo { get; }
New Type: UnityEngine.RemoteNotificationType
Member Added: None
Member Added: Badge
Member Added: Sound
Member Added: Alert
New Type: UnityEngine.NotificationServices
Member Added: public NotificationServices ();
Member Added: public static UnityEngine.LocalNotification GetLocalNotification (int index);
Member Added: public static void ScheduleLocalNotification (UnityEngine.LocalNotification notification);
Member Added: public static void PresentLocalNotificationNow (UnityEngine.LocalNotification notification);
Member Added: public static void CancelLocalNotification (UnityEngine.LocalNotification notification);
Member Added: public static void CancelAllLocalNotifications ();
Member Added: public static UnityEngine.RemoteNotification GetRemoteNotification (int index);
Member Added: public static void ClearLocalNotifications ();
Member Added: public static void ClearRemoteNotifications ();
Member Added: public static void RegisterForRemoteNotificationTypes (UnityEngine.RemoteNotificationType notificationTypes);
Member Added: public static void UnregisterForRemoteNotifications ();
Member Added: public static int localNotificationCount { get; }
Member Added: public static UnityEngine.LocalNotification[] localNotifications { get; }
Member Added: public static UnityEngine.LocalNotification[] scheduledLocalNotifications { get; }
Member Added: public static int remoteNotificationCount { get; }
Member Added: public static UnityEngine.RemoteNotification[] remoteNotifications { get; }
Member Added: public static UnityEngine.RemoteNotificationType enabledRemoteNotificationTypes { get; }
Member Added: public static byte[] deviceToken { get; }
Member Added: public static string registrationError { get; }
New Type: UnityEngine.LightProbeGroup
Member Added: public LightProbeGroup ();
Member Added: public UnityEngine.Vector3[] probePositions { set; get; }
New Type: UnityEngine.Vector2
Member Added: public Vector2 (float x, float y);
Member Added: public const float kEpsilon = 1E-05;
Member Added: public float x;
Member Added: public float y;
Member Added: public void Set (float new_x, float new_y);
Member Added: public static UnityEngine.Vector2 Lerp (UnityEngine.Vector2 from, UnityEngine.Vector2 to, float t);
Member Added: public static UnityEngine.Vector2 MoveTowards (UnityEngine.Vector2 current, UnityEngine.Vector2 target, float maxDistanceDelta);
Member Added: public static UnityEngine.Vector2 Scale (UnityEngine.Vector2 a, UnityEngine.Vector2 b);
Member Added: public void Scale (UnityEngine.Vector2 scale);
Member Added: public void Normalize ();
Member Added: public override string ToString ();
Member Added: public string ToString (string format);
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public static float Dot (UnityEngine.Vector2 lhs, UnityEngine.Vector2 rhs);
Member Added: public static float Angle (UnityEngine.Vector2 from, UnityEngine.Vector2 to);
Member Added: public static float Distance (UnityEngine.Vector2 a, UnityEngine.Vector2 b);
Member Added: public static UnityEngine.Vector2 ClampMagnitude (UnityEngine.Vector2 vector, float maxLength);
Member Added: public static float SqrMagnitude (UnityEngine.Vector2 a);
Member Added: public float SqrMagnitude ();
Member Added: public static UnityEngine.Vector2 Min (UnityEngine.Vector2 lhs, UnityEngine.Vector2 rhs);
Member Added: public static UnityEngine.Vector2 Max (UnityEngine.Vector2 lhs, UnityEngine.Vector2 rhs);
Member Added: public static UnityEngine.Vector2 op_Addition (UnityEngine.Vector2 a, UnityEngine.Vector2 b);
Member Added: public static UnityEngine.Vector2 op_Subtraction (UnityEngine.Vector2 a, UnityEngine.Vector2 b);
Member Added: public static UnityEngine.Vector2 op_UnaryNegation (UnityEngine.Vector2 a);
Member Added: public static UnityEngine.Vector2 op_Multiply (UnityEngine.Vector2 a, float d);
Member Added: public static UnityEngine.Vector2 op_Multiply (float d, UnityEngine.Vector2 a);
Member Added: public static UnityEngine.Vector2 op_Division (UnityEngine.Vector2 a, float d);
Member Added: public static bool op_Equality (UnityEngine.Vector2 lhs, UnityEngine.Vector2 rhs);
Member Added: public static bool op_Inequality (UnityEngine.Vector2 lhs, UnityEngine.Vector2 rhs);
Member Added: public static UnityEngine.Vector2 op_Implicit (UnityEngine.Vector3 v);
Member Added: public static UnityEngine.Vector3 op_Implicit (UnityEngine.Vector2 v);
Member Added: public float this[int index] { set; get; }
Member Added: public UnityEngine.Vector2 normalized { get; }
Member Added: public float magnitude { get; }
Member Added: public float sqrMagnitude { get; }
Member Added: public static UnityEngine.Vector2 zero { get; }
Member Added: public static UnityEngine.Vector2 one { get; }
Member Added: public static UnityEngine.Vector2 up { get; }
Member Added: public static UnityEngine.Vector2 right { get; }
New Type: UnityEngine.Vector3
Member Added: public Vector3 (float x, float y, float z);
Member Added: public Vector3 (float x, float y);
Member Added: public const float kEpsilon = 1E-05;
Member Added: public float x;
Member Added: public float y;
Member Added: public float z;
Member Added: public static UnityEngine.Vector3 Lerp (UnityEngine.Vector3 from, UnityEngine.Vector3 to, float t);
Member Added: public static UnityEngine.Vector3 Slerp (UnityEngine.Vector3 from, UnityEngine.Vector3 to, float t);
Member Added: public static void OrthoNormalize (ref UnityEngine.Vector3 normal, ref UnityEngine.Vector3 tangent);
Member Added: public static void OrthoNormalize (ref UnityEngine.Vector3 normal, ref UnityEngine.Vector3 tangent, ref UnityEngine.Vector3 binormal);
Member Added: public static UnityEngine.Vector3 MoveTowards (UnityEngine.Vector3 current, UnityEngine.Vector3 target, float maxDistanceDelta);
Member Added: public static UnityEngine.Vector3 RotateTowards (UnityEngine.Vector3 current, UnityEngine.Vector3 target, float maxRadiansDelta, float maxMagnitudeDelta);
Member Added: public static UnityEngine.Vector3 SmoothDamp (UnityEngine.Vector3 current, UnityEngine.Vector3 target, ref UnityEngine.Vector3 currentVelocity, float smoothTime, float maxSpeed);
Member Added: public static UnityEngine.Vector3 SmoothDamp (UnityEngine.Vector3 current, UnityEngine.Vector3 target, ref UnityEngine.Vector3 currentVelocity, float smoothTime);
Member Added: public static UnityEngine.Vector3 SmoothDamp (UnityEngine.Vector3 current, UnityEngine.Vector3 target, ref UnityEngine.Vector3 currentVelocity, float smoothTime, float maxSpeed, float deltaTime);
Member Added: public void Set (float new_x, float new_y, float new_z);
Member Added: public static UnityEngine.Vector3 Scale (UnityEngine.Vector3 a, UnityEngine.Vector3 b);
Member Added: public void Scale (UnityEngine.Vector3 scale);
Member Added: public static UnityEngine.Vector3 Cross (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public static UnityEngine.Vector3 Reflect (UnityEngine.Vector3 inDirection, UnityEngine.Vector3 inNormal);
Member Added: public static UnityEngine.Vector3 Normalize (UnityEngine.Vector3 value);
Member Added: public void Normalize ();
Member Added: public override string ToString ();
Member Added: public string ToString (string format);
Member Added: public static float Dot (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);
Member Added: public static UnityEngine.Vector3 Project (UnityEngine.Vector3 vector, UnityEngine.Vector3 onNormal);
Member Added: public static UnityEngine.Vector3 Exclude (UnityEngine.Vector3 excludeThis, UnityEngine.Vector3 fromThat);
Member Added: public static float Angle (UnityEngine.Vector3 from, UnityEngine.Vector3 to);
Member Added: public static float Distance (UnityEngine.Vector3 a, UnityEngine.Vector3 b);
Member Added: public static UnityEngine.Vector3 ClampMagnitude (UnityEngine.Vector3 vector, float maxLength);
Member Added: public static float Magnitude (UnityEngine.Vector3 a);
Member Added: public static float SqrMagnitude (UnityEngine.Vector3 a);
Member Added: public static UnityEngine.Vector3 Min (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);
Member Added: public static UnityEngine.Vector3 Max (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);
Member Added: public static float AngleBetween (UnityEngine.Vector3 from, UnityEngine.Vector3 to);
Member Added: public static UnityEngine.Vector3 op_Addition (UnityEngine.Vector3 a, UnityEngine.Vector3 b);
Member Added: public static UnityEngine.Vector3 op_Subtraction (UnityEngine.Vector3 a, UnityEngine.Vector3 b);
Member Added: public static UnityEngine.Vector3 op_UnaryNegation (UnityEngine.Vector3 a);
Member Added: public static UnityEngine.Vector3 op_Multiply (UnityEngine.Vector3 a, float d);
Member Added: public static UnityEngine.Vector3 op_Multiply (float d, UnityEngine.Vector3 a);
Member Added: public static UnityEngine.Vector3 op_Division (UnityEngine.Vector3 a, float d);
Member Added: public static bool op_Equality (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);
Member Added: public static bool op_Inequality (UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs);
Member Added: public float this[int index] { set; get; }
Member Added: public UnityEngine.Vector3 normalized { get; }
Member Added: public float magnitude { get; }
Member Added: public float sqrMagnitude { get; }
Member Added: public static UnityEngine.Vector3 zero { get; }
Member Added: public static UnityEngine.Vector3 one { get; }
Member Added: public static UnityEngine.Vector3 forward { get; }
Member Added: public static UnityEngine.Vector3 back { get; }
Member Added: public static UnityEngine.Vector3 up { get; }
Member Added: public static UnityEngine.Vector3 down { get; }
Member Added: public static UnityEngine.Vector3 left { get; }
Member Added: public static UnityEngine.Vector3 right { get; }
Member Added: public static UnityEngine.Vector3 fwd { get; }
New Type: UnityEngine.Color
Member Added: public Color (float r, float g, float b, float a);
Member Added: public Color (float r, float g, float b);
Member Added: public float r;
Member Added: public float g;
Member Added: public float b;
Member Added: public float a;
Member Added: public override string ToString ();
Member Added: public string ToString (string format);
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public static UnityEngine.Color Lerp (UnityEngine.Color a, UnityEngine.Color b, float t);
Member Added: public static UnityEngine.Color op_Addition (UnityEngine.Color a, UnityEngine.Color b);
Member Added: public static UnityEngine.Color op_Subtraction (UnityEngine.Color a, UnityEngine.Color b);
Member Added: public static UnityEngine.Color op_Multiply (UnityEngine.Color a, UnityEngine.Color b);
Member Added: public static UnityEngine.Color op_Multiply (UnityEngine.Color a, float b);
Member Added: public static UnityEngine.Color op_Multiply (float b, UnityEngine.Color a);
Member Added: public static UnityEngine.Color op_Division (UnityEngine.Color a, float b);
Member Added: public static bool op_Equality (UnityEngine.Color lhs, UnityEngine.Color rhs);
Member Added: public static bool op_Inequality (UnityEngine.Color lhs, UnityEngine.Color rhs);
Member Added: public static UnityEngine.Vector4 op_Implicit (UnityEngine.Color c);
Member Added: public static UnityEngine.Color op_Implicit (UnityEngine.Vector4 v);
Member Added: public static UnityEngine.Color red { get; }
Member Added: public static UnityEngine.Color green { get; }
Member Added: public static UnityEngine.Color blue { get; }
Member Added: public static UnityEngine.Color white { get; }
Member Added: public static UnityEngine.Color black { get; }
Member Added: public static UnityEngine.Color yellow { get; }
Member Added: public static UnityEngine.Color cyan { get; }
Member Added: public static UnityEngine.Color magenta { get; }
Member Added: public static UnityEngine.Color gray { get; }
Member Added: public static UnityEngine.Color grey { get; }
Member Added: public static UnityEngine.Color clear { get; }
Member Added: public float grayscale { get; }
Member Added: public UnityEngine.Color linear { get; }
Member Added: public UnityEngine.Color gamma { get; }
Member Added: public float this[int index] { set; get; }
New Type: UnityEngine.Color32
Member Added: public Color32 (byte r, byte g, byte b, byte a);
Member Added: public byte r;
Member Added: public byte g;
Member Added: public byte b;
Member Added: public byte a;
Member Added: public override string ToString ();
Member Added: public string ToString (string format);
Member Added: public static UnityEngine.Color32 Lerp (UnityEngine.Color32 a, UnityEngine.Color32 b, float t);
Member Added: public static UnityEngine.Color32 op_Implicit (UnityEngine.Color c);
Member Added: public static UnityEngine.Color op_Implicit (UnityEngine.Color32 c);
New Type: UnityEngine.Quaternion
Member Added: public Quaternion (float x, float y, float z, float w);
Member Added: public const float kEpsilon = 1E-06;
Member Added: public float x;
Member Added: public float y;
Member Added: public float z;
Member Added: public float w;
Member Added: public void Set (float new_x, float new_y, float new_z, float new_w);
Member Added: public static float Dot (UnityEngine.Quaternion a, UnityEngine.Quaternion b);
Member Added: public static UnityEngine.Quaternion AngleAxis (float angle, UnityEngine.Vector3 axis);
Member Added: public void ToAngleAxis (out float angle, out UnityEngine.Vector3 axis);
Member Added: public static UnityEngine.Quaternion FromToRotation (UnityEngine.Vector3 fromDirection, UnityEngine.Vector3 toDirection);
Member Added: public void SetFromToRotation (UnityEngine.Vector3 fromDirection, UnityEngine.Vector3 toDirection);
Member Added: public static UnityEngine.Quaternion LookRotation (UnityEngine.Vector3 forward, UnityEngine.Vector3 upwards);
Member Added: public static UnityEngine.Quaternion LookRotation (UnityEngine.Vector3 forward);
Member Added: public void SetLookRotation (UnityEngine.Vector3 view);
Member Added: public void SetLookRotation (UnityEngine.Vector3 view, UnityEngine.Vector3 up);
Member Added: public static UnityEngine.Quaternion Slerp (UnityEngine.Quaternion from, UnityEngine.Quaternion to, float t);
Member Added: public static UnityEngine.Quaternion Lerp (UnityEngine.Quaternion from, UnityEngine.Quaternion to, float t);
Member Added: public static UnityEngine.Quaternion RotateTowards (UnityEngine.Quaternion from, UnityEngine.Quaternion to, float maxDegreesDelta);
Member Added: public static UnityEngine.Quaternion Inverse (UnityEngine.Quaternion rotation);
Member Added: public override string ToString ();
Member Added: public string ToString (string format);
Member Added: public static float Angle (UnityEngine.Quaternion a, UnityEngine.Quaternion b);
Member Added: public static UnityEngine.Quaternion Euler (float x, float y, float z);
Member Added: public static UnityEngine.Quaternion Euler (UnityEngine.Vector3 euler);
Member Added: public static UnityEngine.Quaternion EulerRotation (float x, float y, float z);
Member Added: public static UnityEngine.Quaternion EulerRotation (UnityEngine.Vector3 euler);
Member Added: public void SetEulerRotation (float x, float y, float z);
Member Added: public void SetEulerRotation (UnityEngine.Vector3 euler);
Member Added: public UnityEngine.Vector3 ToEuler ();
Member Added: public static UnityEngine.Quaternion EulerAngles (float x, float y, float z);
Member Added: public static UnityEngine.Quaternion EulerAngles (UnityEngine.Vector3 euler);
Member Added: public void ToAxisAngle (out UnityEngine.Vector3 axis, out float angle);
Member Added: public void SetEulerAngles (float x, float y, float z);
Member Added: public void SetEulerAngles (UnityEngine.Vector3 euler);
Member Added: public static UnityEngine.Vector3 ToEulerAngles (UnityEngine.Quaternion rotation);
Member Added: public UnityEngine.Vector3 ToEulerAngles ();
Member Added: public static UnityEngine.Quaternion AxisAngle (UnityEngine.Vector3 axis, float angle);
Member Added: public void SetAxisAngle (UnityEngine.Vector3 axis, float angle);
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public static UnityEngine.Quaternion op_Multiply (UnityEngine.Quaternion lhs, UnityEngine.Quaternion rhs);
Member Added: public static UnityEngine.Vector3 op_Multiply (UnityEngine.Quaternion rotation, UnityEngine.Vector3 point);
Member Added: public static bool op_Equality (UnityEngine.Quaternion lhs, UnityEngine.Quaternion rhs);
Member Added: public static bool op_Inequality (UnityEngine.Quaternion lhs, UnityEngine.Quaternion rhs);
Member Added: public float this[int index] { set; get; }
Member Added: public static UnityEngine.Quaternion identity { get; }
Member Added: public UnityEngine.Vector3 eulerAngles { set; get; }
New Type: UnityEngine.Rect
Member Added: public Rect (float left, float top, float width, float height);
Member Added: public Rect (UnityEngine.Rect source);
Member Added: public static UnityEngine.Rect MinMaxRect (float left, float top, float right, float bottom);
Member Added: public void Set (float left, float top, float width, float height);
Member Added: public override string ToString ();
Member Added: public string ToString (string format);
Member Added: public bool Contains (UnityEngine.Vector2 point);
Member Added: public bool Contains (UnityEngine.Vector3 point);
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public static bool op_Inequality (UnityEngine.Rect lhs, UnityEngine.Rect rhs);
Member Added: public static bool op_Equality (UnityEngine.Rect lhs, UnityEngine.Rect rhs);
Member Added: public float x { set; get; }
Member Added: public float y { set; get; }
Member Added: public UnityEngine.Vector2 center { set; get; }
Member Added: public float width { set; get; }
Member Added: public float height { set; get; }
Member Added: public float left { get; }
Member Added: public float right { get; }
Member Added: public float top { get; }
Member Added: public float bottom { get; }
Member Added: public float xMin { set; get; }
Member Added: public float yMin { set; get; }
Member Added: public float xMax { set; get; }
Member Added: public float yMax { set; get; }
New Type: UnityEngine.Matrix4x4
Member Added: public float m00;
Member Added: public float m10;
Member Added: public float m20;
Member Added: public float m30;
Member Added: public float m01;
Member Added: public float m11;
Member Added: public float m21;
Member Added: public float m31;
Member Added: public float m02;
Member Added: public float m12;
Member Added: public float m22;
Member Added: public float m32;
Member Added: public float m03;
Member Added: public float m13;
Member Added: public float m23;
Member Added: public float m33;
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public static UnityEngine.Matrix4x4 Inverse (UnityEngine.Matrix4x4 m);
Member Added: public static UnityEngine.Matrix4x4 Transpose (UnityEngine.Matrix4x4 m);
Member Added: public UnityEngine.Vector4 GetColumn (int i);
Member Added: public UnityEngine.Vector4 GetRow (int i);
Member Added: public void SetColumn (int i, UnityEngine.Vector4 v);
Member Added: public void SetRow (int i, UnityEngine.Vector4 v);
Member Added: public UnityEngine.Vector3 MultiplyPoint (UnityEngine.Vector3 v);
Member Added: public UnityEngine.Vector3 MultiplyPoint3x4 (UnityEngine.Vector3 v);
Member Added: public UnityEngine.Vector3 MultiplyVector (UnityEngine.Vector3 v);
Member Added: public static UnityEngine.Matrix4x4 Scale (UnityEngine.Vector3 v);
Member Added: public void SetTRS (UnityEngine.Vector3 pos, UnityEngine.Quaternion q, UnityEngine.Vector3 s);
Member Added: public static UnityEngine.Matrix4x4 TRS (UnityEngine.Vector3 pos, UnityEngine.Quaternion q, UnityEngine.Vector3 s);
Member Added: public override string ToString ();
Member Added: public string ToString (string format);
Member Added: public static UnityEngine.Matrix4x4 Ortho (float left, float right, float bottom, float top, float zNear, float zFar);
Member Added: public static UnityEngine.Matrix4x4 Perspective (float fov, float aspect, float zNear, float zFar);
Member Added: public static UnityEngine.Matrix4x4 op_Multiply (UnityEngine.Matrix4x4 lhs, UnityEngine.Matrix4x4 rhs);
Member Added: public static UnityEngine.Vector4 op_Multiply (UnityEngine.Matrix4x4 lhs, UnityEngine.Vector4 v);
Member Added: public static bool op_Equality (UnityEngine.Matrix4x4 lhs, UnityEngine.Matrix4x4 rhs);
Member Added: public static bool op_Inequality (UnityEngine.Matrix4x4 lhs, UnityEngine.Matrix4x4 rhs);
Member Added: public float this[int row, int column] { set; get; }
Member Added: public float this[int index] { set; get; }
Member Added: public UnityEngine.Matrix4x4 inverse { get; }
Member Added: public UnityEngine.Matrix4x4 transpose { get; }
Member Added: public bool isIdentity { get; }
Member Added: public static UnityEngine.Matrix4x4 zero { get; }
Member Added: public static UnityEngine.Matrix4x4 identity { get; }
New Type: UnityEngine.Bounds
Member Added: public Bounds (UnityEngine.Vector3 center, UnityEngine.Vector3 size);
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public void SetMinMax (UnityEngine.Vector3 min, UnityEngine.Vector3 max);
Member Added: public void Encapsulate (UnityEngine.Vector3 point);
Member Added: public void Encapsulate (UnityEngine.Bounds bounds);
Member Added: public void Expand (float amount);
Member Added: public void Expand (UnityEngine.Vector3 amount);
Member Added: public bool Intersects (UnityEngine.Bounds bounds);
Member Added: public bool Contains (UnityEngine.Vector3 point);
Member Added: public float SqrDistance (UnityEngine.Vector3 point);
Member Added: public bool IntersectRay (UnityEngine.Ray ray);
Member Added: public bool IntersectRay (UnityEngine.Ray ray, out float distance);
Member Added: public override string ToString ();
Member Added: public string ToString (string format);
Member Added: public static bool op_Equality (UnityEngine.Bounds lhs, UnityEngine.Bounds rhs);
Member Added: public static bool op_Inequality (UnityEngine.Bounds lhs, UnityEngine.Bounds rhs);
Member Added: public UnityEngine.Vector3 center { set; get; }
Member Added: public UnityEngine.Vector3 size { set; get; }
Member Added: public UnityEngine.Vector3 extents { set; get; }
Member Added: public UnityEngine.Vector3 min { set; get; }
Member Added: public UnityEngine.Vector3 max { set; get; }
New Type: UnityEngine.Vector4
Member Added: public Vector4 (float x, float y, float z, float w);
Member Added: public Vector4 (float x, float y, float z);
Member Added: public Vector4 (float x, float y);
Member Added: public const float kEpsilon = 1E-05;
Member Added: public float x;
Member Added: public float y;
Member Added: public float z;
Member Added: public float w;
Member Added: public void Set (float new_x, float new_y, float new_z, float new_w);
Member Added: public static UnityEngine.Vector4 Lerp (UnityEngine.Vector4 from, UnityEngine.Vector4 to, float t);
Member Added: public static UnityEngine.Vector4 MoveTowards (UnityEngine.Vector4 current, UnityEngine.Vector4 target, float maxDistanceDelta);
Member Added: public static UnityEngine.Vector4 Scale (UnityEngine.Vector4 a, UnityEngine.Vector4 b);
Member Added: public void Scale (UnityEngine.Vector4 scale);
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public static UnityEngine.Vector4 Normalize (UnityEngine.Vector4 a);
Member Added: public void Normalize ();
Member Added: public override string ToString ();
Member Added: public string ToString (string format);
Member Added: public static float Dot (UnityEngine.Vector4 a, UnityEngine.Vector4 b);
Member Added: public static UnityEngine.Vector4 Project (UnityEngine.Vector4 a, UnityEngine.Vector4 b);
Member Added: public static float Distance (UnityEngine.Vector4 a, UnityEngine.Vector4 b);
Member Added: public static float Magnitude (UnityEngine.Vector4 a);
Member Added: public static float SqrMagnitude (UnityEngine.Vector4 a);
Member Added: public float SqrMagnitude ();
Member Added: public static UnityEngine.Vector4 Min (UnityEngine.Vector4 lhs, UnityEngine.Vector4 rhs);
Member Added: public static UnityEngine.Vector4 Max (UnityEngine.Vector4 lhs, UnityEngine.Vector4 rhs);
Member Added: public static UnityEngine.Vector4 op_Addition (UnityEngine.Vector4 a, UnityEngine.Vector4 b);
Member Added: public static UnityEngine.Vector4 op_Subtraction (UnityEngine.Vector4 a, UnityEngine.Vector4 b);
Member Added: public static UnityEngine.Vector4 op_UnaryNegation (UnityEngine.Vector4 a);
Member Added: public static UnityEngine.Vector4 op_Multiply (UnityEngine.Vector4 a, float d);
Member Added: public static UnityEngine.Vector4 op_Multiply (float d, UnityEngine.Vector4 a);
Member Added: public static UnityEngine.Vector4 op_Division (UnityEngine.Vector4 a, float d);
Member Added: public static bool op_Equality (UnityEngine.Vector4 lhs, UnityEngine.Vector4 rhs);
Member Added: public static bool op_Inequality (UnityEngine.Vector4 lhs, UnityEngine.Vector4 rhs);
Member Added: public static UnityEngine.Vector4 op_Implicit (UnityEngine.Vector3 v);
Member Added: public static UnityEngine.Vector3 op_Implicit (UnityEngine.Vector4 v);
Member Added: public static UnityEngine.Vector4 op_Implicit (UnityEngine.Vector2 v);
Member Added: public static UnityEngine.Vector2 op_Implicit (UnityEngine.Vector4 v);
Member Added: public float this[int index] { set; get; }
Member Added: public UnityEngine.Vector4 normalized { get; }
Member Added: public float magnitude { get; }
Member Added: public float sqrMagnitude { get; }
Member Added: public static UnityEngine.Vector4 zero { get; }
Member Added: public static UnityEngine.Vector4 one { get; }
New Type: UnityEngine.Ray
Member Added: public Ray (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction);
Member Added: public UnityEngine.Vector3 GetPoint (float distance);
Member Added: public override string ToString ();
Member Added: public string ToString (string format);
Member Added: public UnityEngine.Vector3 origin { set; get; }
Member Added: public UnityEngine.Vector3 direction { set; get; }
New Type: UnityEngine.Plane
Member Added: public Plane (UnityEngine.Vector3 inNormal, UnityEngine.Vector3 inPoint);
Member Added: public Plane (UnityEngine.Vector3 inNormal, float d);
Member Added: public Plane (UnityEngine.Vector3 a, UnityEngine.Vector3 b, UnityEngine.Vector3 c);
Member Added: public void SetNormalAndPosition (UnityEngine.Vector3 inNormal, UnityEngine.Vector3 inPoint);
Member Added: public void Set3Points (UnityEngine.Vector3 a, UnityEngine.Vector3 b, UnityEngine.Vector3 c);
Member Added: public float GetDistanceToPoint (UnityEngine.Vector3 inPt);
Member Added: public bool GetSide (UnityEngine.Vector3 inPt);
Member Added: public bool SameSide (UnityEngine.Vector3 inPt0, UnityEngine.Vector3 inPt1);
Member Added: public bool Raycast (UnityEngine.Ray ray, out float enter);
Member Added: public UnityEngine.Vector3 normal { set; get; }
Member Added: public float distance { set; get; }
New Type: UnityEngine.Mathf
Member Added: public const float PI = 3.141593;
Member Added: public const float Infinity = Infinity;
Member Added: public const float NegativeInfinity = -Infinity;
Member Added: public const float Deg2Rad = 0.01745329;
Member Added: public const float Rad2Deg = 57.29578;
Member Added: public const float Epsilon = 1.401298E-45;
Member Added: public static float Sin (float f);
Member Added: public static float Cos (float f);
Member Added: public static float Tan (float f);
Member Added: public static float Asin (float f);
Member Added: public static float Acos (float f);
Member Added: public static float Atan (float f);
Member Added: public static float Atan2 (float y, float x);
Member Added: public static float Sqrt (float f);
Member Added: public static float Abs (float f);
Member Added: public static int Abs (int value);
Member Added: public static float Min (float a, float b);
Member Added: public static float Min (float[] values);
Member Added: public static int Min (int a, int b);
Member Added: public static int Min (int[] values);
Member Added: public static float Max (float a, float b);
Member Added: public static float Max (float[] values);
Member Added: public static int Max (int a, int b);
Member Added: public static int Max (int[] values);
Member Added: public static float Pow (float f, float p);
Member Added: public static float Exp (float power);
Member Added: public static float Log (float f, float p);
Member Added: public static float Log (float f);
Member Added: public static float Log10 (float f);
Member Added: public static float Ceil (float f);
Member Added: public static float Floor (float f);
Member Added: public static float Round (float f);
Member Added: public static int CeilToInt (float f);
Member Added: public static int FloorToInt (float f);
Member Added: public static int RoundToInt (float f);
Member Added: public static float Sign (float f);
Member Added: public static float Clamp (float value, float min, float max);
Member Added: public static int Clamp (int value, int min, int max);
Member Added: public static float Clamp01 (float value);
Member Added: public static float Lerp (float from, float to, float t);
Member Added: public static float LerpAngle (float a, float b, float t);
Member Added: public static float MoveTowards (float current, float target, float maxDelta);
Member Added: public static float MoveTowardsAngle (float current, float target, float maxDelta);
Member Added: public static float SmoothStep (float from, float to, float t);
Member Added: public static float Gamma (float value, float absmax, float gamma);
Member Added: public static bool Approximately (float a, float b);
Member Added: public static float SmoothDamp (float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed);
Member Added: public static float SmoothDamp (float current, float target, ref float currentVelocity, float smoothTime);
Member Added: public static float SmoothDamp (float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed, float deltaTime);
Member Added: public static float SmoothDampAngle (float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed);
Member Added: public static float SmoothDampAngle (float current, float target, ref float currentVelocity, float smoothTime);
Member Added: public static float SmoothDampAngle (float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed, float deltaTime);
Member Added: public static float Repeat (float t, float length);
Member Added: public static float PingPong (float t, float length);
Member Added: public static float InverseLerp (float from, float to, float value);
Member Added: public static int ClosestPowerOfTwo (int value);
Member Added: public static float GammaToLinearSpace (float value);
Member Added: public static float LinearToGammaSpace (float value);
Member Added: public static bool IsPowerOfTwo (int value);
Member Added: public static int NextPowerOfTwo (int value);
Member Added: public static float DeltaAngle (float current, float target);
Member Added: public static float PerlinNoise (float x, float y);
New Type: UnityEngine.RPCMode
Member Added: Server
Member Added: Others
Member Added: OthersBuffered
Member Added: All
Member Added: AllBuffered
New Type: UnityEngine.ConnectionTesterStatus
Member Added: Error
Member Added: Undetermined
Member Added: PrivateIPNoNATPunchthrough
Member Added: PrivateIPHasNATPunchThrough
Member Added: PublicIPIsConnectable
Member Added: PublicIPPortBlocked
Member Added: PublicIPNoServerStarted
Member Added: LimitedNATPunchthroughPortRestricted
Member Added: LimitedNATPunchthroughSymmetric
Member Added: NATpunchthroughFullCone
Member Added: NATpunchthroughAddressRestrictedCone
New Type: UnityEngine.NetworkConnectionError
Member Added: NoError
Member Added: RSAPublicKeyMismatch
Member Added: InvalidPassword
Member Added: ConnectionFailed
Member Added: TooManyConnectedPlayers
Member Added: ConnectionBanned
Member Added: AlreadyConnectedToServer
Member Added: AlreadyConnectedToAnotherServer
Member Added: CreateSocketOrThreadFailure
Member Added: IncorrectParameters
Member Added: EmptyConnectTarget
Member Added: InternalDirectConnectFailed
Member Added: NATTargetNotConnected
Member Added: NATTargetConnectionLost
Member Added: NATPunchthroughFailed
New Type: UnityEngine.NetworkDisconnection
Member Added: LostConnection
Member Added: Disconnected
New Type: UnityEngine.MasterServerEvent
Member Added: RegistrationFailedGameName
Member Added: RegistrationFailedGameType
Member Added: RegistrationFailedNoServer
Member Added: RegistrationSucceeded
Member Added: HostListReceived
New Type: UnityEngine.NetworkStateSynchronization
Member Added: Off
Member Added: ReliableDeltaCompressed
Member Added: Unreliable
New Type: UnityEngine.NetworkPeerType
Member Added: Disconnected
Member Added: Server
Member Added: Client
Member Added: Connecting
New Type: UnityEngine.NetworkLogLevel
Member Added: Off
Member Added: Informational
Member Added: Full
New Type: UnityEngine.NetworkPlayer
Member Added: public NetworkPlayer (string ip, int port);
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public override string ToString ();
Member Added: public static bool op_Equality (UnityEngine.NetworkPlayer lhs, UnityEngine.NetworkPlayer rhs);
Member Added: public static bool op_Inequality (UnityEngine.NetworkPlayer lhs, UnityEngine.NetworkPlayer rhs);
Member Added: public string ipAddress { get; }
Member Added: public int port { get; }
Member Added: public string guid { get; }
Member Added: public string externalIP { get; }
Member Added: public int externalPort { get; }
New Type: UnityEngine.NetworkViewID
Member Added: public override int GetHashCode ();
Member Added: public override bool Equals (object other);
Member Added: public override string ToString ();
Member Added: public static bool op_Equality (UnityEngine.NetworkViewID lhs, UnityEngine.NetworkViewID rhs);
Member Added: public static bool op_Inequality (UnityEngine.NetworkViewID lhs, UnityEngine.NetworkViewID rhs);
Member Added: public static UnityEngine.NetworkViewID unassigned { get; }
Member Added: public bool isMine { get; }
Member Added: public UnityEngine.NetworkPlayer owner { get; }
New Type: UnityEngine.Ping
Member Added: public Ping (string address);
Member Added: public void DestroyPing ();
Member Added: ~Ping ();
Member Added: public bool isDone { get; }
Member Added: public int time { get; }
Member Added: public string ip { get; }
New Type: UnityEngine.NetworkView
Member Added: public NetworkView ();
Member Added: public void RPC (string name, UnityEngine.RPCMode mode, object[] args);
Member Added: public void RPC (string name, UnityEngine.NetworkPlayer target, object[] args);
Member Added: public bool SetScope (UnityEngine.NetworkPlayer player, bool relevancy);
Member Added: public static UnityEngine.NetworkView Find (UnityEngine.NetworkViewID viewID);
Member Added: public UnityEngine.Component observed { set; get; }
Member Added: public UnityEngine.NetworkStateSynchronization stateSynchronization { set; get; }
Member Added: public UnityEngine.NetworkViewID viewID { set; get; }
Member Added: public int group { set; get; }
Member Added: public bool isMine { get; }
Member Added: public UnityEngine.NetworkPlayer owner { get; }
New Type: UnityEngine.Network
Member Added: public Network ();
Member Added: public static UnityEngine.NetworkConnectionError InitializeServer (int connections, int listenPort, bool useNat);
Member Added: public static UnityEngine.NetworkConnectionError InitializeServer (int connections, int listenPort);
Member Added: public static void InitializeSecurity ();
Member Added: public static UnityEngine.NetworkConnectionError Connect (string IP, int remotePort);
Member Added: public static UnityEngine.NetworkConnectionError Connect (string IP, int remotePort, string password);
Member Added: public static UnityEngine.NetworkConnectionError Connect (string[] IPs, int remotePort);
Member Added: public static UnityEngine.NetworkConnectionError Connect (string[] IPs, int remotePort, string password);
Member Added: public static UnityEngine.NetworkConnectionError Connect (string GUID);
Member Added: public static UnityEngine.NetworkConnectionError Connect (string GUID, string password);
Member Added: public static UnityEngine.NetworkConnectionError Connect (UnityEngine.HostData hostData);
Member Added: public static UnityEngine.NetworkConnectionError Connect (UnityEngine.HostData hostData, string password);
Member Added: public static void Disconnect (int timeout);
Member Added: public static void Disconnect ();
Member Added: public static void CloseConnection (UnityEngine.NetworkPlayer target, bool sendDisconnectionNotification);
Member Added: public static UnityEngine.NetworkViewID AllocateViewID ();
Member Added: public static UnityEngine.Object Instantiate (UnityEngine.Object prefab, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, int group);
Member Added: public static void Destroy (UnityEngine.NetworkViewID viewID);
Member Added: public static void Destroy (UnityEngine.GameObject gameObject);
Member Added: public static void DestroyPlayerObjects (UnityEngine.NetworkPlayer playerID);
Member Added: public static void RemoveRPCs (UnityEngine.NetworkPlayer playerID);
Member Added: public static void RemoveRPCs (UnityEngine.NetworkPlayer playerID, int group);
Member Added: public static void RemoveRPCs (UnityEngine.NetworkViewID viewID);
Member Added: public static void RemoveRPCsInGroup (int group);
Member Added: public static void SetLevelPrefix (int prefix);
Member Added: public static int GetLastPing (UnityEngine.NetworkPlayer player);
Member Added: public static int GetAveragePing (UnityEngine.NetworkPlayer player);
Member Added: public static void SetReceivingEnabled (UnityEngine.NetworkPlayer player, int group, bool enabled);
Member Added: public static void SetSendingEnabled (int group, bool enabled);
Member Added: public static void SetSendingEnabled (UnityEngine.NetworkPlayer player, int group, bool enabled);
Member Added: public static UnityEngine.ConnectionTesterStatus TestConnection (bool forceTest);
Member Added: public static UnityEngine.ConnectionTesterStatus TestConnection ();
Member Added: public static UnityEngine.ConnectionTesterStatus TestConnectionNAT (bool forceTest);
Member Added: public static UnityEngine.ConnectionTesterStatus TestConnectionNAT ();
Member Added: public static bool HavePublicAddress ();
Member Added: public static string incomingPassword { set; get; }
Member Added: public static UnityEngine.NetworkLogLevel logLevel { set; get; }
Member Added: public static UnityEngine.NetworkPlayer[] connections { get; }
Member Added: public static UnityEngine.NetworkPlayer player { get; }
Member Added: public static bool isClient { get; }
Member Added: public static bool isServer { get; }
Member Added: public static UnityEngine.NetworkPeerType peerType { get; }
Member Added: public static float sendRate { set; get; }
Member Added: public static bool isMessageQueueRunning { set; get; }
Member Added: public static double time { get; }
Member Added: public static int minimumAllocatableViewIDs { set; get; }
Member Added: public static bool useNat { set; get; }
Member Added: public static string natFacilitatorIP { set; get; }
Member Added: public static int natFacilitatorPort { set; get; }
Member Added: public static string connectionTesterIP { set; get; }
Member Added: public static int connectionTesterPort { set; get; }
Member Added: public static int maxConnections { set; get; }
Member Added: public static string proxyIP { set; get; }
Member Added: public static int proxyPort { set; get; }
Member Added: public static bool useProxy { set; get; }
Member Added: public static string proxyPassword { set; get; }
New Type: UnityEngine.BitStream
Member Added: public BitStream ();
Member Added: public void Serialize (ref bool value);
Member Added: public void Serialize (ref char value);
Member Added: public void Serialize (ref short value);
Member Added: public void Serialize (ref int value);
Member Added: public void Serialize (ref float value);
Member Added: public void Serialize (ref float value, float maxDelta);
Member Added: public void Serialize (ref UnityEngine.Quaternion value);
Member Added: public void Serialize (ref UnityEngine.Quaternion value, float maxDelta);
Member Added: public void Serialize (ref UnityEngine.Vector3 value);
Member Added: public void Serialize (ref UnityEngine.Vector3 value, float maxDelta);
Member Added: public void Serialize (ref UnityEngine.NetworkPlayer value);
Member Added: public void Serialize (ref UnityEngine.NetworkViewID viewID);
Member Added: public bool isReading { get; }
Member Added: public bool isWriting { get; }
New Type: UnityEngine.RPC
Member Added: public RPC ();
New Type: UnityEngine.HostData
Member Added: public HostData ();
Member Added: public bool useNat { set; get; }
Member Added: public string gameType { set; get; }
Member Added: public string gameName { set; get; }
Member Added: public int connectedPlayers { set; get; }
Member Added: public int playerLimit { set; get; }
Member Added: public string[] ip { set; get; }
Member Added: public int port { set; get; }
Member Added: public bool passwordProtected { set; get; }
Member Added: public string comment { set; get; }
Member Added: public string guid { set; get; }
New Type: UnityEngine.MasterServer
Member Added: public MasterServer ();
Member Added: public static void RequestHostList (string gameTypeName);
Member Added: public static UnityEngine.HostData[] PollHostList ();
Member Added: public static void RegisterHost (string gameTypeName, string gameName, string comment);
Member Added: public static void RegisterHost (string gameTypeName, string gameName);
Member Added: public static void UnregisterHost ();
Member Added: public static void ClearHostList ();
Member Added: public static string ipAddress { set; get; }
Member Added: public static int port { set; get; }
Member Added: public static int updateRate { set; get; }
Member Added: public static bool dedicatedServer { set; get; }
New Type: UnityEngine.NetworkMessageInfo
Member Added: public UnityEngine.NetworkView NullNetworkView ();
Member Added: public double timestamp { get; }
Member Added: public UnityEngine.NetworkPlayer sender { get; }
Member Added: public UnityEngine.NetworkView networkView { get; }
New Type: UnityEngine.ForceMode
Member Added: Force
Member Added: Acceleration
Member Added: Impulse
Member Added: VelocityChange
New Type: UnityEngine.Physics
Member Added: public Physics ();
Member Added: public const int kIgnoreRaycastLayer = 4;
Member Added: public const int kDefaultRaycastLayers = -5;
Member Added: public const int kAllLayers = -1;
Member Added: public static bool Raycast (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, float distance);
Member Added: public static bool Raycast (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction);
Member Added: public static bool Raycast (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, float distance, int layerMask);
Member Added: public static bool Raycast (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, float distance);
Member Added: public static bool Raycast (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo);
Member Added: public static bool Raycast (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, float distance, int layerMask);
Member Added: public static bool Raycast (UnityEngine.Ray ray, float distance);
Member Added: public static bool Raycast (UnityEngine.Ray ray);
Member Added: public static bool Raycast (UnityEngine.Ray ray, float distance, int layerMask);
Member Added: public static bool Raycast (UnityEngine.Ray ray, out UnityEngine.RaycastHit hitInfo, float distance);
Member Added: public static bool Raycast (UnityEngine.Ray ray, out UnityEngine.RaycastHit hitInfo);
Member Added: public static bool Raycast (UnityEngine.Ray ray, out UnityEngine.RaycastHit hitInfo, float distance, int layerMask);
Member Added: public static UnityEngine.RaycastHit[] RaycastAll (UnityEngine.Ray ray, float distance);
Member Added: public static UnityEngine.RaycastHit[] RaycastAll (UnityEngine.Ray ray);
Member Added: public static UnityEngine.RaycastHit[] RaycastAll (UnityEngine.Ray ray, float distance, int layerMask);
Member Added: public static UnityEngine.RaycastHit[] RaycastAll (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, float distance, int layermask);
Member Added: public static UnityEngine.RaycastHit[] RaycastAll (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, float distance);
Member Added: public static UnityEngine.RaycastHit[] RaycastAll (UnityEngine.Vector3 origin, UnityEngine.Vector3 direction);
Member Added: public static bool Linecast (UnityEngine.Vector3 start, UnityEngine.Vector3 end);
Member Added: public static bool Linecast (UnityEngine.Vector3 start, UnityEngine.Vector3 end, int layerMask);
Member Added: public static bool Linecast (UnityEngine.Vector3 start, UnityEngine.Vector3 end, out UnityEngine.RaycastHit hitInfo);
Member Added: public static bool Linecast (UnityEngine.Vector3 start, UnityEngine.Vector3 end, out UnityEngine.RaycastHit hitInfo, int layerMask);
Member Added: public static UnityEngine.Collider[] OverlapSphere (UnityEngine.Vector3 position, float radius, int layerMask);
Member Added: public static UnityEngine.Collider[] OverlapSphere (UnityEngine.Vector3 position, float radius);
Member Added: public static bool CapsuleCast (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction, float distance);
Member Added: public static bool CapsuleCast (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction);
Member Added: public static bool CapsuleCast (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction, float distance, int layerMask);
Member Added: public static bool CapsuleCast (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, float distance);
Member Added: public static bool CapsuleCast (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo);
Member Added: public static bool CapsuleCast (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, float distance, int layerMask);
Member Added: public static bool SphereCast (UnityEngine.Vector3 origin, float radius, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, float distance);
Member Added: public static bool SphereCast (UnityEngine.Vector3 origin, float radius, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo);
Member Added: public static bool SphereCast (UnityEngine.Vector3 origin, float radius, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, float distance, int layerMask);
Member Added: public static bool SphereCast (UnityEngine.Ray ray, float radius, float distance);
Member Added: public static bool SphereCast (UnityEngine.Ray ray, float radius);
Member Added: public static bool SphereCast (UnityEngine.Ray ray, float radius, float distance, int layerMask);
Member Added: public static bool SphereCast (UnityEngine.Ray ray, float radius, out UnityEngine.RaycastHit hitInfo, float distance);
Member Added: public static bool SphereCast (UnityEngine.Ray ray, float radius, out UnityEngine.RaycastHit hitInfo);
Member Added: public static bool SphereCast (UnityEngine.Ray ray, float radius, out UnityEngine.RaycastHit hitInfo, float distance, int layerMask);
Member Added: public static UnityEngine.RaycastHit[] CapsuleCastAll (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction, float distance, int layermask);
Member Added: public static UnityEngine.RaycastHit[] CapsuleCastAll (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction, float distance);
Member Added: public static UnityEngine.RaycastHit[] CapsuleCastAll (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction);
Member Added: public static UnityEngine.RaycastHit[] SphereCastAll (UnityEngine.Vector3 origin, float radius, UnityEngine.Vector3 direction, float distance);
Member Added: public static UnityEngine.RaycastHit[] SphereCastAll (UnityEngine.Vector3 origin, float radius, UnityEngine.Vector3 direction);
Member Added: public static UnityEngine.RaycastHit[] SphereCastAll (UnityEngine.Vector3 origin, float radius, UnityEngine.Vector3 direction, float distance, int layerMask);
Member Added: public static UnityEngine.RaycastHit[] SphereCastAll (UnityEngine.Ray ray, float radius, float distance);
Member Added: public static UnityEngine.RaycastHit[] SphereCastAll (UnityEngine.Ray ray, float radius);
Member Added: public static UnityEngine.RaycastHit[] SphereCastAll (UnityEngine.Ray ray, float radius, float distance, int layerMask);
Member Added: public static bool CheckSphere (UnityEngine.Vector3 position, float radius, int layerMask);
Member Added: public static bool CheckSphere (UnityEngine.Vector3 position, float radius);
Member Added: public static bool CheckCapsule (UnityEngine.Vector3 start, UnityEngine.Vector3 end, float radius, int layermask);
Member Added: public static bool CheckCapsule (UnityEngine.Vector3 start, UnityEngine.Vector3 end, float radius);
Member Added: public static void IgnoreCollision (UnityEngine.Collider collider1, UnityEngine.Collider collider2, bool ignore);
Member Added: public static void IgnoreCollision (UnityEngine.Collider collider1, UnityEngine.Collider collider2);
Member Added: public static void IgnoreLayerCollision (int layer1, int layer2, bool ignore);
Member Added: public static void IgnoreLayerCollision (int layer1, int layer2);
Member Added: public static bool GetIgnoreLayerCollision (int layer1, int layer2);
Member Added: public static UnityEngine.Vector3 gravity { set; get; }
Member Added: public static float minPenetrationForPenalty { set; get; }
Member Added: public static float bounceThreshold { set; get; }
Member Added: public static float bounceTreshold { set; get; }
Member Added: public static float sleepVelocity { set; get; }
Member Added: public static float sleepAngularVelocity { set; get; }
Member Added: public static float maxAngularVelocity { set; get; }
Member Added: public static int solverIterationCount { set; get; }
Member Added: public static float penetrationPenaltyForce { set; get; }
New Type: UnityEngine.RigidbodyConstraints
Member Added: None
Member Added: FreezePositionX
Member Added: FreezePositionY
Member Added: FreezePositionZ
Member Added: FreezeRotationX
Member Added: FreezeRotationY
Member Added: FreezeRotationZ
Member Added: FreezePosition
Member Added: FreezeRotation
Member Added: FreezeAll
New Type: UnityEngine.Rigidbody
Member Added: public Rigidbody ();
Member Added: public void SetDensity (float density);
Member Added: public void AddForce (UnityEngine.Vector3 force, UnityEngine.ForceMode mode);
Member Added: public void AddForce (UnityEngine.Vector3 force);
Member Added: public void AddForce (float x, float y, float z);
Member Added: public void AddForce (float x, float y, float z, UnityEngine.ForceMode mode);
Member Added: public void AddRelativeForce (UnityEngine.Vector3 force, UnityEngine.ForceMode mode);
Member Added: public void AddRelativeForce (UnityEngine.Vector3 force);
Member Added: public void AddRelativeForce (float x, float y, float z);
Member Added: public void AddRelativeForce (float x, float y, float z, UnityEngine.ForceMode mode);
Member Added: public void AddTorque (UnityEngine.Vector3 torque, UnityEngine.ForceMode mode);
Member Added: public void AddTorque (UnityEngine.Vector3 torque);
Member Added: public void AddTorque (float x, float y, float z);
Member Added: public void AddTorque (float x, float y, float z, UnityEngine.ForceMode mode);
Member Added: public void AddRelativeTorque (UnityEngine.Vector3 torque, UnityEngine.ForceMode mode);
Member Added: public void AddRelativeTorque (UnityEngine.Vector3 torque);
Member Added: public void AddRelativeTorque (float x, float y, float z);
Member Added: public void AddRelativeTorque (float x, float y, float z, UnityEngine.ForceMode mode);
Member Added: public void AddForceAtPosition (UnityEngine.Vector3 force, UnityEngine.Vector3 position, UnityEngine.ForceMode mode);
Member Added: public void AddForceAtPosition (UnityEngine.Vector3 force, UnityEngine.Vector3 position);
Member Added: public void AddExplosionForce (float explosionForce, UnityEngine.Vector3 explosionPosition, float explosionRadius, float upwardsModifier, UnityEngine.ForceMode mode);
Member Added: public void AddExplosionForce (float explosionForce, UnityEngine.Vector3 explosionPosition, float explosionRadius, float upwardsModifier);
Member Added: public void AddExplosionForce (float explosionForce, UnityEngine.Vector3 explosionPosition, float explosionRadius);
Member Added: public UnityEngine.Vector3 ClosestPointOnBounds (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Vector3 GetRelativePointVelocity (UnityEngine.Vector3 relativePoint);
Member Added: public UnityEngine.Vector3 GetPointVelocity (UnityEngine.Vector3 worldPoint);
Member Added: public void MovePosition (UnityEngine.Vector3 position);
Member Added: public void MoveRotation (UnityEngine.Quaternion rot);
Member Added: public void Sleep ();
Member Added: public bool IsSleeping ();
Member Added: public void WakeUp ();
Member Added: public bool SweepTest (UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, float distance);
Member Added: public bool SweepTest (UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo);
Member Added: public UnityEngine.RaycastHit[] SweepTestAll (UnityEngine.Vector3 direction, float distance);
Member Added: public UnityEngine.RaycastHit[] SweepTestAll (UnityEngine.Vector3 direction);
Member Added: public void SetMaxAngularVelocity (float a);
Member Added: public UnityEngine.Vector3 velocity { set; get; }
Member Added: public UnityEngine.Vector3 angularVelocity { set; get; }
Member Added: public float drag { set; get; }
Member Added: public float angularDrag { set; get; }
Member Added: public float mass { set; get; }
Member Added: public bool useGravity { set; get; }
Member Added: public bool isKinematic { set; get; }
Member Added: public bool freezeRotation { set; get; }
Member Added: public UnityEngine.RigidbodyConstraints constraints { set; get; }
Member Added: public UnityEngine.CollisionDetectionMode collisionDetectionMode { set; get; }
Member Added: public UnityEngine.Vector3 centerOfMass { set; get; }
Member Added: public UnityEngine.Vector3 worldCenterOfMass { get; }
Member Added: public UnityEngine.Quaternion inertiaTensorRotation { set; get; }
Member Added: public UnityEngine.Vector3 inertiaTensor { set; get; }
Member Added: public bool detectCollisions { set; get; }
Member Added: public bool useConeFriction { set; get; }
Member Added: public UnityEngine.Vector3 position { set; get; }
Member Added: public UnityEngine.Quaternion rotation { set; get; }
Member Added: public UnityEngine.RigidbodyInterpolation interpolation { set; get; }
Member Added: public int solverIterationCount { set; get; }
Member Added: public float sleepVelocity { set; get; }
Member Added: public float sleepAngularVelocity { set; get; }
Member Added: public float maxAngularVelocity { set; get; }
New Type: UnityEngine.RigidbodyInterpolation
Member Added: None
Member Added: Interpolate
Member Added: Extrapolate
New Type: UnityEngine.JointMotor
Member Added: public float targetVelocity { set; get; }
Member Added: public float force { set; get; }
Member Added: public bool freeSpin { set; get; }
New Type: UnityEngine.JointSpring
Member Added: public float spring;
Member Added: public float damper;
Member Added: public float targetPosition;
New Type: UnityEngine.JointLimits
Member Added: public float min { set; get; }
Member Added: public float minBounce { set; get; }
Member Added: public float max { set; get; }
Member Added: public float maxBounce { set; get; }
New Type: UnityEngine.Joint
Member Added: public Joint ();
Member Added: public UnityEngine.Rigidbody connectedBody { set; get; }
Member Added: public UnityEngine.Vector3 axis { set; get; }
Member Added: public UnityEngine.Vector3 anchor { set; get; }
Member Added: public float breakForce { set; get; }
Member Added: public float breakTorque { set; get; }
New Type: UnityEngine.HingeJoint
Member Added: public HingeJoint ();
Member Added: public UnityEngine.JointMotor motor { set; get; }
Member Added: public UnityEngine.JointLimits limits { set; get; }
Member Added: public UnityEngine.JointSpring spring { set; get; }
Member Added: public bool useMotor { set; get; }
Member Added: public bool useLimits { set; get; }
Member Added: public bool useSpring { set; get; }
Member Added: public float velocity { get; }
Member Added: public float angle { get; }
New Type: UnityEngine.SpringJoint
Member Added: public SpringJoint ();
Member Added: public float spring { set; get; }
Member Added: public float damper { set; get; }
Member Added: public float minDistance { set; get; }
Member Added: public float maxDistance { set; get; }
New Type: UnityEngine.FixedJoint
Member Added: public FixedJoint ();
New Type: UnityEngine.SoftJointLimit
Member Added: public float limit { set; get; }
Member Added: public float spring { set; get; }
Member Added: public float damper { set; get; }
Member Added: public float bounciness { set; get; }
Member Added: public float bouncyness { set; get; }
New Type: UnityEngine.JointDriveMode
Member Added: None
Member Added: Position
Member Added: Velocity
Member Added: PositionAndVelocity
New Type: UnityEngine.JointProjectionMode
Member Added: None
Member Added: PositionAndRotation
Member Added: PositionOnly
New Type: UnityEngine.JointDrive
Member Added: public UnityEngine.JointDriveMode mode { set; get; }
Member Added: public float positionSpring { set; get; }
Member Added: public float positionDamper { set; get; }
Member Added: public float maximumForce { set; get; }
New Type: UnityEngine.CharacterJoint
Member Added: public CharacterJoint ();
Member Added: public UnityEngine.Vector3 swingAxis { set; get; }
Member Added: public UnityEngine.SoftJointLimit lowTwistLimit { set; get; }
Member Added: public UnityEngine.SoftJointLimit highTwistLimit { set; get; }
Member Added: public UnityEngine.SoftJointLimit swing1Limit { set; get; }
Member Added: public UnityEngine.SoftJointLimit swing2Limit { set; get; }
Member Added: public UnityEngine.Quaternion targetRotation { set; get; }
Member Added: public UnityEngine.Vector3 targetAngularVelocity { set; get; }
Member Added: public UnityEngine.JointDrive rotationDrive { set; get; }
New Type: UnityEngine.ConfigurableJointMotion
Member Added: Locked
Member Added: Limited
Member Added: Free
New Type: UnityEngine.RotationDriveMode
Member Added: XYAndZ
Member Added: Slerp
New Type: UnityEngine.ConfigurableJoint
Member Added: public ConfigurableJoint ();
Member Added: public UnityEngine.Vector3 secondaryAxis { set; get; }
Member Added: public UnityEngine.ConfigurableJointMotion xMotion { set; get; }
Member Added: public UnityEngine.ConfigurableJointMotion yMotion { set; get; }
Member Added: public UnityEngine.ConfigurableJointMotion zMotion { set; get; }
Member Added: public UnityEngine.ConfigurableJointMotion angularXMotion { set; get; }
Member Added: public UnityEngine.ConfigurableJointMotion angularYMotion { set; get; }
Member Added: public UnityEngine.ConfigurableJointMotion angularZMotion { set; get; }
Member Added: public UnityEngine.SoftJointLimit linearLimit { set; get; }
Member Added: public UnityEngine.SoftJointLimit lowAngularXLimit { set; get; }
Member Added: public UnityEngine.SoftJointLimit highAngularXLimit { set; get; }
Member Added: public UnityEngine.SoftJointLimit angularYLimit { set; get; }
Member Added: public UnityEngine.SoftJointLimit angularZLimit { set; get; }
Member Added: public UnityEngine.Vector3 targetPosition { set; get; }
Member Added: public UnityEngine.Vector3 targetVelocity { set; get; }
Member Added: public UnityEngine.JointDrive xDrive { set; get; }
Member Added: public UnityEngine.JointDrive yDrive { set; get; }
Member Added: public UnityEngine.JointDrive zDrive { set; get; }
Member Added: public UnityEngine.Quaternion targetRotation { set; get; }
Member Added: public UnityEngine.Vector3 targetAngularVelocity { set; get; }
Member Added: public UnityEngine.RotationDriveMode rotationDriveMode { set; get; }
Member Added: public UnityEngine.JointDrive angularXDrive { set; get; }
Member Added: public UnityEngine.JointDrive angularYZDrive { set; get; }
Member Added: public UnityEngine.JointDrive slerpDrive { set; get; }
Member Added: public UnityEngine.JointProjectionMode projectionMode { set; get; }
Member Added: public float projectionDistance { set; get; }
Member Added: public float projectionAngle { set; get; }
Member Added: public bool configuredInWorldSpace { set; get; }
Member Added: public bool swapBodies { set; get; }
New Type: UnityEngine.ConstantForce
Member Added: public ConstantForce ();
Member Added: public UnityEngine.Vector3 force { set; get; }
Member Added: public UnityEngine.Vector3 relativeForce { set; get; }
Member Added: public UnityEngine.Vector3 torque { set; get; }
Member Added: public UnityEngine.Vector3 relativeTorque { set; get; }
New Type: UnityEngine.CollisionDetectionMode
Member Added: Discrete
Member Added: Continuous
Member Added: ContinuousDynamic
New Type: UnityEngine.Collider
Member Added: public Collider ();
Member Added: public UnityEngine.Vector3 ClosestPointOnBounds (UnityEngine.Vector3 position);
Member Added: public bool Raycast (UnityEngine.Ray ray, out UnityEngine.RaycastHit hitInfo, float distance);
Member Added: public bool enabled { set; get; }
Member Added: public UnityEngine.Rigidbody attachedRigidbody { get; }
Member Added: public bool isTrigger { set; get; }
Member Added: public UnityEngine.PhysicMaterial material { set; get; }
Member Added: public UnityEngine.PhysicMaterial sharedMaterial { set; get; }
Member Added: public UnityEngine.Bounds bounds { get; }
New Type: UnityEngine.BoxCollider
Member Added: public BoxCollider ();
Member Added: public UnityEngine.Vector3 center { set; get; }
Member Added: public UnityEngine.Vector3 size { set; get; }
Member Added: public UnityEngine.Vector3 extents { set; get; }
New Type: UnityEngine.SphereCollider
Member Added: public SphereCollider ();
Member Added: public UnityEngine.Vector3 center { set; get; }
Member Added: public float radius { set; get; }
New Type: UnityEngine.MeshCollider
Member Added: public MeshCollider ();
Member Added: public UnityEngine.Mesh mesh { set; get; }
Member Added: public UnityEngine.Mesh sharedMesh { set; get; }
Member Added: public bool convex { set; get; }
Member Added: public bool smoothSphereCollisions { set; get; }
New Type: UnityEngine.CapsuleCollider
Member Added: public CapsuleCollider ();
Member Added: public UnityEngine.Vector3 center { set; get; }
Member Added: public float radius { set; get; }
Member Added: public float height { set; get; }
Member Added: public int direction { set; get; }
New Type: UnityEngine.RaycastCollider
Member Added: public RaycastCollider ();
Member Added: public UnityEngine.Vector3 center { set; get; }
Member Added: public float length { set; get; }
New Type: UnityEngine.WheelFrictionCurve
Member Added: public float extremumSlip { set; get; }
Member Added: public float extremumValue { set; get; }
Member Added: public float asymptoteSlip { set; get; }
Member Added: public float asymptoteValue { set; get; }
Member Added: public float stiffness { set; get; }
New Type: UnityEngine.WheelHit
Member Added: public UnityEngine.Collider collider { set; get; }
Member Added: public UnityEngine.Vector3 point { set; get; }
Member Added: public UnityEngine.Vector3 normal { set; get; }
Member Added: public UnityEngine.Vector3 forwardDir { set; get; }
Member Added: public UnityEngine.Vector3 sidewaysDir { set; get; }
Member Added: public float force { set; get; }
Member Added: public float forwardSlip { set; get; }
Member Added: public float sidewaysSlip { set; get; }
New Type: UnityEngine.WheelCollider
Member Added: public WheelCollider ();
Member Added: public bool GetGroundHit (out UnityEngine.WheelHit hit);
Member Added: public UnityEngine.Vector3 center { set; get; }
Member Added: public float radius { set; get; }
Member Added: public float suspensionDistance { set; get; }
Member Added: public UnityEngine.JointSpring suspensionSpring { set; get; }
Member Added: public float mass { set; get; }
Member Added: public UnityEngine.WheelFrictionCurve forwardFriction { set; get; }
Member Added: public UnityEngine.WheelFrictionCurve sidewaysFriction { set; get; }
Member Added: public float motorTorque { set; get; }
Member Added: public float brakeTorque { set; get; }
Member Added: public float steerAngle { set; get; }
Member Added: public bool isGrounded { get; }
Member Added: public float rpm { get; }
New Type: UnityEngine.RaycastHit
Member Added: public UnityEngine.Vector3 point { set; get; }
Member Added: public UnityEngine.Vector3 normal { set; get; }
Member Added: public UnityEngine.Vector3 barycentricCoordinate { set; get; }
Member Added: public float distance { set; get; }
Member Added: public int triangleIndex { get; }
Member Added: public UnityEngine.Vector2 textureCoord { get; }
Member Added: public UnityEngine.Vector2 textureCoord2 { get; }
Member Added: public UnityEngine.Vector2 textureCoord1 { get; }
Member Added: public UnityEngine.Vector2 lightmapCoord { get; }
Member Added: public UnityEngine.Collider collider { get; }
Member Added: public UnityEngine.Rigidbody rigidbody { get; }
Member Added: public UnityEngine.Transform transform { get; }
New Type: UnityEngine.PhysicMaterialCombine
Member Added: Average
Member Added: Multiply
Member Added: Minimum
Member Added: Maximum
New Type: UnityEngine.PhysicMaterial
Member Added: public PhysicMaterial ();
Member Added: public PhysicMaterial (string name);
Member Added: public float dynamicFriction { set; get; }
Member Added: public float staticFriction { set; get; }
Member Added: public float bounciness { set; get; }
Member Added: public float bouncyness { set; get; }
Member Added: public UnityEngine.Vector3 frictionDirection2 { set; get; }
Member Added: public float dynamicFriction2 { set; get; }
Member Added: public float staticFriction2 { set; get; }
Member Added: public UnityEngine.PhysicMaterialCombine frictionCombine { set; get; }
Member Added: public UnityEngine.PhysicMaterialCombine bounceCombine { set; get; }
Member Added: public UnityEngine.Vector3 frictionDirection { set; get; }
New Type: UnityEngine.ContactPoint
Member Added: public UnityEngine.Vector3 point { get; }
Member Added: public UnityEngine.Vector3 normal { get; }
Member Added: public UnityEngine.Collider thisCollider { get; }
Member Added: public UnityEngine.Collider otherCollider { get; }
New Type: UnityEngine.Collision
Member Added: public Collision ();
Member Added: public virtual System.Collections.IEnumerator GetEnumerator ();
Member Added: public UnityEngine.Vector3 relativeVelocity { get; }
Member Added: public UnityEngine.Rigidbody rigidbody { get; }
Member Added: public UnityEngine.Collider collider { get; }
Member Added: public UnityEngine.Transform transform { get; }
Member Added: public UnityEngine.GameObject gameObject { get; }
Member Added: public UnityEngine.ContactPoint[] contacts { get; }
Member Added: public UnityEngine.Vector3 impactForceSum { get; }
Member Added: public UnityEngine.Vector3 frictionForceSum { get; }
Member Added: public UnityEngine.Component other { get; }
New Type: UnityEngine.CollisionFlags
Member Added: None
Member Added: Sides
Member Added: Above
Member Added: Below
Member Added: CollidedSides
Member Added: CollidedAbove
Member Added: CollidedBelow
New Type: UnityEngine.ControllerColliderHit
Member Added: public ControllerColliderHit ();
Member Added: public UnityEngine.CharacterController controller { get; }
Member Added: public UnityEngine.Collider collider { get; }
Member Added: public UnityEngine.Rigidbody rigidbody { get; }
Member Added: public UnityEngine.GameObject gameObject { get; }
Member Added: public UnityEngine.Transform transform { get; }
Member Added: public UnityEngine.Vector3 point { get; }
Member Added: public UnityEngine.Vector3 normal { get; }
Member Added: public UnityEngine.Vector3 moveDirection { get; }
Member Added: public float moveLength { get; }
New Type: UnityEngine.CharacterController
Member Added: public CharacterController ();
Member Added: public bool SimpleMove (UnityEngine.Vector3 speed);
Member Added: public UnityEngine.CollisionFlags Move (UnityEngine.Vector3 motion);
Member Added: public bool isGrounded { get; }
Member Added: public UnityEngine.Vector3 velocity { get; }
Member Added: public UnityEngine.CollisionFlags collisionFlags { get; }
Member Added: public float radius { set; get; }
Member Added: public float height { set; get; }
Member Added: public UnityEngine.Vector3 center { set; get; }
Member Added: public float slopeLimit { set; get; }
Member Added: public float stepOffset { set; get; }
Member Added: public bool detectCollisions { set; get; }
New Type: UnityEngine.Cloth
Member Added: public Cloth ();
Member Added: public float bendingStiffness { set; get; }
Member Added: public float stretchingStiffness { set; get; }
Member Added: public float damping { set; get; }
Member Added: public float thickness { set; get; }
Member Added: public UnityEngine.Vector3 externalAcceleration { set; get; }
Member Added: public UnityEngine.Vector3 randomAcceleration { set; get; }
Member Added: public bool useGravity { set; get; }
Member Added: public bool selfCollision { set; get; }
Member Added: public bool enabled { set; get; }
Member Added: public UnityEngine.Vector3[] vertices { get; }
Member Added: public UnityEngine.Vector3[] normals { get; }
New Type: UnityEngine.InteractiveCloth
Member Added: public InteractiveCloth ();
Member Added: public void AddForceAtPosition (UnityEngine.Vector3 force, UnityEngine.Vector3 position, float radius, UnityEngine.ForceMode mode);
Member Added: public void AddForceAtPosition (UnityEngine.Vector3 force, UnityEngine.Vector3 position, float radius);
Member Added: public void AttachToCollider (UnityEngine.Collider collider, bool tearable, bool twoWayInteraction);
Member Added: public void AttachToCollider (UnityEngine.Collider collider, bool tearable);
Member Added: public void AttachToCollider (UnityEngine.Collider collider);
Member Added: public void DetachFromCollider (UnityEngine.Collider collider);
Member Added: public UnityEngine.Mesh mesh { set; get; }
Member Added: public float friction { set; get; }
Member Added: public float density { set; get; }
Member Added: public float pressure { set; get; }
Member Added: public float collisionResponse { set; get; }
Member Added: public float tearFactor { set; get; }
Member Added: public float attachmentTearFactor { set; get; }
Member Added: public float attachmentResponse { set; get; }
Member Added: public bool isTeared { get; }
New Type: UnityEngine.ClothSkinningCoefficient
Member Added: public float maxDistance;
Member Added: public float maxDistanceBias;
Member Added: public float collisionSphereRadius;
Member Added: public float collisionSphereDistance;
New Type: UnityEngine.SkinnedCloth
Member Added: public SkinnedCloth ();
Member Added: public void SetEnabledFading (bool enabled, float interpolationTime);
Member Added: public void SetEnabledFading (bool enabled);
Member Added: public UnityEngine.ClothSkinningCoefficient[] coefficients { set; get; }
Member Added: public float worldVelocityScale { set; get; }
Member Added: public float worldAccelerationScale { set; get; }
New Type: UnityEngine.ClothRenderer
Member Added: public ClothRenderer ();
Member Added: public bool pauseWhenNotVisible { set; get; }
New Type: UnityEngine.ParticleSystemRenderMode
Member Added: Billboard
Member Added: Stretch
Member Added: HorizontalBillboard
Member Added: VerticalBillboard
Member Added: Mesh
New Type: UnityEngine.ParticleSystem
Member Added: public ParticleSystem ();
Member Added: public void SetParticles (UnityEngine.ParticleSystem.Particle[] particles, int size);
Member Added: public int GetParticles (UnityEngine.ParticleSystem.Particle[] particles);
Member Added: public void Simulate (float t);
Member Added: public void Play ();
Member Added: public void Stop ();
Member Added: public void Pause ();
Member Added: public void Clear ();
Member Added: public bool IsAlive ();
Member Added: public void Emit (int count);
Member Added: public float startDelay { set; get; }
Member Added: public bool isPlaying { get; }
Member Added: public bool loop { set; get; }
Member Added: public bool playOnAwake { set; get; }
Member Added: public float time { set; get; }
Member Added: public float duration { get; }
Member Added: public float playbackSpeed { set; get; }
Member Added: public int particleCount { get; }
Member Added: public bool enableEmission { set; get; }
Member Added: public float emissionRate { set; get; }
Member Added: public float startSpeed { set; get; }
Member Added: public float startSize { set; get; }
Member Added: public UnityEngine.Color startColor { set; get; }
Member Added: public float startRotation { set; get; }
Member Added: public float startLifetime { set; get; }
Member Added: public float gravityModifier { set; get; }
New Type: UnityEngine.ParticleSystem/Particle
Member Added: public UnityEngine.Vector3 position { set; get; }
Member Added: public UnityEngine.Vector3 velocity { set; get; }
Member Added: public float lifetime { set; get; }
Member Added: public float startLifetime { set; get; }
Member Added: public float size { set; get; }
Member Added: public float rotation { set; get; }
Member Added: public float angularVelocity { set; get; }
Member Added: public UnityEngine.Color32 color { set; get; }
Member Added: public float randomValue { set; get; }
Updating: UnityEngine.ParticleSystem/Particle
New Type: UnityEngine.ParticleSystemRenderer
Member Added: public ParticleSystemRenderer ();
Member Added: public UnityEngine.ParticleSystemRenderMode renderMode { set; get; }
Member Added: public float lengthScale { set; get; }
Member Added: public float velocityScale { set; get; }
Member Added: public float cameraVelocityScale { set; get; }
Member Added: public float maxParticleSize { set; get; }
Member Added: public UnityEngine.Mesh mesh { set; get; }
New Type: UnityEngine.TextAsset
Member Added: public TextAsset ();
Member Added: public override string ToString ();
Member Added: public string text { get; }
Member Added: public byte[] bytes { get; }
New Type: UnityEngine.ProceduralProcessorUsage
Member Added: Unsupported
Member Added: One
Member Added: Half
Member Added: All
New Type: UnityEngine.ProceduralCacheSize
Member Added: Tiny
Member Added: Medium
Member Added: Heavy
Member Added: NoLimit
Member Added: None
New Type: UnityEngine.ProceduralPropertyType
Member Added: Boolean
Member Added: Float
Member Added: Vector2
Member Added: Vector3
Member Added: Vector4
Member Added: Color3
Member Added: Color4
Member Added: Enum
Member Added: Texture
New Type: UnityEngine.ProceduralPropertyDescription
Member Added: public ProceduralPropertyDescription ();
Member Added: public string name;
Member Added: public string group;
Member Added: public UnityEngine.ProceduralPropertyType type;
Member Added: public bool hasRange;
Member Added: public float minimum;
Member Added: public float maximum;
Member Added: public float step;
Member Added: public string[] enumOptions;
New Type: UnityEngine.ProceduralMaterial
Member Added: public ProceduralMaterial ();
Member Added: public UnityEngine.ProceduralPropertyDescription[] GetProceduralPropertyDescriptions ();
Member Added: public bool HasProceduralProperty (string inputName);
Member Added: public bool GetProceduralBoolean (string inputName);
Member Added: public void SetProceduralBoolean (string inputName, bool value);
Member Added: public float GetProceduralFloat (string inputName);
Member Added: public void SetProceduralFloat (string inputName, float value);
Member Added: public UnityEngine.Vector4 GetProceduralVector (string inputName);
Member Added: public void SetProceduralVector (string inputName, UnityEngine.Vector4 value);
Member Added: public UnityEngine.Color GetProceduralColor (string inputName);
Member Added: public void SetProceduralColor (string inputName, UnityEngine.Color value);
Member Added: public int GetProceduralEnum (string inputName);
Member Added: public void SetProceduralEnum (string inputName, int value);
Member Added: public UnityEngine.Texture2D GetProceduralTexture (string inputName);
Member Added: public void SetProceduralTexture (string inputName, UnityEngine.Texture2D value);
Member Added: public bool IsProceduralPropertyCached (string inputName);
Member Added: public void CacheProceduralProperty (string inputName, bool value);
Member Added: public void ClearCache ();
Member Added: public void RebuildTextures ();
Member Added: public void RebuildTexturesImmediately ();
Member Added: public static void StopRebuilds ();
Member Added: public UnityEngine.ProceduralCacheSize cacheSize { set; get; }
Member Added: public int animationUpdateRate { set; get; }
Member Added: public bool isProcessing { get; }
Member Added: public bool isLoadTimeGenerated { set; get; }
Member Added: public static bool isSupported { get; }
Member Added: public static UnityEngine.ProceduralProcessorUsage substanceProcessorUsage { set; get; }
New Type: UnityEngine.TreePrototype
Member Added: public TreePrototype ();
Member Added: public UnityEngine.GameObject prefab { set; get; }
Member Added: public float bendFactor { set; get; }
New Type: UnityEngine.DetailRenderMode
Member Added: GrassBillboard
Member Added: VertexLit
Member Added: Grass
New Type: UnityEngine.DetailPrototype
Member Added: public DetailPrototype ();
Member Added: public UnityEngine.GameObject prototype { set; get; }
Member Added: public UnityEngine.Texture2D prototypeTexture { set; get; }
Member Added: public float minWidth { set; get; }
Member Added: public float maxWidth { set; get; }
Member Added: public float minHeight { set; get; }
Member Added: public float maxHeight { set; get; }
Member Added: public float noiseSpread { set; get; }
Member Added: public float bendFactor { set; get; }
Member Added: public UnityEngine.Color healthyColor { set; get; }
Member Added: public UnityEngine.Color dryColor { set; get; }
Member Added: public UnityEngine.DetailRenderMode renderMode { set; get; }
Member Added: public bool usePrototypeMesh { set; get; }
New Type: UnityEngine.SplatPrototype
Member Added: public SplatPrototype ();
Member Added: public UnityEngine.Texture2D texture { set; get; }
Member Added: public UnityEngine.Vector2 tileSize { set; get; }
Member Added: public UnityEngine.Vector2 tileOffset { set; get; }
New Type: UnityEngine.TerrainData
Member Added: public TerrainData ();
Member Added: public float GetHeight (int x, int y);
Member Added: public float GetInterpolatedHeight (float x, float y);
Member Added: public float[,] GetHeights (int xBase, int yBase, int width, int height);
Member Added: public void SetHeights (int xBase, int yBase, float[,] heights);
Member Added: public float GetSteepness (float x, float y);
Member Added: public UnityEngine.Vector3 GetInterpolatedNormal (float x, float y);
Member Added: public void SetDetailResolution (int detailResolution, int resolutionPerPatch);
Member Added: public void RefreshPrototypes ();
Member Added: public int[] GetSupportedLayers (int xBase, int yBase, int totalWidth, int totalHeight);
Member Added: public int[,] GetDetailLayer (int xBase, int yBase, int width, int height, int layer);
Member Added: public void SetDetailLayer (int xBase, int yBase, int layer, int[,] details);
Member Added: public float[,,] GetAlphamaps (int x, int y, int width, int height);
Member Added: public void SetAlphamaps (int x, int y, float[,,] map);
Member Added: public int heightmapWidth { get; }
Member Added: public int heightmapHeight { get; }
Member Added: public int heightmapResolution { set; get; }
Member Added: public UnityEngine.Vector3 heightmapScale { get; }
Member Added: public UnityEngine.Vector3 size { set; get; }
Member Added: public float wavingGrassStrength { set; get; }
Member Added: public float wavingGrassAmount { set; get; }
Member Added: public float wavingGrassSpeed { set; get; }
Member Added: public UnityEngine.Color wavingGrassTint { set; get; }
Member Added: public int detailWidth { get; }
Member Added: public int detailHeight { get; }
Member Added: public int detailResolution { get; }
Member Added: public UnityEngine.DetailPrototype[] detailPrototypes { set; get; }
Member Added: public UnityEngine.TreeInstance[] treeInstances { set; get; }
Member Added: public UnityEngine.TreePrototype[] treePrototypes { set; get; }
Member Added: public int alphamapLayers { get; }
Member Added: public int alphamapResolution { set; get; }
Member Added: public int alphamapWidth { get; }
Member Added: public int alphamapHeight { get; }
Member Added: public int baseMapResolution { set; get; }
Member Added: public UnityEngine.SplatPrototype[] splatPrototypes { set; get; }
New Type: UnityEngine.TreeInstance
Member Added: public UnityEngine.Vector3 position { set; get; }
Member Added: public float widthScale { set; get; }
Member Added: public float heightScale { set; get; }
Member Added: public UnityEngine.Color color { set; get; }
Member Added: public UnityEngine.Color lightmapColor { set; get; }
Member Added: public int prototypeIndex { set; get; }
New Type: UnityEngine.TerrainRenderFlags
Member Added: heightmap
Member Added: trees
Member Added: details
Member Added: all
New Type: UnityEngine.Terrain
Member Added: public Terrain ();
Member Added: public float SampleHeight (UnityEngine.Vector3 worldPosition);
Member Added: public static UnityEngine.GameObject CreateTerrainGameObject (UnityEngine.TerrainData assignTerrain);
Member Added: public void AddTreeInstance (UnityEngine.TreeInstance instance);
Member Added: public void SetNeighbors (UnityEngine.Terrain left, UnityEngine.Terrain top, UnityEngine.Terrain right, UnityEngine.Terrain bottom);
Member Added: public UnityEngine.Vector3 GetPosition ();
Member Added: public void Flush ();
Member Added: public static UnityEngine.Terrain activeTerrain { get; }
Member Added: public UnityEngine.TerrainData terrainData { set; get; }
Member Added: public float treeDistance { set; get; }
Member Added: public float treeBillboardDistance { set; get; }
Member Added: public float treeCrossFadeLength { set; get; }
Member Added: public int treeMaximumFullLODCount { set; get; }
Member Added: public float detailObjectDistance { set; get; }
Member Added: public float detailObjectDensity { set; get; }
Member Added: public float heightmapPixelError { set; get; }
Member Added: public int heightmapMaximumLOD { set; get; }
Member Added: public float basemapDistance { set; get; }
Member Added: public float splatmapDistance { set; get; }
Member Added: public int lightmapIndex { set; get; }
Member Added: public bool castShadows { set; get; }
Member Added: public UnityEngine.TerrainRenderFlags editorRenderFlags { set; get; }
New Type: UnityEngine.Tree
Member Added: public Tree ();
Member Added: public UnityEngine.ScriptableObject data { set; get; }
New Type: UnityEngine.TerrainCollider
Member Added: public TerrainCollider ();
Member Added: public UnityEngine.TerrainData terrainData { set; get; }
New Type: UnityEngine.WWWForm
Member Added: public WWWForm ();
Member Added: public void AddField (string fieldName, string value);
Member Added: public void AddField (string fieldName, string value, System.Text.Encoding e);
Member Added: public void AddField (string fieldName, int i);
Member Added: public void AddBinaryData (string fieldName, byte[] contents, string fileName);
Member Added: public void AddBinaryData (string fieldName, byte[] contents);
Member Added: public void AddBinaryData (string fieldName, byte[] contents, string fileName, string mimeType);
Member Added: public System.Collections.Hashtable headers { get; }
Member Added: public byte[] data { get; }
New Type: UnityEngine.CacheIndex
Member Added: public string name;
Member Added: public int bytesUsed;
Member Added: public int expires;
New Type: UnityEngine.Caching
Member Added: public Caching ();
Member Added: public static bool Authorize (string name, string domain, long size, string signature);
Member Added: public static bool Authorize (string name, string domain, long size, int expiration, string signature);
Member Added: public static bool Authorize (string name, string domain, int size, int expiration, string signature);
Member Added: public static bool Authorize (string name, string domain, int size, string signature);
Member Added: public static bool CleanCache ();
Member Added: public static bool CleanNamedCache (string name);
Member Added: public static bool DeleteFromCache (string url);
Member Added: public static int GetVersionFromCache (string url);
Member Added: public static bool IsVersionCached (string url, int version);
Member Added: public static bool MarkAsUsed (string url, int version);
Member Added: public static void SetNoBackupFlag (string url, int version);
Member Added: public static void ResetNoBackupFlag (string url, int version);
Member Added: public static UnityEngine.CacheIndex[] index { get; }
Member Added: public static long spaceFree { get; }
Member Added: public static long maximumAvailableDiskSpace { set; get; }
Member Added: public static long spaceOccupied { get; }
Member Added: public static int spaceAvailable { get; }
Member Added: public static int spaceUsed { get; }
Member Added: public static int expirationDelay { set; get; }
Member Added: public static bool enabled { set; get; }
Member Added: public static bool ready { get; }
New Type: UnityEngine.AsyncOperation
Member Added: public AsyncOperation ();
Member Added: ~AsyncOperation ();
Member Added: public bool isDone { get; }
Member Added: public float progress { get; }
Member Added: public int priority { set; get; }
New Type: UnityEngine.NetworkReachability
Member Added: NotReachable
Member Added: ReachableViaCarrierDataNetwork
Member Added: ReachableViaLocalAreaNetwork
New Type: UnityEngine.Application
Member Added: public Application ();
Member Added: public static void Quit ();
Member Added: public static void CancelQuit ();
Member Added: public static void LoadLevel (int index);
Member Added: public static void LoadLevel (string name);
Member Added: public static UnityEngine.AsyncOperation LoadLevelAsync (int index);
Member Added: public static UnityEngine.AsyncOperation LoadLevelAsync (string levelName);
Member Added: public static UnityEngine.AsyncOperation LoadLevelAdditiveAsync (int index);
Member Added: public static UnityEngine.AsyncOperation LoadLevelAdditiveAsync (string levelName);
Member Added: public static void LoadLevelAdditive (int index);
Member Added: public static void LoadLevelAdditive (string name);
Member Added: public static float GetStreamProgressForLevel (int levelIndex);
Member Added: public static float GetStreamProgressForLevel (string levelName);
Member Added: public static bool CanStreamedLevelBeLoaded (int levelIndex);
Member Added: public static bool CanStreamedLevelBeLoaded (string levelName);
Member Added: public static void CaptureScreenshot (string filename, int superSize);
Member Added: public static void CaptureScreenshot (string filename);
Member Added: public static void DontDestroyOnLoad (UnityEngine.Object mono);
Member Added: public static void ExternalCall (string functionName, object[] args);
Member Added: public static void ExternalEval (string script);
Member Added: public static void OpenURL (string url);
Member Added: public static void CommitSuicide (int mode);
Member Added: public static void RegisterLogCallback (UnityEngine.Application.LogCallback handler);
Member Added: public static void RegisterLogCallbackThreaded (UnityEngine.Application.LogCallback handler);
Member Added: public static UnityEngine.AsyncOperation RequestUserAuthorization (UnityEngine.UserAuthorization mode);
Member Added: public static bool HasUserAuthorization (UnityEngine.UserAuthorization mode);
Member Added: public static int loadedLevel { get; }
Member Added: public static string loadedLevelName { get; }
Member Added: public static bool isLoadingLevel { get; }
Member Added: public static int levelCount { get; }
Member Added: public static int streamedBytes { get; }
Member Added: public static bool isPlaying { get; }
Member Added: public static bool isEditor { get; }
Member Added: public static bool isWebPlayer { get; }
Member Added: public static UnityEngine.RuntimePlatform platform { get; }
Member Added: public static bool runInBackground { set; get; }
Member Added: public static bool isPlayer { get; }
Member Added: public static string dataPath { get; }
Member Added: public static string streamingAssetsPath { get; }
Member Added: public static string persistentDataPath { get; }
Member Added: public static string temporaryCachePath { get; }
Member Added: public static string srcValue { get; }
Member Added: public static string absoluteURL { get; }
Member Added: public static string absoluteUrl { get; }
Member Added: public static string unityVersion { get; }
Member Added: public static bool webSecurityEnabled { get; }
Member Added: public static string webSecurityHostUrl { get; }
Member Added: public static int targetFrameRate { set; get; }
Member Added: public static UnityEngine.SystemLanguage systemLanguage { get; }
Member Added: public static UnityEngine.ThreadPriority backgroundLoadingPriority { set; get; }
Member Added: public static UnityEngine.NetworkReachability internetReachability { get; }
Member Added: public static bool genuine { get; }
Member Added: public static bool genuineCheckAvailable { get; }
New Type: UnityEngine.Application/LogCallback
New Type: UnityEngine.UserAuthorization
Member Added: WebCam
Member Added: Microphone
New Type: UnityEngine.Behaviour
Member Added: public Behaviour ();
Member Added: public bool enabled { set; get; }
New Type: UnityEngine.RenderingPath
Member Added: UsePlayerSettings
Member Added: VertexLit
Member Added: Forward
Member Added: DeferredLighting
New Type: UnityEngine.Camera
Member Added: public Camera ();
Member Added: public void ResetWorldToCameraMatrix ();
Member Added: public void ResetProjectionMatrix ();
Member Added: public void ResetAspect ();
Member Added: public UnityEngine.Vector3 WorldToScreenPoint (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Vector3 WorldToViewportPoint (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Vector3 ViewportToWorldPoint (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Vector3 ScreenToWorldPoint (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Vector3 ScreenToViewportPoint (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Vector3 ViewportToScreenPoint (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Ray ViewportPointToRay (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Ray ScreenPointToRay (UnityEngine.Vector3 position);
Member Added: public float GetScreenWidth ();
Member Added: public float GetScreenHeight ();
Member Added: public void DoClear ();
Member Added: public void Render ();
Member Added: public void RenderWithShader (UnityEngine.Shader shader, string replacementTag);
Member Added: public void SetReplacementShader (UnityEngine.Shader shader, string replacementTag);
Member Added: public void ResetReplacementShader ();
Member Added: public void RenderDontRestore ();
Member Added: public static void SetupCurrent (UnityEngine.Camera cur);
Member Added: public bool RenderToCubemap (UnityEngine.Cubemap cubemap);
Member Added: public bool RenderToCubemap (UnityEngine.Cubemap cubemap, int faceMask);
Member Added: public bool RenderToCubemap (UnityEngine.RenderTexture cubemap);
Member Added: public bool RenderToCubemap (UnityEngine.RenderTexture cubemap, int faceMask);
Member Added: public void CopyFrom (UnityEngine.Camera other);
Member Added: public float fov { set; get; }
Member Added: public float near { set; get; }
Member Added: public float far { set; get; }
Member Added: public float fieldOfView { set; get; }
Member Added: public float nearClipPlane { set; get; }
Member Added: public float farClipPlane { set; get; }
Member Added: public UnityEngine.RenderingPath renderingPath { set; get; }
Member Added: public UnityEngine.RenderingPath actualRenderingPath { get; }
Member Added: public bool hdr { set; get; }
Member Added: public float orthographicSize { set; get; }
Member Added: public bool orthographic { set; get; }
Member Added: public bool isOrthoGraphic { set; get; }
Member Added: public float depth { set; get; }
Member Added: public float aspect { set; get; }
Member Added: public int cullingMask { set; get; }
Member Added: public UnityEngine.Color backgroundColor { set; get; }
Member Added: public UnityEngine.Rect rect { set; get; }
Member Added: public UnityEngine.Rect pixelRect { set; get; }
Member Added: public UnityEngine.RenderTexture targetTexture { set; get; }
Member Added: public float pixelWidth { get; }
Member Added: public float pixelHeight { get; }
Member Added: public UnityEngine.Matrix4x4 cameraToWorldMatrix { get; }
Member Added: public UnityEngine.Matrix4x4 worldToCameraMatrix { set; get; }
Member Added: public UnityEngine.Matrix4x4 projectionMatrix { set; get; }
Member Added: public UnityEngine.Vector3 velocity { get; }
Member Added: public UnityEngine.CameraClearFlags clearFlags { set; get; }
Member Added: public static UnityEngine.Camera main { get; }
Member Added: public static UnityEngine.Camera current { get; }
Member Added: public static UnityEngine.Camera[] allCameras { get; }
Member Added: public static UnityEngine.Camera mainCamera { get; }
Member Added: public bool useOcclusionCulling { set; get; }
Member Added: public float[] layerCullDistances { set; get; }
Member Added: public bool layerCullSpherical { set; get; }
Member Added: public UnityEngine.DepthTextureMode depthTextureMode { set; get; }
New Type: UnityEngine.Debug
Member Added: public Debug ();
Member Added: public static void DrawLine (UnityEngine.Vector3 start, UnityEngine.Vector3 end, UnityEngine.Color color, float duration, bool depthTest);
Member Added: public static void DrawLine (UnityEngine.Vector3 start, UnityEngine.Vector3 end, UnityEngine.Color color, float duration);
Member Added: public static void DrawLine (UnityEngine.Vector3 start, UnityEngine.Vector3 end, UnityEngine.Color color);
Member Added: public static void DrawLine (UnityEngine.Vector3 start, UnityEngine.Vector3 end);
Member Added: public static void DrawRay (UnityEngine.Vector3 start, UnityEngine.Vector3 dir, UnityEngine.Color color, float duration);
Member Added: public static void DrawRay (UnityEngine.Vector3 start, UnityEngine.Vector3 dir, UnityEngine.Color color);
Member Added: public static void DrawRay (UnityEngine.Vector3 start, UnityEngine.Vector3 dir);
Member Added: public static void DrawRay (UnityEngine.Vector3 start, UnityEngine.Vector3 dir, UnityEngine.Color color, float duration, bool depthTest);
Member Added: public static void Break ();
Member Added: public static void DebugBreak ();
Member Added: public static void Log (object message);
Member Added: public static void Log (object message, UnityEngine.Object context);
Member Added: public static void LogError (object message);
Member Added: public static void LogError (object message, UnityEngine.Object context);
Member Added: public static void LogWarning (object message);
Member Added: public static void LogWarning (object message, UnityEngine.Object context);
Member Added: public static bool isDebugBuild { get; }
New Type: UnityEngine.Flash.ActionScript
Member Added: public ActionScript ();
Member Added: public static void Import (string package);
Member Added: public static void Statement (string formatString, object[] arguments);
Member Added: public static T Expression<T> (string formatString, object[] arguments);
Namespace Directory Created: UnityEngine.Flash
New Namespace File: UnityEngine.Flash
New Type: UnityEngine.NotConvertedAttribute
Member Added: public NotConvertedAttribute ();
New Type: UnityEngine.NotRenamedAttribute
Member Added: public NotRenamedAttribute ();
New Type: UnityEngine.MonoBehaviour
Member Added: public MonoBehaviour ();
Member Added: public void Invoke (string methodName, float time);
Member Added: public void InvokeRepeating (string methodName, float time, float repeatRate);
Member Added: public void CancelInvoke ();
Member Added: public void CancelInvoke (string methodName);
Member Added: public bool IsInvoking (string methodName);
Member Added: public bool IsInvoking ();
Member Added: public UnityEngine.Coroutine StartCoroutine (System.Collections.IEnumerator routine);
Member Added: public UnityEngine.Coroutine StartCoroutine_Auto (System.Collections.IEnumerator routine);
Member Added: public UnityEngine.Coroutine StartCoroutine (string methodName, object value);
Member Added: public UnityEngine.Coroutine StartCoroutine (string methodName);
Member Added: public void StopCoroutine (string methodName);
Member Added: public void StopAllCoroutines ();
Member Added: public static void print (object message);
Member Added: public bool useGUILayout { set; get; }
New Type: UnityEngine.TouchPhase
Member Added: Began
Member Added: Moved
Member Added: Stationary
Member Added: Ended
Member Added: Canceled
New Type: UnityEngine.IMECompositionMode
Member Added: Auto
Member Added: On
Member Added: Off
New Type: UnityEngine.Touch
Member Added: public int fingerId { get; }
Member Added: public UnityEngine.Vector2 position { get; }
Member Added: public UnityEngine.Vector2 deltaPosition { get; }
Member Added: public float deltaTime { get; }
Member Added: public int tapCount { get; }
Member Added: public UnityEngine.TouchPhase phase { get; }
New Type: UnityEngine.DeviceOrientation
Member Added: Unknown
Member Added: Portrait
Member Added: PortraitUpsideDown
Member Added: LandscapeLeft
Member Added: LandscapeRight
Member Added: FaceUp
Member Added: FaceDown
New Type: UnityEngine.AccelerationEvent
Member Added: public UnityEngine.Vector3 acceleration { get; }
Member Added: public float deltaTime { get; }
New Type: UnityEngine.Gyroscope
Member Added: public UnityEngine.Vector3 rotationRate { get; }
Member Added: public UnityEngine.Vector3 rotationRateUnbiased { get; }
Member Added: public UnityEngine.Vector3 gravity { get; }
Member Added: public UnityEngine.Vector3 userAcceleration { get; }
Member Added: public UnityEngine.Quaternion attitude { get; }
Member Added: public bool enabled { set; get; }
Member Added: public float updateInterval { set; get; }
New Type: UnityEngine.LocationInfo
Member Added: public float latitude { get; }
Member Added: public float longitude { get; }
Member Added: public float altitude { get; }
Member Added: public float horizontalAccuracy { get; }
Member Added: public float verticalAccuracy { get; }
Member Added: public double timestamp { get; }
New Type: UnityEngine.LocationServiceStatus
Member Added: Stopped
Member Added: Initializing
Member Added: Running
Member Added: Failed
New Type: UnityEngine.LocationService
Member Added: public LocationService ();
Member Added: public void Start (float desiredAccuracyInMeters, float updateDistanceInMeters);
Member Added: public void Start (float desiredAccuracyInMeters);
Member Added: public void Start ();
Member Added: public void Stop ();
Member Added: public bool isEnabledByUser { get; }
Member Added: public UnityEngine.LocationServiceStatus status { get; }
Member Added: public UnityEngine.LocationInfo lastData { get; }
New Type: UnityEngine.Compass
Member Added: public Compass ();
Member Added: public float magneticHeading { get; }
Member Added: public float trueHeading { get; }
Member Added: public UnityEngine.Vector3 rawVector { get; }
Member Added: public double timestamp { get; }
Member Added: public bool enabled { set; get; }
New Type: UnityEngine.Input
Member Added: public Input ();
Member Added: public static float GetAxis (string axisName);
Member Added: public static float GetAxisRaw (string axisName);
Member Added: public static bool GetButton (string buttonName);
Member Added: public static bool GetButtonDown (string buttonName);
Member Added: public static bool GetButtonUp (string buttonName);
Member Added: public static bool GetKey (string name);
Member Added: public static bool GetKey (UnityEngine.KeyCode key);
Member Added: public static bool GetKeyDown (string name);
Member Added: public static bool GetKeyDown (UnityEngine.KeyCode key);
Member Added: public static bool GetKeyUp (string name);
Member Added: public static bool GetKeyUp (UnityEngine.KeyCode key);
Member Added: public static string[] GetJoystickNames ();
Member Added: public static bool GetMouseButton (int button);
Member Added: public static bool GetMouseButtonDown (int button);
Member Added: public static bool GetMouseButtonUp (int button);
Member Added: public static void ResetInputAxes ();
Member Added: public static UnityEngine.AccelerationEvent GetAccelerationEvent (int index);
Member Added: public static UnityEngine.Touch GetTouch (int index);
Member Added: public static UnityEngine.Quaternion GetRotation (int deviceID);
Member Added: public static UnityEngine.Vector3 GetPosition (int deviceID);
Member Added: public static bool isGyroAvailable { get; }
Member Added: public static UnityEngine.Gyroscope gyro { get; }
Member Added: public static UnityEngine.Vector3 mousePosition { get; }
Member Added: public static bool anyKey { get; }
Member Added: public static bool anyKeyDown { get; }
Member Added: public static string inputString { get; }
Member Added: public static UnityEngine.Vector3 acceleration { get; }
Member Added: public static UnityEngine.AccelerationEvent[] accelerationEvents { get; }
Member Added: public static int accelerationEventCount { get; }
Member Added: public static UnityEngine.Touch[] touches { get; }
Member Added: public static int touchCount { get; }
Member Added: public static bool eatKeyPressOnTextFieldFocus { set; get; }
Member Added: public static bool multiTouchEnabled { set; get; }
Member Added: public static UnityEngine.LocationService location { get; }
Member Added: public static UnityEngine.Compass compass { get; }
Member Added: public static UnityEngine.DeviceOrientation deviceOrientation { get; }
Member Added: public static UnityEngine.IMECompositionMode imeCompositionMode { set; get; }
Member Added: public static string compositionString { get; }
Member Added: public static UnityEngine.Vector2 compositionCursorPos { set; get; }
Member Added: public static bool imeIsSelected { get; }
New Type: UnityEngine.Object
Member Added: public Object ();
Member Added: public override bool Equals (object o);
Member Added: public override int GetHashCode ();
Member Added: public int GetInstanceID ();
Member Added: public static UnityEngine.Object Instantiate (UnityEngine.Object original, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation);
Member Added: public static UnityEngine.Object Instantiate (UnityEngine.Object original);
Member Added: public static void Destroy (UnityEngine.Object obj, float t);
Member Added: public static void Destroy (UnityEngine.Object obj);
Member Added: public static void DestroyImmediate (UnityEngine.Object obj, bool allowDestroyingAssets);
Member Added: public static void DestroyImmediate (UnityEngine.Object obj);
Member Added: public static UnityEngine.Object[] FindObjectsOfType (Type type);
Member Added: public static UnityEngine.Object FindObjectOfType (Type type);
Member Added: public static void DontDestroyOnLoad (UnityEngine.Object target);
Member Added: public static void DestroyObject (UnityEngine.Object obj, float t);
Member Added: public static void DestroyObject (UnityEngine.Object obj);
Member Added: public static UnityEngine.Object[] FindSceneObjectsOfType (Type type);
Member Added: public static UnityEngine.Object[] FindObjectsOfTypeIncludingAssets (Type type);
Member Added: public static UnityEngine.Object[] FindObjectsOfTypeAll (Type type);
Member Added: public override string ToString ();
Member Added: public static bool op_Implicit (UnityEngine.Object exists);
Member Added: public static bool op_Equality (UnityEngine.Object x, UnityEngine.Object y);
Member Added: public static bool op_Inequality (UnityEngine.Object x, UnityEngine.Object y);
Member Added: public string name { set; get; }
Member Added: public UnityEngine.HideFlags hideFlags { set; get; }
New Type: UnityEngine.Component
Member Added: public Component ();
Member Added: public UnityEngine.Component GetComponent (Type type);
Member Added: public T GetComponent<T> () where T : UnityEngine.Component;
Member Added: public UnityEngine.Component GetComponent (string type);
Member Added: public UnityEngine.Component GetComponentInChildren (Type t);
Member Added: public T GetComponentInChildren<T> () where T : UnityEngine.Component;
Member Added: public UnityEngine.Component[] GetComponentsInChildren (Type t);
Member Added: public UnityEngine.Component[] GetComponentsInChildren (Type t, bool includeInactive);
Member Added: public T[] GetComponentsInChildren<T> (bool includeInactive) where T : UnityEngine.Component;
Member Added: public T[] GetComponentsInChildren<T> () where T : UnityEngine.Component;
Member Added: public UnityEngine.Component[] GetComponents (Type type);
Member Added: public T[] GetComponents<T> () where T : UnityEngine.Component;
Member Added: public bool CompareTag (string tag);
Member Added: public void SendMessageUpwards (string methodName, object value, UnityEngine.SendMessageOptions options);
Member Added: public void SendMessageUpwards (string methodName, object value);
Member Added: public void SendMessageUpwards (string methodName);
Member Added: public void SendMessageUpwards (string methodName, UnityEngine.SendMessageOptions options);
Member Added: public void SendMessage (string methodName, object value, UnityEngine.SendMessageOptions options);
Member Added: public void SendMessage (string methodName, object value);
Member Added: public void SendMessage (string methodName);
Member Added: public void SendMessage (string methodName, UnityEngine.SendMessageOptions options);
Member Added: public void BroadcastMessage (string methodName, object parameter, UnityEngine.SendMessageOptions options);
Member Added: public void BroadcastMessage (string methodName, object parameter);
Member Added: public void BroadcastMessage (string methodName);
Member Added: public void BroadcastMessage (string methodName, UnityEngine.SendMessageOptions options);
Member Added: public UnityEngine.Transform transform { get; }
Member Added: public UnityEngine.Rigidbody rigidbody { get; }
Member Added: public UnityEngine.Camera camera { get; }
Member Added: public UnityEngine.Light light { get; }
Member Added: public UnityEngine.Animation animation { get; }
Member Added: public UnityEngine.ConstantForce constantForce { get; }
Member Added: public UnityEngine.Renderer renderer { get; }
Member Added: public UnityEngine.AudioSource audio { get; }
Member Added: public UnityEngine.GUIText guiText { get; }
Member Added: public UnityEngine.NetworkView networkView { get; }
Member Added: public UnityEngine.GUIElement guiElement { get; }
Member Added: public UnityEngine.GUITexture guiTexture { get; }
Member Added: public UnityEngine.Collider collider { get; }
Member Added: public UnityEngine.HingeJoint hingeJoint { get; }
Member Added: public UnityEngine.ParticleEmitter particleEmitter { get; }
Member Added: public UnityEngine.ParticleSystem particleSystem { get; }
Member Added: public UnityEngine.GameObject gameObject { get; }
Member Added: public bool active { set; get; }
Member Added: public string tag { set; get; }
New Type: UnityEngine.Light
Member Added: public Light ();
Member Added: public static UnityEngine.Light[] GetLights (UnityEngine.LightType type, int layer);
Member Added: public UnityEngine.LightType type { set; get; }
Member Added: public UnityEngine.Color color { set; get; }
Member Added: public float intensity { set; get; }
Member Added: public UnityEngine.LightShadows shadows { set; get; }
Member Added: public float shadowStrength { set; get; }
Member Added: public float shadowBias { set; get; }
Member Added: public float shadowSoftness { set; get; }
Member Added: public float shadowSoftnessFade { set; get; }
Member Added: public float range { set; get; }
Member Added: public float spotAngle { set; get; }
Member Added: public UnityEngine.Texture cookie { set; get; }
Member Added: public UnityEngine.Flare flare { set; get; }
Member Added: public UnityEngine.LightRenderMode renderMode { set; get; }
Member Added: public int cullingMask { set; get; }
Member Added: public UnityEngine.Vector2 areaSize { set; get; }
Member Added: public static int pixelLightCount { set; get; }
Member Added: public float shadowConstantBias { set; get; }
Member Added: public float shadowObjectSizeBias { set; get; }
Member Added: public bool attenuate { set; get; }
New Type: UnityEngine.GameObject
Member Added: public GameObject (string name);
Member Added: public GameObject ();
Member Added: public GameObject (string name, Type[] components);
Member Added: public static UnityEngine.GameObject CreatePrimitive (UnityEngine.PrimitiveType type);
Member Added: public UnityEngine.Component GetComponent (Type type);
Member Added: public T GetComponent<T> () where T : UnityEngine.Component;
Member Added: public UnityEngine.Component GetComponent (string type);
Member Added: public UnityEngine.Component GetComponentInChildren (Type type);
Member Added: public T GetComponentInChildren<T> () where T : UnityEngine.Component;
Member Added: public UnityEngine.Component[] GetComponents (Type type);
Member Added: public T[] GetComponents<T> () where T : UnityEngine.Component;
Member Added: public UnityEngine.Component[] GetComponentsInChildren (Type type);
Member Added: public UnityEngine.Component[] GetComponentsInChildren (Type type, bool includeInactive);
Member Added: public T[] GetComponentsInChildren<T> (bool includeInactive) where T : UnityEngine.Component;
Member Added: public T[] GetComponentsInChildren<T> () where T : UnityEngine.Component;
Member Added: public void SetActiveRecursively (bool state);
Member Added: public bool CompareTag (string tag);
Member Added: public static UnityEngine.GameObject FindGameObjectWithTag (string tag);
Member Added: public static UnityEngine.GameObject FindWithTag (string tag);
Member Added: public static UnityEngine.GameObject[] FindGameObjectsWithTag (string tag);
Member Added: public void SendMessageUpwards (string methodName, object value, UnityEngine.SendMessageOptions options);
Member Added: public void SendMessageUpwards (string methodName, object value);
Member Added: public void SendMessageUpwards (string methodName);
Member Added: public void SendMessageUpwards (string methodName, UnityEngine.SendMessageOptions options);
Member Added: public void SendMessage (string methodName, object value, UnityEngine.SendMessageOptions options);
Member Added: public void SendMessage (string methodName, object value);
Member Added: public void SendMessage (string methodName);
Member Added: public void SendMessage (string methodName, UnityEngine.SendMessageOptions options);
Member Added: public void BroadcastMessage (string methodName, object parameter, UnityEngine.SendMessageOptions options);
Member Added: public void BroadcastMessage (string methodName, object parameter);
Member Added: public void BroadcastMessage (string methodName);
Member Added: public void BroadcastMessage (string methodName, UnityEngine.SendMessageOptions options);
Member Added: public UnityEngine.Component AddComponent (string className);
Member Added: public UnityEngine.Component AddComponent (Type componentType);
Member Added: public T AddComponent<T> () where T : UnityEngine.Component;
Member Added: public void SampleAnimation (UnityEngine.AnimationClip animation, float time);
Member Added: public void PlayAnimation (UnityEngine.AnimationClip animation);
Member Added: public void StopAnimation ();
Member Added: public static UnityEngine.GameObject Find (string name);
Member Added: public bool isStatic { set; get; }
Member Added: public UnityEngine.Transform transform { get; }
Member Added: public UnityEngine.Rigidbody rigidbody { get; }
Member Added: public UnityEngine.Camera camera { get; }
Member Added: public UnityEngine.Light light { get; }
Member Added: public UnityEngine.Animation animation { get; }
Member Added: public UnityEngine.ConstantForce constantForce { get; }
Member Added: public UnityEngine.Renderer renderer { get; }
Member Added: public UnityEngine.AudioSource audio { get; }
Member Added: public UnityEngine.GUIText guiText { get; }
Member Added: public UnityEngine.NetworkView networkView { get; }
Member Added: public UnityEngine.GUIElement guiElement { get; }
Member Added: public UnityEngine.GUITexture guiTexture { get; }
Member Added: public UnityEngine.Collider collider { get; }
Member Added: public UnityEngine.HingeJoint hingeJoint { get; }
Member Added: public UnityEngine.ParticleEmitter particleEmitter { get; }
Member Added: public int layer { set; get; }
Member Added: public bool active { set; get; }
Member Added: public string tag { set; get; }
Member Added: public UnityEngine.GameObject gameObject { get; }
New Type: UnityEngine.Transform
Member Added: public void Translate (UnityEngine.Vector3 translation);
Member Added: public void Translate (UnityEngine.Vector3 translation, UnityEngine.Space relativeTo);
Member Added: public void Translate (float x, float y, float z);
Member Added: public void Translate (float x, float y, float z, UnityEngine.Space relativeTo);
Member Added: public void Translate (UnityEngine.Vector3 translation, UnityEngine.Transform relativeTo);
Member Added: public void Translate (float x, float y, float z, UnityEngine.Transform relativeTo);
Member Added: public void Rotate (UnityEngine.Vector3 eulerAngles);
Member Added: public void Rotate (UnityEngine.Vector3 eulerAngles, UnityEngine.Space relativeTo);
Member Added: public void Rotate (float xAngle, float yAngle, float zAngle);
Member Added: public void Rotate (float xAngle, float yAngle, float zAngle, UnityEngine.Space relativeTo);
Member Added: public void Rotate (UnityEngine.Vector3 axis, float angle);
Member Added: public void Rotate (UnityEngine.Vector3 axis, float angle, UnityEngine.Space relativeTo);
Member Added: public void RotateAround (UnityEngine.Vector3 point, UnityEngine.Vector3 axis, float angle);
Member Added: public void LookAt (UnityEngine.Transform target);
Member Added: public void LookAt (UnityEngine.Transform target, UnityEngine.Vector3 worldUp);
Member Added: public void LookAt (UnityEngine.Vector3 worldPosition, UnityEngine.Vector3 worldUp);
Member Added: public void LookAt (UnityEngine.Vector3 worldPosition);
Member Added: public UnityEngine.Vector3 TransformDirection (UnityEngine.Vector3 direction);
Member Added: public UnityEngine.Vector3 TransformDirection (float x, float y, float z);
Member Added: public UnityEngine.Vector3 InverseTransformDirection (UnityEngine.Vector3 direction);
Member Added: public UnityEngine.Vector3 InverseTransformDirection (float x, float y, float z);
Member Added: public UnityEngine.Vector3 TransformPoint (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Vector3 TransformPoint (float x, float y, float z);
Member Added: public UnityEngine.Vector3 InverseTransformPoint (UnityEngine.Vector3 position);
Member Added: public UnityEngine.Vector3 InverseTransformPoint (float x, float y, float z);
Member Added: public void DetachChildren ();
Member Added: public UnityEngine.Transform Find (string name);
Member Added: public bool IsChildOf (UnityEngine.Transform parent);
Member Added: public UnityEngine.Transform FindChild (string name);
Member Added: public System.Collections.IEnumerator GetEnumerator ();
Member Added: public void RotateAround (UnityEngine.Vector3 axis, float angle);
Member Added: public void RotateAroundLocal (UnityEngine.Vector3 axis, float angle);
Member Added: public UnityEngine.Transform GetChild (int index);
Member Added: public int GetChildCount ();
Member Added: public UnityEngine.Vector3 position { set; get; }
Member Added: public UnityEngine.Vector3 localPosition { set; get; }
Member Added: public UnityEngine.Vector3 eulerAngles { set; get; }
Member Added: public UnityEngine.Vector3 localEulerAngles { set; get; }
Member Added: public UnityEngine.Vector3 right { set; get; }
Member Added: public UnityEngine.Vector3 up { set; get; }
Member Added: public UnityEngine.Vector3 forward { set; get; }
Member Added: public UnityEngine.Quaternion rotation { set; get; }
Member Added: public UnityEngine.Quaternion localRotation { set; get; }
Member Added: public UnityEngine.Vector3 localScale { set; get; }
Member Added: public UnityEngine.Transform parent { set; get; }
Member Added: public UnityEngine.Matrix4x4 worldToLocalMatrix { get; }
Member Added: public UnityEngine.Matrix4x4 localToWorldMatrix { get; }
Member Added: public UnityEngine.Transform root { get; }
Member Added: public int childCount { get; }
Member Added: public UnityEngine.Vector3 lossyScale { get; }
New Type: UnityEngine.Time
Member Added: public Time ();
Member Added: public static float time { get; }
Member Added: public static float timeSinceLevelLoad { get; }
Member Added: public static float deltaTime { get; }
Member Added: public static float fixedTime { get; }
Member Added: public static float fixedDeltaTime { set; get; }
Member Added: public static float maximumDeltaTime { set; get; }
Member Added: public static float smoothDeltaTime { get; }
Member Added: public static float timeScale { set; get; }
Member Added: public static int frameCount { get; }
Member Added: public static int renderedFrameCount { get; }
Member Added: public static float realtimeSinceStartup { get; }
Member Added: public static int captureFramerate { set; get; }
New Type: UnityEngine.Random
Member Added: public Random ();
Member Added: public static float Range (float min, float max);
Member Added: public static int Range (int min, int max);
Member Added: public static float RandomRange (float min, float max);
Member Added: public static int RandomRange (int min, int max);
Member Added: public static int seed { set; get; }
Member Added: public static float value { get; }
Member Added: public static UnityEngine.Vector3 insideUnitSphere { get; }
Member Added: public static UnityEngine.Vector2 insideUnitCircle { get; }
Member Added: public static UnityEngine.Vector3 onUnitSphere { get; }
Member Added: public static UnityEngine.Quaternion rotation { get; }
New Type: UnityEngine.YieldInstruction
Member Added: public YieldInstruction ();
New Type: UnityEngine.WebCamFlags
Member Added: FrontFacing
New Type: UnityEngine.WebCamDevice
Member Added: public string name { get; }
Member Added: public bool isFrontFacing { get; }
New Type: UnityEngine.WebCamTexture
Member Added: public WebCamTexture (string deviceName, int requestedWidth, int requestedHeight, int requestedFPS);
Member Added: public WebCamTexture (string deviceName, int requestedWidth, int requestedHeight);
Member Added: public WebCamTexture (string deviceName);
Member Added: public WebCamTexture (int requestedWidth, int requestedHeight, int requestedFPS);
Member Added: public WebCamTexture (int requestedWidth, int requestedHeight);
Member Added: public WebCamTexture ();
Member Added: public void Play ();
Member Added: public void Pause ();
Member Added: public void Stop ();
Member Added: public UnityEngine.Color GetPixel (int x, int y);
Member Added: public UnityEngine.Color[] GetPixels ();
Member Added: public UnityEngine.Color[] GetPixels (int x, int y, int blockWidth, int blockHeight);
Member Added: public UnityEngine.Color32[] GetPixels32 (UnityEngine.Color32[] colors);
Member Added: public UnityEngine.Color32[] GetPixels32 ();
Member Added: public bool isPlaying { get; }
Member Added: public string deviceName { set; get; }
Member Added: public float requestedFPS { set; get; }
Member Added: public int requestedWidth { set; get; }
Member Added: public int requestedHeight { set; get; }
Member Added: public static UnityEngine.WebCamDevice[] devices { get; }
Member Added: public bool didUpdateThisFrame { get; }
New Type: UnityEngine.jvalue
Member Added: public bool z;
Member Added: public byte b;
Member Added: public char c;
Member Added: public short s;
Member Added: public int i;
Member Added: public long j;
Member Added: public float f;
Member Added: public double d;
Member Added: public IntPtr l;
New Type: UnityEngine.AndroidJNIHelper
Member Added: public AndroidJNIHelper ();
Member Added: public static bool debug;
Member Added: public static IntPtr GetConstructorID (IntPtr javaClass, string signature);
Member Added: public static IntPtr GetConstructorID (IntPtr javaClass);
Member Added: public static IntPtr GetMethodID (IntPtr javaClass, string methodName, string signature, bool isStatic);
Member Added: public static IntPtr GetMethodID (IntPtr javaClass, string methodName, string signature);
Member Added: public static IntPtr GetMethodID (IntPtr javaClass, string methodName);
Member Added: public static IntPtr GetFieldID (IntPtr javaClass, string fieldName, string signature, bool isStatic);
Member Added: public static IntPtr GetFieldID (IntPtr javaClass, string fieldName, string signature);
Member Added: public static IntPtr GetFieldID (IntPtr javaClass, string fieldName);
Member Added: public static IntPtr CreateJavaRunnable (UnityEngine.AndroidJavaRunnable runnable);
Member Added: public static IntPtr ConvertToJNIArray (Array array);
Member Added: public static UnityEngine.jvalue[] CreateJNIArgArray (object[] args);
Member Added: public static IntPtr GetConstructorID (IntPtr jclass, object[] args);
Member Added: public static IntPtr GetMethodID (IntPtr jclass, string methodName, object[] args, bool isStatic);
Member Added: public static string GetSignature (object obj);
Member Added: public static string GetSignature (object[] args);
Member Added: public static ArrayType ConvertFromJNIArray<ArrayType> (IntPtr array);
Member Added: public static IntPtr GetMethodID<ReturnType> (IntPtr jclass, string methodName, object[] args, bool isStatic);
Member Added: public static IntPtr GetFieldID<FieldType> (IntPtr jclass, string fieldName, bool isStatic);
Member Added: public static string GetSignature<ReturnType> (object[] args);
New Type: UnityEngine.AndroidJNI
Member Added: public AndroidJNI ();
Member Added: public static int AttachCurrentThread ();
Member Added: public static int DetachCurrentThread ();
Member Added: public static int GetVersion ();
Member Added: public static IntPtr FindClass (string name);
Member Added: public static IntPtr FromReflectedMethod (IntPtr refMethod);
Member Added: public static IntPtr FromReflectedField (IntPtr refField);
Member Added: public static IntPtr ToReflectedMethod (IntPtr clazz, IntPtr methodID, bool isStatic);
Member Added: public static IntPtr ToReflectedField (IntPtr clazz, IntPtr fieldID, bool isStatic);
Member Added: public static IntPtr GetSuperclass (IntPtr clazz);
Member Added: public static bool IsAssignableFrom (IntPtr clazz1, IntPtr clazz2);
Member Added: public static int Throw (IntPtr obj);
Member Added: public static int ThrowNew (IntPtr clazz, string message);
Member Added: public static IntPtr ExceptionOccurred ();
Member Added: public static void ExceptionDescribe ();
Member Added: public static void ExceptionClear ();
Member Added: public static void FatalError (string message);
Member Added: public static int PushLocalFrame (int capacity);
Member Added: public static IntPtr PopLocalFrame (IntPtr result);
Member Added: public static IntPtr NewGlobalRef (IntPtr obj);
Member Added: public static void DeleteGlobalRef (IntPtr obj);
Member Added: public static IntPtr NewLocalRef (IntPtr obj);
Member Added: public static void DeleteLocalRef (IntPtr obj);
Member Added: public static bool IsSameObject (IntPtr obj1, IntPtr obj2);
Member Added: public static int EnsureLocalCapacity (int capacity);
Member Added: public static IntPtr AllocObject (IntPtr clazz);
Member Added: public static IntPtr NewObject (IntPtr clazz, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static IntPtr GetObjectClass (IntPtr obj);
Member Added: public static bool IsInstanceOf (IntPtr obj, IntPtr clazz);
Member Added: public static IntPtr GetMethodID (IntPtr clazz, string name, string sig);
Member Added: public static IntPtr GetFieldID (IntPtr clazz, string name, string sig);
Member Added: public static IntPtr GetStaticMethodID (IntPtr clazz, string name, string sig);
Member Added: public static IntPtr GetStaticFieldID (IntPtr clazz, string name, string sig);
Member Added: public static IntPtr NewStringUTF (string bytes);
Member Added: public static int GetStringUTFLength (IntPtr str);
Member Added: public static string GetStringUTFChars (IntPtr str);
Member Added: public static string CallStringMethod (IntPtr obj, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static IntPtr CallObjectMethod (IntPtr obj, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static int CallIntMethod (IntPtr obj, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static bool CallBooleanMethod (IntPtr obj, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static short CallShortMethod (IntPtr obj, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static byte CallByteMethod (IntPtr obj, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static char CallCharMethod (IntPtr obj, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static float CallFloatMethod (IntPtr obj, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static double CallDoubleMethod (IntPtr obj, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static long CallLongMethod (IntPtr obj, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static void CallVoidMethod (IntPtr obj, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static string GetStringField (IntPtr obj, IntPtr fieldID);
Member Added: public static IntPtr GetObjectField (IntPtr obj, IntPtr fieldID);
Member Added: public static bool GetBooleanField (IntPtr obj, IntPtr fieldID);
Member Added: public static byte GetByteField (IntPtr obj, IntPtr fieldID);
Member Added: public static char GetCharField (IntPtr obj, IntPtr fieldID);
Member Added: public static short GetShortField (IntPtr obj, IntPtr fieldID);
Member Added: public static int GetIntField (IntPtr obj, IntPtr fieldID);
Member Added: public static long GetLongField (IntPtr obj, IntPtr fieldID);
Member Added: public static float GetFloatField (IntPtr obj, IntPtr fieldID);
Member Added: public static double GetDoubleField (IntPtr obj, IntPtr fieldID);
Member Added: public static void SetStringField (IntPtr obj, IntPtr fieldID, string val);
Member Added: public static void SetObjectField (IntPtr obj, IntPtr fieldID, IntPtr val);
Member Added: public static void SetBooleanField (IntPtr obj, IntPtr fieldID, bool val);
Member Added: public static void SetByteField (IntPtr obj, IntPtr fieldID, byte val);
Member Added: public static void SetCharField (IntPtr obj, IntPtr fieldID, char val);
Member Added: public static void SetShortField (IntPtr obj, IntPtr fieldID, short val);
Member Added: public static void SetIntField (IntPtr obj, IntPtr fieldID, int val);
Member Added: public static void SetLongField (IntPtr obj, IntPtr fieldID, long val);
Member Added: public static void SetFloatField (IntPtr obj, IntPtr fieldID, float val);
Member Added: public static void SetDoubleField (IntPtr obj, IntPtr fieldID, double val);
Member Added: public static string CallStaticStringMethod (IntPtr clazz, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static IntPtr CallStaticObjectMethod (IntPtr clazz, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static int CallStaticIntMethod (IntPtr clazz, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static bool CallStaticBooleanMethod (IntPtr clazz, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static short CallStaticShortMethod (IntPtr clazz, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static byte CallStaticByteMethod (IntPtr clazz, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static char CallStaticCharMethod (IntPtr clazz, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static float CallStaticFloatMethod (IntPtr clazz, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static double CallStaticDoubleMethod (IntPtr clazz, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static long CallStaticLongMethod (IntPtr clazz, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static void CallStaticVoidMethod (IntPtr clazz, IntPtr methodID, UnityEngine.jvalue[] args);
Member Added: public static string GetStaticStringField (IntPtr clazz, IntPtr fieldID);
Member Added: public static IntPtr GetStaticObjectField (IntPtr clazz, IntPtr fieldID);
Member Added: public static bool GetStaticBooleanField (IntPtr clazz, IntPtr fieldID);
Member Added: public static byte GetStaticByteField (IntPtr clazz, IntPtr fieldID);
Member Added: public static char GetStaticCharField (IntPtr clazz, IntPtr fieldID);
Member Added: public static short GetStaticShortField (IntPtr clazz, IntPtr fieldID);
Member Added: public static long GetStaticIntField (IntPtr clazz, IntPtr fieldID);
Member Added: public static long GetStaticLongField (IntPtr clazz, IntPtr fieldID);
Member Added: public static float GetStaticFloatField (IntPtr clazz, IntPtr fieldID);
Member Added: public static double GetStaticDoubleField (IntPtr clazz, IntPtr fieldID);
Member Added: public static void SetStaticStringField (IntPtr clazz, IntPtr fieldID, string val);
Member Added: public static void SetStaticObjectField (IntPtr clazz, IntPtr fieldID, IntPtr val);
Member Added: public static void SetStaticBooleanField (IntPtr clazz, IntPtr fieldID, bool val);
Member Added: public static void SetStaticByteField (IntPtr clazz, IntPtr fieldID, byte val);
Member Added: public static void SetStaticCharField (IntPtr clazz, IntPtr fieldID, char val);
Member Added: public static void SetStaticShortField (IntPtr clazz, IntPtr fieldID, short val);
Member Added: public static void SetStaticIntField (IntPtr clazz, IntPtr fieldID, int val);
Member Added: public static void SetStaticLongField (IntPtr clazz, IntPtr fieldID, long val);
Member Added: public static void SetStaticFloatField (IntPtr clazz, IntPtr fieldID, float val);
Member Added: public static void SetStaticDoubleField (IntPtr clazz, IntPtr fieldID, double val);
Member Added: public static IntPtr ToBooleanArray (bool[] array);
Member Added: public static IntPtr ToByteArray (byte[] array);
Member Added: public static IntPtr ToCharArray (char[] array);
Member Added: public static IntPtr ToShortArray (short[] array);
Member Added: public static IntPtr ToIntArray (int[] array);
Member Added: public static IntPtr ToLongArray (long[] array);
Member Added: public static IntPtr ToFloatArray (float[] array);
Member Added: public static IntPtr ToDoubleArray (double[] array);
Member Added: public static IntPtr ToObjectArray (IntPtr[] array);
Member Added: public static bool[] FromBooleanArray (IntPtr array);
Member Added: public static byte[] FromByteArray (IntPtr array);
Member Added: public static char[] FromCharArray (IntPtr array);
Member Added: public static short[] FromShortArray (IntPtr array);
Member Added: public static int[] FromIntArray (IntPtr array);
Member Added: public static long[] FromLongArray (IntPtr array);
Member Added: public static float[] FromFloatArray (IntPtr array);
Member Added: public static double[] FromDoubleArray (IntPtr array);
Member Added: public static IntPtr[] FromObjectArray (IntPtr array);
Member Added: public static int GetArrayLength (IntPtr array);
Member Added: public static IntPtr NewBooleanArray (int size);
Member Added: public static IntPtr NewByteArray (int size);
Member Added: public static IntPtr NewCharArray (int size);
Member Added: public static IntPtr NewShortArray (int size);
Member Added: public static IntPtr NewIntArray (int size);
Member Added: public static IntPtr NewLongArray (int size);
Member Added: public static IntPtr NewFloatArray (int size);
Member Added: public static IntPtr NewDoubleArray (int size);
Member Added: public static IntPtr NewObjectArray (int size, IntPtr clazz, IntPtr obj);
Member Added: public static bool GetBooleanArrayElement (IntPtr array, int index);
Member Added: public static byte GetByteArrayElement (IntPtr array, int index);
Member Added: public static char GetCharArrayElement (IntPtr array, int index);
Member Added: public static short GetShortArrayElement (IntPtr array, int index);
Member Added: public static int GetIntArrayElement (IntPtr array, int index);
Member Added: public static long GetLongArrayElement (IntPtr array, int index);
Member Added: public static float GetFloatArrayElement (IntPtr array, int index);
Member Added: public static double GetDoubleArrayElement (IntPtr array, int index);
Member Added: public static IntPtr GetObjectArrayElement (IntPtr array, int index);
Member Added: public static void SetBooleanArrayElement (IntPtr array, int index, byte val);
Member Added: public static void SetByteArrayElement (IntPtr array, int index, sbyte val);
Member Added: public static void SetCharArrayElement (IntPtr array, int index, char val);
Member Added: public static void SetShortArrayElement (IntPtr array, int index, short val);
Member Added: public static void SetIntArrayElement (IntPtr array, int index, int val);
Member Added: public static void SetLongArrayElement (IntPtr array, int index, long val);
Member Added: public static void SetFloatArrayElement (IntPtr array, int index, float val);
Member Added: public static void SetDoubleArrayElement (IntPtr array, int index, double val);
Member Added: public static void SetObjectArrayElement (IntPtr array, int index, IntPtr obj);
New Type: UnityEngine.ObstacleAvoidanceType
Member Added: NoObstacleAvoidance
Member Added: LowQualityObstacleAvoidance
Member Added: MedQualityObstacleAvoidance
Member Added: GoodQualityObstacleAvoidance
Member Added: HighQualityObstacleAvoidance
New Type: UnityEngine.NavMeshAgent
Member Added: public NavMeshAgent ();
Member Added: public bool SetDestination (UnityEngine.Vector3 target);
Member Added: public void ActivateCurrentOffMeshLink (bool activated);
Member Added: public void CompleteOffMeshLink ();
Member Added: public void Move (UnityEngine.Vector3 offset);
Member Added: public void Stop (bool stopUpdates);
Member Added: public void Stop ();
Member Added: public void Resume ();
Member Added: public void ResetPath ();
Member Added: public bool SetPath (UnityEngine.NavMeshPath path);
Member Added: public bool FindClosestEdge (out UnityEngine.NavMeshHit hit);
Member Added: public bool Raycast (UnityEngine.Vector3 targetPosition, out UnityEngine.NavMeshHit hit);
Member Added: public bool CalculatePath (UnityEngine.Vector3 targetPosition, UnityEngine.NavMeshPath path);
Member Added: public bool SamplePathPosition (int passableMask, float maxDistance, out UnityEngine.NavMeshHit hit);
Member Added: public void SetLayerCost (int layer, float cost);
Member Added: public float GetLayerCost (int layer);
Member Added: public UnityEngine.Vector3 destination { set; get; }
Member Added: public float stoppingDistance { set; get; }
Member Added: public UnityEngine.Vector3 velocity { set; get; }
Member Added: public UnityEngine.Vector3 nextPosition { set; get; }
Member Added: public UnityEngine.Vector3 steeringTarget { get; }
Member Added: public UnityEngine.Vector3 desiredVelocity { get; }
Member Added: public float remainingDistance { get; }
Member Added: public float baseOffset { set; get; }
Member Added: public bool isOnOffMeshLink { get; }
Member Added: public UnityEngine.OffMeshLinkData currentOffMeshLinkData { get; }
Member Added: public bool autoTraverseOffMeshLink { set; get; }
Member Added: public bool autoRepath { set; get; }
Member Added: public bool hasPath { get; }
Member Added: public bool pathPending { get; }
Member Added: public bool isPathStale { get; }
Member Added: public UnityEngine.NavMeshPathStatus pathStatus { get; }
Member Added: public UnityEngine.Vector3 pathEndPosition { get; }
Member Added: public UnityEngine.NavMeshPath path { set; get; }
Member Added: public int walkableMask { set; get; }
Member Added: public float speed { set; get; }
Member Added: public float angularSpeed { set; get; }
Member Added: public float acceleration { set; get; }
Member Added: public bool updatePosition { set; get; }
Member Added: public bool updateRotation { set; get; }
Member Added: public float radius { set; get; }
Member Added: public float height { set; get; }
Member Added: public UnityEngine.ObstacleAvoidanceType obstacleAvoidanceType { set; get; }
New Type: UnityEngine.OffMeshLinkType
Member Added: LinkTypeManual
Member Added: LinkTypeDropDown
Member Added: LinkTypeJumpAcross
New Type: UnityEngine.OffMeshLinkData
Member Added: public bool valid { get; }
Member Added: public bool activated { get; }
Member Added: public UnityEngine.OffMeshLinkType linkType { get; }
Member Added: public UnityEngine.Vector3 startPos { get; }
Member Added: public UnityEngine.Vector3 endPos { get; }
Member Added: public UnityEngine.OffMeshLink offMeshLink { get; }
New Type: UnityEngine.NavMeshHit
Member Added: public UnityEngine.Vector3 position { set; get; }
Member Added: public UnityEngine.Vector3 normal { set; get; }
Member Added: public float distance { set; get; }
Member Added: public int mask { set; get; }
Member Added: public bool hit { set; get; }
New Type: UnityEngine.NavMesh
Member Added: public NavMesh ();
Member Added: public static bool Raycast (UnityEngine.Vector3 sourcePosition, UnityEngine.Vector3 targetPosition, out UnityEngine.NavMeshHit hit, int passableMask);
Member Added: public static bool CalculatePath (UnityEngine.Vector3 sourcePosition, UnityEngine.Vector3 targetPosition, int passableMask, UnityEngine.NavMeshPath path);
Member Added: public static bool FindClosestEdge (UnityEngine.Vector3 sourcePosition, out UnityEngine.NavMeshHit hit, int passableMask);
Member Added: public static bool SamplePosition (UnityEngine.Vector3 sourcePosition, out UnityEngine.NavMeshHit hit, float maxDistance, int allowedMask);
Member Added: public static void SetLayerCost (int layer, float cost);
Member Added: public static float GetLayerCost (int layer);
Member Added: public static int GetNavMeshLayerFromName (string layerName);
New Type: UnityEngine.OffMeshLink
Member Added: public OffMeshLink ();
Member Added: public bool activated { set; get; }
Member Added: public bool occupied { get; }
Member Added: public float costOverride { set; get; }
New Type: UnityEngine.NavMeshPathStatus
Member Added: PathComplete
Member Added: PathPartial
Member Added: PathInvalid
New Type: UnityEngine.NavMeshPath
Member Added: public NavMeshPath ();
Member Added: ~NavMeshPath ();
Member Added: public void ClearCorners ();
Member Added: public UnityEngine.Vector3[] corners { get; }
Member Added: public UnityEngine.NavMeshPathStatus status { get; }
New Type: UnityEngine.AndroidInput
Member Added: public AndroidInput ();
Member Added: public static UnityEngine.Touch GetSecondaryTouch (int index);
Member Added: public static int touchCountSecondary { get; }
Member Added: public static bool secondaryTouchEnabled { get; }
Member Added: public static int secondaryTouchWidth { get; }
Member Added: public static int secondaryTouchHeight { get; }
Updating: UnityEngine.AudioClip/PCMReaderCallback
Updating: UnityEngine.AudioClip/PCMSetPositionCallback
Updating: UnityEngine.GUI/WindowFunction
Updating: UnityEngine.Application/LogCallback
New Type: UnityEngine.AndroidJavaRunnable
New Type: UnityEditor.AssemblyHelper
Member Added: public AssemblyHelper ();
Member Added: public static string[] GetNamesOfAssembliesLoadedInCurrentDomain ();
Member Added: public static string ExtractInternalAssemblyName (string path);
Member Added: public static string[] FindAssembliesReferencedBy (string[] paths, string[] foldersToSearch);
Member Added: public static string[] FindAssembliesReferencedBy (string path, string[] foldersToSearch);
Member Added: public static void ExtractAllClassesThatInheritMonoBehaviourAndScriptableObject (string path, out string[] classNamesArray, out string[] classNameSpacesArray);
Namespace Directory Created: UnityEditor
New Namespace File: UnityEditor
New Type: UnityEditor.InitializeOnLoadAttribute
Member Added: public InitializeOnLoadAttribute ();
New Type: UnityEditor.FileUtil
Member Added: public FileUtil ();
Member Added: public static bool DeleteFileOrDirectory (string path);
Member Added: public static void CopyFileOrDirectory (string from, string to);
Member Added: public static void CopyFileOrDirectoryFollowSymlinks (string from, string to);
Member Added: public static void MoveFileOrDirectory (string from, string to);
Member Added: public static string GetUniqueTempPathInProject ();
Member Added: public static string GetProjectRelativePath (string path);
Member Added: public static void ReplaceFile (string src, string dst);
Member Added: public static void ReplaceDirectory (string src, string dst);
New Type: UnityEditorInternal.InternalEditorUtility
Member Added: public InternalEditorUtility ();
Member Added: public static UnityEngine.Texture2D GetIconForFile (string fileName);
Member Added: public static string[] GetEditorSettingsList (string prefix, int count);
Member Added: public static void SaveEditorSettingsList (string prefix, string[] aList, int count);
Member Added: public static UnityEngine.Camera[] GetSceneViewCameras ();
Member Added: public static void ShowGameView ();
Member Added: public static void BumpMapSettingsFixingWindowReportResult (int result);
Member Added: public static bool BumpMapTextureNeedsFixing (UnityEngine.Material material);
Member Added: public static void FixNormalmapTexture (UnityEngine.Material material);
Member Added: public static string GetEditorAssemblyPath ();
Member Added: public static string GetEngineAssemblyPath ();
Member Added: public static string CalculateHashForObjectsAndDependencies (UnityEngine.Object[] objects);
Member Added: public static UnityEngine.Material[] InstantiateMaterialsInEditMode (UnityEngine.Renderer renderer);
Member Added: public static bool ProjectCanBeAppended (string location);
Member Added: public static void SetupCustomDll (string dllName, string dllLocation);
Member Added: public static int AddScriptComponentUnchecked (UnityEngine.GameObject gameObject, UnityEditor.MonoScript script);
Member Added: public static void RequestScriptReload ();
Member Added: public static void SwitchSkinAndRepaintAllViews ();
Member Added: public static void RepaintAllViews ();
Member Added: public static bool GetIsInspectorExpanded (UnityEngine.Object obj);
Member Added: public static void SetIsInspectorExpanded (UnityEngine.Object obj, bool isExpanded);
Member Added: public static void SaveToSerializedFileAndForget (UnityEngine.Object[] obj, string path);
Member Added: public static UnityEngine.Object[] LoadSerializedFileAndForget (string path);
Member Added: public static UnityEditor.DragAndDropVisualMode ProjectWindowDrag (UnityEditor.HierarchyProperty property, bool perform);
Member Added: public static UnityEditor.DragAndDropVisualMode HierarchyWindowDrag (UnityEditor.HierarchyProperty property, bool perform);
Member Added: public static UnityEditor.DragAndDropVisualMode SceneViewDrag (UnityEngine.Object dropUpon, UnityEngine.Vector3 worldPosition, UnityEngine.Vector2 viewportPosition, bool perform);
Member Added: public static bool HasMaint ();
Member Added: public static bool HasPro ();
Member Added: public static bool HasAdvancedLicenseOnBuildTarget (UnityEditor.BuildTarget target);
Member Added: public static UnityEngine.Rect GetBoundsOfDesktopAtPoint (UnityEngine.Vector2 pos);
Member Added: public static UnityEngine.Object GetObjectFromInstanceID (int instanceID);
Member Added: public static UnityEngine.Object GetLoadedObjectFromInstanceID (int instanceID);
Member Added: public static string GetLayerName (int layer);
Member Added: public static string GetExternalScriptEditor ();
Member Added: public static void ReloadWindowLayoutMenu ();
Member Added: public static void SetupShaderMenu (UnityEngine.Material material);
Member Added: public static string GetFullUnityVersion ();
Member Added: public static string GetUnityBuildBranchUrl ();
Member Added: public static int GetUnityVersionDate ();
Member Added: public static int GetUnityRevision ();
Member Added: public static bool IsUnityBeta ();
Member Added: public static string GetUnityCopyright ();
Member Added: public static string GetLicenseInfo ();
Member Added: public static int[] GetLicenseFlags ();
Member Added: public static string GetAuthToken ();
Member Added: public static void OpenEditorConsole ();
Member Added: public static int GetGameObjectInstanceIDFromComponent (int instanceID);
Member Added: public static UnityEngine.Color[] ReadScreenPixel (UnityEngine.Vector2 pixelPos, int sizex, int sizey);
Member Added: public static void OpenPlayerConsole ();
Member Added: public static UnityEngine.Resolution GetDesktopResolution ();
Member Added: public static string TextifyEvent (UnityEngine.Event evt);
Member Added: public static string[] GetAvailableDiffTools ();
Member Added: public static string GetNoDiffToolsDetectedMessage ();
Member Added: public static UnityEngine.Bounds TransformBounds (UnityEngine.Bounds b, UnityEngine.Transform t);
Member Added: public static void SetCustomLighting (UnityEngine.Light[] lights, UnityEngine.Color ambient);
Member Added: public static void RemoveCustomLighting ();
Member Added: public static bool CalculateShouldEnableLights ();
Member Added: public static bool HasFullscreenCamera ();
Member Added: public static UnityEngine.Bounds CalculateSelectionBounds (bool usePivotOnlyForParticles);
Member Added: public static void OnGameViewFocus (bool focus);
Member Added: public static bool OpenFileAtLineExternal (string filename, int line);
Member Added: public static bool Xbox360GenerateSPAConfig (string spaPath);
Member Added: public static bool Xbox360SaveSplashScreenToFile (UnityEngine.Texture2D image, string spaPath);
Member Added: public static bool CanConnectToCacheServer ();
Member Added: public static bool inBatchMode { get; }
Member Added: public static bool isHumanControllingUs { get; }
Member Added: public static int[] expandedProjectWindowItems { set; get; }
Member Added: public static string[] tags { get; }
Member Added: public static string[] layers { get; }
Member Added: public static string unityPreferencesFolder { get; }
Member Added: public static float defaultScreenWidth { get; }
Member Added: public static float defaultScreenHeight { get; }
Member Added: public static float defaultWebScreenWidth { get; }
Member Added: public static float defaultWebScreenHeight { get; }
Member Added: public static bool ignoreInspectorChanges { get; }
Namespace Directory Created: UnityEditorInternal
New Namespace File: UnityEditorInternal
New Type: UnityEditorInternal.MacroEvents
Member Added: public MacroEvents ();
Member Added: public static string EventToString (UnityEngine.Event evt);
Member Added: public static UnityEngine.Event CrossPlatformSwapDefaultModifiers (UnityEngine.Event evt);
Member Added: public static UnityEngine.Event StringToEvent (string input);
Member Added: public static void RecordMacroEvent (Type windowType, UnityEngine.Event evt);
Member Added: public static void SendMacroEvent (string targetName, string eventString);
Member Added: public static void SendMacroEvent (string targetName, string eventString, UnityEditorInternal.MacroEvents.AutoConvert autoConvert);
New Type: UnityEditorInternal.MacroEvents/AutoConvert
Member Added: None
Member Added: FromOSX
Member Added: FromWindows
Updating: UnityEditorInternal.MacroEvents/AutoConvert
New Type: UnityEditorInternal.MacroWindow
Member Added: public MacroWindow ();
Member Added: public static void LoadDefaultRegressionLayout ();
New Type: IEditablePoint
Member Added: public UnityEngine.Vector3 GetPosition (int idx);
Member Added: public void SetPosition (int idx, UnityEngine.Vector3 position);
Member Added: public UnityEngine.Color GetColor (int idx);
Member Added: public float GetPointScale (int idx);
Member Added: public int Count { get; }
New Type: PointEditor
Member Added: public PointEditor ();
Member Added: public static bool MovePoints (IEditablePoint points, UnityEngine.Transform cloudTransform, System.Collections.Generic.List<int> selection);
Member Added: public static int FindNearest (UnityEngine.Vector2 point, UnityEngine.Transform cloudTransform, IEditablePoint points);
Member Added: public static bool SelectPoints (IEditablePoint points, UnityEngine.Transform cloudTransform, System.Collections.Generic.List<int> selection, bool firstSelect);
Member Added: public static void Draw (IEditablePoint points, UnityEngine.Transform cloudTransform, System.Collections.Generic.List<int> selection, UnityEngine.Material material, bool twoPassDrawing);
New Type: UnityEditorInternal.JSONValue
Member Added: public JSONValue (object o);
Member Added: public bool IsString ();
Member Added: public bool IsFloat ();
Member Added: public bool IsList ();
Member Added: public bool IsDict ();
Member Added: public bool IsBool ();
Member Added: public bool IsNull ();
Member Added: public object AsObject ();
Member Added: public string AsString (bool nothrow);
Member Added: public string AsString ();
Member Added: public float AsFloat (bool nothrow);
Member Added: public float AsFloat ();
Member Added: public bool AsBool (bool nothrow);
Member Added: public bool AsBool ();
Member Added: public System.Collections.Generic.List<UnityEditorInternal.JSONValue> AsList (bool nothrow);
Member Added: public System.Collections.Generic.List<UnityEditorInternal.JSONValue> AsList ();
Member Added: public System.Collections.Generic.Dictionary<string,UnityEditorInternal.JSONValue> AsDict (bool nothrow);
Member Added: public System.Collections.Generic.Dictionary<string,UnityEditorInternal.JSONValue> AsDict ();
Member Added: public static UnityEditorInternal.JSONValue NewString (string val);
Member Added: public static UnityEditorInternal.JSONValue NewFloat (float val);
Member Added: public static UnityEditorInternal.JSONValue NewDict ();
Member Added: public static UnityEditorInternal.JSONValue NewList ();
Member Added: public static UnityEditorInternal.JSONValue NewBool (bool val);
Member Added: public static UnityEditorInternal.JSONValue NewNull ();
Member Added: public bool ContainsKey (string index);
Member Added: public UnityEditorInternal.JSONValue Get (string key);
Member Added: public void Set (string key, string value);
Member Added: public void Set (string key, float value);
Member Added: public void Set (string key, bool value);
Member Added: public void Add (string value);
Member Added: public void Add (float value);
Member Added: public void Add (bool value);
Member Added: public override string ToString ();
Member Added: public static UnityEditorInternal.JSONValue op_Implicit (string s);
Member Added: public static UnityEditorInternal.JSONValue op_Implicit (float s);
Member Added: public static UnityEditorInternal.JSONValue op_Implicit (bool s);
Member Added: public static UnityEditorInternal.JSONValue op_Implicit (int s);
Member Added: public UnityEditorInternal.JSONValue this[string index] { set; get; }
New Type: Xcode4Controller
Member Added: public Xcode4Controller ();
Member Added: public static void Connect ();
Member Added: public static void Disconnect ();
Member Added: public static void OpenProject (string path);
Member Added: public static void RunProject ();
Member Added: public static void SelectDeviceScheme ();
Member Added: public static void SelectSimulatorScheme (string version);
Member Added: public static void CloseAllOpenUnityProjects ();
New Type: PRXModuleInfo
Member Added: public PRXModuleInfo ();
Member Added: public string name;
Member Added: public string stub;
Member Added: public System.Collections.Generic.List<string> exports;
New Type: PRXMemoryInfo
Member Added: public PRXMemoryInfo ();
Member Added: public int moduleFileSizeMax;
Member Added: public int moduleRequiredMemory;
New Type: UnityEditor.Handles
Member Added: public Handles ();
Member Added: public static UnityEngine.Vector3 DoPositionHandle (UnityEngine.Vector3 position, UnityEngine.Quaternion rotation);
Member Added: public static UnityEngine.Quaternion DoRotationHandle (UnityEngine.Quaternion rotation, UnityEngine.Vector3 position);
Member Added: public static UnityEngine.Vector3 DoScaleHandle (UnityEngine.Vector3 scale, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static UnityEngine.Vector3 PositionHandle (UnityEngine.Vector3 position, UnityEngine.Quaternion rotation);
Member Added: public static UnityEngine.Quaternion RotationHandle (UnityEngine.Quaternion rotation, UnityEngine.Vector3 position);
Member Added: public static UnityEngine.Vector3 ScaleHandle (UnityEngine.Vector3 scale, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static float RadiusHandle (UnityEngine.Quaternion rotation, UnityEngine.Vector3 position, float radius, bool handlesOnly);
Member Added: public static float RadiusHandle (UnityEngine.Quaternion rotation, UnityEngine.Vector3 position, float radius);
Member Added: public static UnityEngine.Vector3 Slider (UnityEngine.Vector3 position, UnityEngine.Vector3 direction);
Member Added: public static UnityEngine.Vector3 Slider (UnityEngine.Vector3 position, UnityEngine.Vector3 direction, float size, UnityEditor.Handles.DrawCapFunction drawFunc, float snap);
Member Added: public static UnityEngine.Vector3 Slider2D (int id, UnityEngine.Vector3 handlePos, UnityEngine.Vector3 offset, UnityEngine.Vector3 handleDir, UnityEngine.Vector3 slideDir1, UnityEngine.Vector3 slideDir2, float handleSize, UnityEditor.Handles.DrawCapFunction drawFunc, UnityEngine.Vector2 snap);
Member Added: public static UnityEngine.Vector3 Slider2D (int id, UnityEngine.Vector3 handlePos, UnityEngine.Vector3 offset, UnityEngine.Vector3 handleDir, UnityEngine.Vector3 slideDir1, UnityEngine.Vector3 slideDir2, float handleSize, UnityEditor.Handles.DrawCapFunction drawFunc, UnityEngine.Vector2 snap, bool drawHelper);
Member Added: public static UnityEngine.Vector3 Slider2D (UnityEngine.Vector3 handlePos, UnityEngine.Vector3 handleDir, UnityEngine.Vector3 slideDir1, UnityEngine.Vector3 slideDir2, float handleSize, UnityEditor.Handles.DrawCapFunction drawFunc, UnityEngine.Vector2 snap);
Member Added: public static UnityEngine.Vector3 Slider2D (UnityEngine.Vector3 handlePos, UnityEngine.Vector3 handleDir, UnityEngine.Vector3 slideDir1, UnityEngine.Vector3 slideDir2, float handleSize, UnityEditor.Handles.DrawCapFunction drawFunc, UnityEngine.Vector2 snap, bool drawHelper);
Member Added: public static UnityEngine.Vector3 Slider2D (int id, UnityEngine.Vector3 handlePos, UnityEngine.Vector3 handleDir, UnityEngine.Vector3 slideDir1, UnityEngine.Vector3 slideDir2, float handleSize, UnityEditor.Handles.DrawCapFunction drawFunc, UnityEngine.Vector2 snap);
Member Added: public static UnityEngine.Vector3 Slider2D (int id, UnityEngine.Vector3 handlePos, UnityEngine.Vector3 handleDir, UnityEngine.Vector3 slideDir1, UnityEngine.Vector3 slideDir2, float handleSize, UnityEditor.Handles.DrawCapFunction drawFunc, UnityEngine.Vector2 snap, bool drawHelper);
Member Added: public static UnityEngine.Vector3 Slider2D (UnityEngine.Vector3 handlePos, UnityEngine.Vector3 handleDir, UnityEngine.Vector3 slideDir1, UnityEngine.Vector3 slideDir2, float handleSize, UnityEditor.Handles.DrawCapFunction drawFunc, float snap);
Member Added: public static UnityEngine.Vector3 Slider2D (UnityEngine.Vector3 handlePos, UnityEngine.Vector3 handleDir, UnityEngine.Vector3 slideDir1, UnityEngine.Vector3 slideDir2, float handleSize, UnityEditor.Handles.DrawCapFunction drawFunc, float snap, bool drawHelper);
Member Added: public static UnityEngine.Quaternion FreeRotateHandle (UnityEngine.Quaternion rotation, UnityEngine.Vector3 position, float size);
Member Added: public static UnityEngine.Vector3 FreeMoveHandle (UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size, UnityEngine.Vector3 snap, UnityEditor.Handles.DrawCapFunction capFunc);
Member Added: public static float ScaleSlider (float scale, UnityEngine.Vector3 position, UnityEngine.Vector3 direction, UnityEngine.Quaternion rotation, float size, float snap);
Member Added: public static float ScaleValueHandle (float value, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size, UnityEditor.Handles.DrawCapFunction capFunc, float snap);
Member Added: public static UnityEngine.Quaternion Disc (UnityEngine.Quaternion rotation, UnityEngine.Vector3 position, UnityEngine.Vector3 axis, float size, bool cutoffPlane, float snap);
Member Added: public static bool Button (UnityEngine.Vector3 position, UnityEngine.Quaternion direction, float size, float pickSize, UnityEditor.Handles.DrawCapFunction capFunc);
Member Added: public static float SnapValue (float val, float snap);
Member Added: public static void CubeCap (int controlID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static void SphereCap (int controlID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static void ConeCap (int controlID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static void CylinderCap (int controlID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static void RectangleCap (int controlID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static void SelectionFrame (int controlID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static void SimpleSelectionFrame (int controlID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static void DotCap (int controlID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static void CircleCap (int controlID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static void ArrowCap (int controlID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static void DrawCylinder (int controlID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static void DrawSphere (int controlID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static void DrawRectangle (int controlID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static void DrawCube (int controlID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static void DrawArrow (int controlID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static void DrawCone (int controlID, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static void DrawLine (UnityEngine.Vector3 p1, UnityEngine.Vector3 p2);
Member Added: public static void DrawPolyLine (UnityEngine.Vector3[] points);
Member Added: public static void DrawAAPolyLine (UnityEngine.Vector3[] points);
Member Added: public static void DrawAAPolyLine (float width, UnityEngine.Vector3[] points);
Member Added: public static void DrawAAPolyLine (UnityEngine.Texture2D lineTex, UnityEngine.Vector3[] points);
Member Added: public static void DrawAAPolyLine (float width, int actualNumberOfPoints, UnityEngine.Vector3[] points);
Member Added: public static void DrawAAPolyLine (UnityEngine.Texture2D lineTex, float width, UnityEngine.Vector3[] points);
Member Added: public static void DrawBezier (UnityEngine.Vector3 startPosition, UnityEngine.Vector3 endPosition, UnityEngine.Vector3 startTangent, UnityEngine.Vector3 endTangent, UnityEngine.Color color, UnityEngine.Texture2D texture, float width);
Member Added: public static void DrawWireDisc (UnityEngine.Vector3 center, UnityEngine.Vector3 normal, float radius);
Member Added: public static void DrawWireArc (UnityEngine.Vector3 center, UnityEngine.Vector3 normal, UnityEngine.Vector3 from, float angle, float radius);
Member Added: public static void DrawSolidRectangleWithOutline (UnityEngine.Vector3[] verts, UnityEngine.Color faceColor, UnityEngine.Color outlineColor);
Member Added: public static void DrawSolidDisc (UnityEngine.Vector3 center, UnityEngine.Vector3 normal, float radius);
Member Added: public static void DrawSolidArc (UnityEngine.Vector3 center, UnityEngine.Vector3 normal, UnityEngine.Vector3 from, float angle, float radius);
Member Added: public static void Label (UnityEngine.Vector3 position, string text);
Member Added: public static void Label (UnityEngine.Vector3 position, UnityEngine.Texture image);
Member Added: public static void Label (UnityEngine.Vector3 position, UnityEngine.GUIContent content);
Member Added: public static void Label (UnityEngine.Vector3 position, string text, UnityEngine.GUIStyle style);
Member Added: public static void Label (UnityEngine.Vector3 position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static void ClearCamera (UnityEngine.Rect position, UnityEngine.Camera camera);
Member Added: public static void DrawCamera (UnityEngine.Rect position, UnityEngine.Camera camera);
Member Added: public static void DrawCamera (UnityEngine.Rect position, UnityEngine.Camera camera, UnityEditor.DrawCameraMode drawMode);
Member Added: public static void SetCamera (UnityEngine.Camera camera);
Member Added: public static void SetCamera (UnityEngine.Rect position, UnityEngine.Camera camera);
Member Added: public static void BeginGUI ();
Member Added: public static void BeginGUI (UnityEngine.Rect position);
Member Added: public static void EndGUI ();
Member Added: public static bool lighting { set; get; }
Member Added: public static UnityEngine.Color color { set; get; }
Member Added: public static UnityEngine.Matrix4x4 matrix { set; get; }
Member Added: public UnityEngine.Camera currentCamera { set; get; }
New Type: UnityEditor.Handles/DrawCapFunction
New Type: UnityEditor.EditorGUILayout
Member Added: public EditorGUILayout ();
Member Added: public static void LabelField (string label, UnityEngine.GUILayoutOption[] options);
Member Added: public static void LabelField (string label, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void LabelField (UnityEngine.GUIContent label, UnityEngine.GUILayoutOption[] options);
Member Added: public static void LabelField (UnityEngine.GUIContent label, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void LabelField (string label, string label2, UnityEngine.GUILayoutOption[] options);
Member Added: public static void LabelField (string label, string label2, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void LabelField (UnityEngine.GUIContent label, UnityEngine.GUIContent label2, UnityEngine.GUILayoutOption[] options);
Member Added: public static void LabelField (UnityEngine.GUIContent label, UnityEngine.GUIContent label2, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (bool value, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (string label, bool value, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (UnityEngine.GUIContent label, bool value, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (bool value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (string label, bool value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool Toggle (UnityEngine.GUIContent label, bool value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextField (string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextField (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextField (string label, string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextField (string label, string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextField (UnityEngine.GUIContent label, string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextField (UnityEngine.GUIContent label, string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextArea (string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TextArea (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void SelectableLabel (string text, UnityEngine.GUILayoutOption[] options);
Member Added: public static void SelectableLabel (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string PasswordField (string password, UnityEngine.GUILayoutOption[] options);
Member Added: public static string PasswordField (string password, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string PasswordField (string label, string password, UnityEngine.GUILayoutOption[] options);
Member Added: public static string PasswordField (string label, string password, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string PasswordField (UnityEngine.GUIContent label, string password, UnityEngine.GUILayoutOption[] options);
Member Added: public static string PasswordField (UnityEngine.GUIContent label, string password, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static float FloatField (float value, UnityEngine.GUILayoutOption[] options);
Member Added: public static float FloatField (float value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static float FloatField (string label, float value, UnityEngine.GUILayoutOption[] options);
Member Added: public static float FloatField (string label, float value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static float FloatField (UnityEngine.GUIContent label, float value, UnityEngine.GUILayoutOption[] options);
Member Added: public static float FloatField (UnityEngine.GUIContent label, float value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntField (int value, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntField (int value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntField (string label, int value, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntField (string label, int value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntField (UnityEngine.GUIContent label, int value, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntField (UnityEngine.GUIContent label, int value, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static float Slider (float value, float leftValue, float rightValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static float Slider (string label, float value, float leftValue, float rightValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static float Slider (UnityEngine.GUIContent label, float value, float leftValue, float rightValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Slider (UnityEditor.SerializedProperty property, float leftValue, float rightValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Slider (UnityEditor.SerializedProperty property, float leftValue, float rightValue, string label, UnityEngine.GUILayoutOption[] options);
Member Added: public static void Slider (UnityEditor.SerializedProperty property, float leftValue, float rightValue, UnityEngine.GUIContent label, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntSlider (int value, int leftValue, int rightValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntSlider (string label, int value, int leftValue, int rightValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntSlider (UnityEngine.GUIContent label, int value, int leftValue, int rightValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static void IntSlider (UnityEditor.SerializedProperty property, int leftValue, int rightValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static void IntSlider (UnityEditor.SerializedProperty property, int leftValue, int rightValue, string label, UnityEngine.GUILayoutOption[] options);
Member Added: public static void IntSlider (UnityEditor.SerializedProperty property, int leftValue, int rightValue, UnityEngine.GUIContent label, UnityEngine.GUILayoutOption[] options);
Member Added: public static void MinMaxSlider (ref float minValue, ref float maxValue, float minLimit, float maxLimit, UnityEngine.GUILayoutOption[] options);
Member Added: public static void MinMaxSlider (UnityEngine.GUIContent label, ref float minValue, ref float maxValue, float minLimit, float maxLimit, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Popup (int selectedIndex, string[] displayedOptions, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Popup (int selectedIndex, string[] displayedOptions, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Popup (int selectedIndex, UnityEngine.GUIContent[] displayedOptions, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Popup (int selectedIndex, UnityEngine.GUIContent[] displayedOptions, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Popup (string label, int selectedIndex, string[] displayedOptions, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Popup (string label, int selectedIndex, string[] displayedOptions, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Popup (UnityEngine.GUIContent label, int selectedIndex, UnityEngine.GUIContent[] displayedOptions, UnityEngine.GUILayoutOption[] options);
Member Added: public static int Popup (UnityEngine.GUIContent label, int selectedIndex, UnityEngine.GUIContent[] displayedOptions, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static Enum EnumPopup (Enum selected, UnityEngine.GUILayoutOption[] options);
Member Added: public static Enum EnumPopup (Enum selected, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static Enum EnumPopup (string label, Enum selected, UnityEngine.GUILayoutOption[] options);
Member Added: public static Enum EnumPopup (string label, Enum selected, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static Enum EnumPopup (UnityEngine.GUIContent label, Enum selected, UnityEngine.GUILayoutOption[] options);
Member Added: public static Enum EnumPopup (UnityEngine.GUIContent label, Enum selected, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntPopup (int selectedValue, string[] displayedOptions, int[] optionValues, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntPopup (int selectedValue, string[] displayedOptions, int[] optionValues, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntPopup (int selectedValue, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntPopup (int selectedValue, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntPopup (string label, int selectedValue, string[] displayedOptions, int[] optionValues, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntPopup (string label, int selectedValue, string[] displayedOptions, int[] optionValues, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntPopup (UnityEngine.GUIContent label, int selectedValue, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUILayoutOption[] options);
Member Added: public static int IntPopup (UnityEngine.GUIContent label, int selectedValue, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void IntPopup (UnityEditor.SerializedProperty property, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUILayoutOption[] options);
Member Added: public static void IntPopup (UnityEditor.SerializedProperty property, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUIContent label, UnityEngine.GUILayoutOption[] options);
Member Added: public static void IntPopup (UnityEditor.SerializedProperty property, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUIContent label, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TagField (string tag, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TagField (string tag, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TagField (string label, string tag, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TagField (string label, string tag, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TagField (UnityEngine.GUIContent label, string tag, UnityEngine.GUILayoutOption[] options);
Member Added: public static string TagField (UnityEngine.GUIContent label, string tag, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int LayerField (int layer, UnityEngine.GUILayoutOption[] options);
Member Added: public static int LayerField (int layer, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int LayerField (string label, int layer, UnityEngine.GUILayoutOption[] options);
Member Added: public static int LayerField (string label, int layer, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int LayerField (UnityEngine.GUIContent label, int layer, UnityEngine.GUILayoutOption[] options);
Member Added: public static int LayerField (UnityEngine.GUIContent label, int layer, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int MaskField (UnityEngine.GUIContent label, int mask, string[] displayedOptions, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int MaskField (string label, int mask, string[] displayedOptions, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int MaskField (UnityEngine.GUIContent label, int mask, string[] displayedOptions, UnityEngine.GUILayoutOption[] options);
Member Added: public static int MaskField (string label, int mask, string[] displayedOptions, UnityEngine.GUILayoutOption[] options);
Member Added: public static int MaskField (int mask, string[] displayedOptions, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static int MaskField (int mask, string[] displayedOptions, UnityEngine.GUILayoutOption[] options);
Member Added: public static Enum EnumMaskField (UnityEngine.GUIContent label, Enum enumValue, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static Enum EnumMaskField (string label, Enum enumValue, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static Enum EnumMaskField (UnityEngine.GUIContent label, Enum enumValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static Enum EnumMaskField (string label, Enum enumValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static Enum EnumMaskField (Enum enumValue, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static Enum EnumMaskField (Enum enumValue, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Object ObjectField (UnityEngine.Object obj, Type objType, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Object ObjectField (UnityEngine.Object obj, Type objType, bool allowSceneObjects, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Object ObjectField (string label, UnityEngine.Object obj, Type objType, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Object ObjectField (string label, UnityEngine.Object obj, Type objType, bool allowSceneObjects, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Object ObjectField (UnityEngine.GUIContent label, UnityEngine.Object obj, Type objType, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Object ObjectField (UnityEngine.GUIContent label, UnityEngine.Object obj, Type objType, bool allowSceneObjects, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Vector2 Vector2Field (string label, UnityEngine.Vector2 value, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Vector3 Vector3Field (string label, UnityEngine.Vector3 value, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Vector4 Vector4Field (string label, UnityEngine.Vector4 value, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect RectField (UnityEngine.Rect value, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect RectField (string label, UnityEngine.Rect value, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect RectField (UnityEngine.GUIContent label, UnityEngine.Rect value, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Bounds BoundsField (UnityEngine.Bounds value, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Bounds BoundsField (string label, UnityEngine.Bounds value, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Bounds BoundsField (UnityEngine.GUIContent label, UnityEngine.Bounds value, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Color ColorField (UnityEngine.Color value, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Color ColorField (string label, UnityEngine.Color value, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Color ColorField (UnityEngine.GUIContent label, UnityEngine.Color value, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.AnimationCurve CurveField (UnityEngine.AnimationCurve value, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.AnimationCurve CurveField (string label, UnityEngine.AnimationCurve value, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.AnimationCurve CurveField (UnityEngine.GUIContent label, UnityEngine.AnimationCurve value, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.AnimationCurve CurveField (UnityEngine.AnimationCurve value, UnityEngine.Color color, UnityEngine.Rect ranges, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.AnimationCurve CurveField (string label, UnityEngine.AnimationCurve value, UnityEngine.Color color, UnityEngine.Rect ranges, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.AnimationCurve CurveField (UnityEngine.GUIContent label, UnityEngine.AnimationCurve value, UnityEngine.Color color, UnityEngine.Rect ranges, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool InspectorTitlebar (bool foldout, UnityEngine.Object targetObj);
Member Added: public static bool InspectorTitlebar (bool foldout, UnityEngine.Object[] targetObjs);
Member Added: public static bool Foldout (bool foldout, string content);
Member Added: public static bool Foldout (bool foldout, string content, UnityEngine.GUIStyle style);
Member Added: public static bool Foldout (bool foldout, UnityEngine.GUIContent content);
Member Added: public static bool Foldout (bool foldout, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static void HelpBox (string message, UnityEditor.MessageType type);
Member Added: public static void HelpBox (string message, UnityEditor.MessageType type, bool wide);
Member Added: public static void PrefixLabel (string label);
Member Added: public static void PrefixLabel (string label, UnityEngine.GUIStyle followingStyle);
Member Added: public static void PrefixLabel (string label, UnityEngine.GUIStyle followingStyle, UnityEngine.GUIStyle labelStyle);
Member Added: public static void PrefixLabel (UnityEngine.GUIContent label);
Member Added: public static void PrefixLabel (UnityEngine.GUIContent label, UnityEngine.GUIStyle followingStyle);
Member Added: public static void PrefixLabel (UnityEngine.GUIContent label, UnityEngine.GUIStyle followingStyle, UnityEngine.GUIStyle labelStyle);
Member Added: public static void Space ();
Member Added: public static void Separator ();
Member Added: public static bool BeginToggleGroup (string label, bool toggle);
Member Added: public static bool BeginToggleGroup (UnityEngine.GUIContent label, bool toggle);
Member Added: public static void EndToggleGroup ();
Member Added: public static UnityEngine.Rect BeginHorizontal (UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect BeginHorizontal (UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void EndHorizontal ();
Member Added: public static UnityEngine.Rect BeginVertical (UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Rect BeginVertical (UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static void EndVertical ();
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, bool alwaysShowHorizontal, bool alwaysShowVertical, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, UnityEngine.GUIStyle horizontalScrollbar, UnityEngine.GUIStyle verticalScrollbar, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, UnityEngine.GUIStyle style);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, bool alwaysShowHorizontal, bool alwaysShowVertical, UnityEngine.GUIStyle horizontalScrollbar, UnityEngine.GUIStyle verticalScrollbar, UnityEngine.GUIStyle background, UnityEngine.GUILayoutOption[] options);
Member Added: public static void EndScrollView ();
Member Added: public static bool PropertyField (UnityEditor.SerializedProperty property, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool PropertyField (UnityEditor.SerializedProperty property, UnityEngine.GUIContent label, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool PropertyField (UnityEditor.SerializedProperty property, bool includeChildren, UnityEngine.GUILayoutOption[] options);
Member Added: public static bool PropertyField (UnityEditor.SerializedProperty property, UnityEngine.GUIContent label, bool includeChildren, UnityEngine.GUILayoutOption[] options);
New Type: UnityEditor.EditorGUI
Member Added: public EditorGUI ();
Member Added: public static void BeginDisabledGroup (bool disabled);
Member Added: public static void EndDisabledGroup ();
Member Added: public static void BeginChangeCheck ();
Member Added: public static bool EndChangeCheck ();
Member Added: public static void DropShadowLabel (UnityEngine.Rect position, string text);
Member Added: public static void DropShadowLabel (UnityEngine.Rect position, UnityEngine.GUIContent content);
Member Added: public static void DropShadowLabel (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static void DropShadowLabel (UnityEngine.Rect position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static void LabelField (UnityEngine.Rect position, string label);
Member Added: public static void LabelField (UnityEngine.Rect position, string label, UnityEngine.GUIStyle style);
Member Added: public static void LabelField (UnityEngine.Rect position, UnityEngine.GUIContent label);
Member Added: public static void LabelField (UnityEngine.Rect position, UnityEngine.GUIContent label, UnityEngine.GUIStyle style);
Member Added: public static void LabelField (UnityEngine.Rect position, string label, string label2);
Member Added: public static void LabelField (UnityEngine.Rect position, string label, string label2, UnityEngine.GUIStyle style);
Member Added: public static void LabelField (UnityEngine.Rect position, UnityEngine.GUIContent label, UnityEngine.GUIContent label2);
Member Added: public static void LabelField (UnityEngine.Rect position, UnityEngine.GUIContent label, UnityEngine.GUIContent label2, UnityEngine.GUIStyle style);
Member Added: public static bool Toggle (UnityEngine.Rect position, bool value);
Member Added: public static bool Toggle (UnityEngine.Rect position, string label, bool value);
Member Added: public static bool Toggle (UnityEngine.Rect position, bool value, UnityEngine.GUIStyle style);
Member Added: public static bool Toggle (UnityEngine.Rect position, string label, bool value, UnityEngine.GUIStyle style);
Member Added: public static bool Toggle (UnityEngine.Rect position, UnityEngine.GUIContent label, bool value);
Member Added: public static bool Toggle (UnityEngine.Rect position, UnityEngine.GUIContent label, bool value, UnityEngine.GUIStyle style);
Member Added: public static string TextField (UnityEngine.Rect position, string text);
Member Added: public static string TextField (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static string TextField (UnityEngine.Rect position, string label, string text);
Member Added: public static string TextField (UnityEngine.Rect position, string label, string text, UnityEngine.GUIStyle style);
Member Added: public static string TextField (UnityEngine.Rect position, UnityEngine.GUIContent label, string text);
Member Added: public static string TextField (UnityEngine.Rect position, UnityEngine.GUIContent label, string text, UnityEngine.GUIStyle style);
Member Added: public static string TextArea (UnityEngine.Rect position, string text);
Member Added: public static string TextArea (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static void SelectableLabel (UnityEngine.Rect position, string text);
Member Added: public static void SelectableLabel (UnityEngine.Rect position, string text, UnityEngine.GUIStyle style);
Member Added: public static string DoPasswordField (int id, UnityEngine.Rect position, string password, UnityEngine.GUIStyle style);
Member Added: public static string DoPasswordField (int id, UnityEngine.Rect position, UnityEngine.GUIContent label, string password, UnityEngine.GUIStyle style);
Member Added: public static string PasswordField (UnityEngine.Rect position, string password);
Member Added: public static string PasswordField (UnityEngine.Rect position, string password, UnityEngine.GUIStyle style);
Member Added: public static string PasswordField (UnityEngine.Rect position, string label, string password);
Member Added: public static string PasswordField (UnityEngine.Rect position, string label, string password, UnityEngine.GUIStyle style);
Member Added: public static string PasswordField (UnityEngine.Rect position, UnityEngine.GUIContent label, string password);
Member Added: public static string PasswordField (UnityEngine.Rect position, UnityEngine.GUIContent label, string password, UnityEngine.GUIStyle style);
Member Added: public static float FloatField (UnityEngine.Rect position, float value);
Member Added: public static float FloatField (UnityEngine.Rect position, float value, UnityEngine.GUIStyle style);
Member Added: public static float FloatField (UnityEngine.Rect position, string label, float value);
Member Added: public static float FloatField (UnityEngine.Rect position, string label, float value, UnityEngine.GUIStyle style);
Member Added: public static float FloatField (UnityEngine.Rect position, UnityEngine.GUIContent label, float value);
Member Added: public static float FloatField (UnityEngine.Rect position, UnityEngine.GUIContent label, float value, UnityEngine.GUIStyle style);
Member Added: public static int IntField (UnityEngine.Rect position, int value);
Member Added: public static int IntField (UnityEngine.Rect position, int value, UnityEngine.GUIStyle style);
Member Added: public static int IntField (UnityEngine.Rect position, string label, int value);
Member Added: public static int IntField (UnityEngine.Rect position, string label, int value, UnityEngine.GUIStyle style);
Member Added: public static int IntField (UnityEngine.Rect position, UnityEngine.GUIContent label, int value);
Member Added: public static int IntField (UnityEngine.Rect position, UnityEngine.GUIContent label, int value, UnityEngine.GUIStyle style);
Member Added: public static float Slider (UnityEngine.Rect position, float value, float leftValue, float rightValue);
Member Added: public static float Slider (UnityEngine.Rect position, string label, float value, float leftValue, float rightValue);
Member Added: public static float Slider (UnityEngine.Rect position, UnityEngine.GUIContent label, float value, float leftValue, float rightValue);
Member Added: public static void Slider (UnityEngine.Rect position, UnityEditor.SerializedProperty property, float leftValue, float rightValue);
Member Added: public static void Slider (UnityEngine.Rect position, UnityEditor.SerializedProperty property, float leftValue, float rightValue, string label);
Member Added: public static void Slider (UnityEngine.Rect position, UnityEditor.SerializedProperty property, float leftValue, float rightValue, UnityEngine.GUIContent label);
Member Added: public static int IntSlider (UnityEngine.Rect position, int value, int leftValue, int rightValue);
Member Added: public static int IntSlider (UnityEngine.Rect position, string label, int value, int leftValue, int rightValue);
Member Added: public static int IntSlider (UnityEngine.Rect position, UnityEngine.GUIContent label, int value, int leftValue, int rightValue);
Member Added: public static void MinMaxSlider (UnityEngine.GUIContent label, UnityEngine.Rect position, ref float minValue, ref float maxValue, float minLimit, float maxLimit);
Member Added: public static void MinMaxSlider (UnityEngine.Rect position, ref float minValue, ref float maxValue, float minLimit, float maxLimit);
Member Added: public static int Popup (UnityEngine.Rect position, int selectedIndex, string[] displayedOptions);
Member Added: public static int Popup (UnityEngine.Rect position, int selectedIndex, string[] displayedOptions, UnityEngine.GUIStyle style);
Member Added: public static int Popup (UnityEngine.Rect position, int selectedIndex, UnityEngine.GUIContent[] displayedOptions);
Member Added: public static int Popup (UnityEngine.Rect position, int selectedIndex, UnityEngine.GUIContent[] displayedOptions, UnityEngine.GUIStyle style);
Member Added: public static int Popup (UnityEngine.Rect position, string label, int selectedIndex, string[] displayedOptions);
Member Added: public static int Popup (UnityEngine.Rect position, string label, int selectedIndex, string[] displayedOptions, UnityEngine.GUIStyle style);
Member Added: public static int Popup (UnityEngine.Rect position, UnityEngine.GUIContent label, int selectedIndex, UnityEngine.GUIContent[] displayedOptions);
Member Added: public static int Popup (UnityEngine.Rect position, UnityEngine.GUIContent label, int selectedIndex, UnityEngine.GUIContent[] displayedOptions, UnityEngine.GUIStyle style);
Member Added: public static Enum EnumPopup (UnityEngine.Rect position, Enum selected);
Member Added: public static Enum EnumPopup (UnityEngine.Rect position, Enum selected, UnityEngine.GUIStyle style);
Member Added: public static Enum EnumPopup (UnityEngine.Rect position, string label, Enum selected);
Member Added: public static Enum EnumPopup (UnityEngine.Rect position, string label, Enum selected, UnityEngine.GUIStyle style);
Member Added: public static Enum EnumPopup (UnityEngine.Rect position, UnityEngine.GUIContent label, Enum selected);
Member Added: public static Enum EnumPopup (UnityEngine.Rect position, UnityEngine.GUIContent label, Enum selected, UnityEngine.GUIStyle style);
Member Added: public static int IntPopup (UnityEngine.Rect position, int selectedValue, string[] displayedOptions, int[] optionValues);
Member Added: public static int IntPopup (UnityEngine.Rect position, int selectedValue, string[] displayedOptions, int[] optionValues, UnityEngine.GUIStyle style);
Member Added: public static int IntPopup (UnityEngine.Rect position, int selectedValue, UnityEngine.GUIContent[] displayedOptions, int[] optionValues);
Member Added: public static int IntPopup (UnityEngine.Rect position, int selectedValue, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUIStyle style);
Member Added: public static void IntPopup (UnityEngine.Rect position, UnityEditor.SerializedProperty property, UnityEngine.GUIContent[] displayedOptions, int[] optionValues);
Member Added: public static void IntPopup (UnityEngine.Rect position, UnityEditor.SerializedProperty property, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUIContent label);
Member Added: public static int IntPopup (UnityEngine.Rect position, string label, int selectedValue, string[] displayedOptions, int[] optionValues);
Member Added: public static int IntPopup (UnityEngine.Rect position, string label, int selectedValue, string[] displayedOptions, int[] optionValues, UnityEngine.GUIStyle style);
Member Added: public static int IntPopup (UnityEngine.Rect position, UnityEngine.GUIContent label, int selectedValue, UnityEngine.GUIContent[] displayedOptions, int[] optionValues);
Member Added: public static int IntPopup (UnityEngine.Rect position, UnityEngine.GUIContent label, int selectedValue, UnityEngine.GUIContent[] displayedOptions, int[] optionValues, UnityEngine.GUIStyle style);
Member Added: public static string TagField (UnityEngine.Rect position, string tag);
Member Added: public static string TagField (UnityEngine.Rect position, string tag, UnityEngine.GUIStyle style);
Member Added: public static string TagField (UnityEngine.Rect position, string label, string tag);
Member Added: public static string TagField (UnityEngine.Rect position, string label, string tag, UnityEngine.GUIStyle style);
Member Added: public static string TagField (UnityEngine.Rect position, UnityEngine.GUIContent label, string tag);
Member Added: public static string TagField (UnityEngine.Rect position, UnityEngine.GUIContent label, string tag, UnityEngine.GUIStyle style);
Member Added: public static int LayerField (UnityEngine.Rect position, int layer);
Member Added: public static int LayerField (UnityEngine.Rect position, int layer, UnityEngine.GUIStyle style);
Member Added: public static int LayerField (UnityEngine.Rect position, string label, int layer);
Member Added: public static int LayerField (UnityEngine.Rect position, string label, int layer, UnityEngine.GUIStyle style);
Member Added: public static int LayerField (UnityEngine.Rect position, UnityEngine.GUIContent label, int layer);
Member Added: public static int LayerField (UnityEngine.Rect position, UnityEngine.GUIContent label, int layer, UnityEngine.GUIStyle style);
Member Added: public static int MaskField (UnityEngine.Rect position, UnityEngine.GUIContent label, int mask, string[] displayedOptions);
Member Added: public static int MaskField (UnityEngine.Rect position, UnityEngine.GUIContent label, int mask, string[] displayedOptions, UnityEngine.GUIStyle style);
Member Added: public static int MaskField (UnityEngine.Rect position, string label, int mask, string[] displayedOptions);
Member Added: public static int MaskField (UnityEngine.Rect position, string label, int mask, string[] displayedOptions, UnityEngine.GUIStyle style);
Member Added: public static int MaskField (UnityEngine.Rect position, int mask, string[] displayedOptions);
Member Added: public static int MaskField (UnityEngine.Rect position, int mask, string[] displayedOptions, UnityEngine.GUIStyle style);
Member Added: public static Enum EnumMaskField (UnityEngine.Rect position, UnityEngine.GUIContent label, Enum enumValue);
Member Added: public static Enum EnumMaskField (UnityEngine.Rect position, UnityEngine.GUIContent label, Enum enumValue, UnityEngine.GUIStyle style);
Member Added: public static Enum EnumMaskField (UnityEngine.Rect position, string label, Enum enumValue);
Member Added: public static Enum EnumMaskField (UnityEngine.Rect position, string label, Enum enumValue, UnityEngine.GUIStyle style);
Member Added: public static Enum EnumMaskField (UnityEngine.Rect position, Enum enumValue);
Member Added: public static Enum EnumMaskField (UnityEngine.Rect position, Enum enumValue, UnityEngine.GUIStyle style);
Member Added: public static UnityEngine.Object ObjectField (UnityEngine.Rect position, UnityEngine.Object obj, Type objType, bool allowSceneObjects);
Member Added: public static UnityEngine.Object ObjectField (UnityEngine.Rect position, UnityEngine.Object obj, Type objType);
Member Added: public static UnityEngine.Object ObjectField (UnityEngine.Rect position, string label, UnityEngine.Object obj, Type objType, bool allowSceneObjects);
Member Added: public static UnityEngine.Object ObjectField (UnityEngine.Rect position, string label, UnityEngine.Object obj, Type objType);
Member Added: public static UnityEngine.Object ObjectField (UnityEngine.Rect position, UnityEngine.GUIContent label, UnityEngine.Object obj, Type objType, bool allowSceneObjects);
Member Added: public static UnityEngine.Object ObjectField (UnityEngine.Rect position, UnityEngine.GUIContent label, UnityEngine.Object obj, Type objType);
Member Added: public static UnityEngine.Rect IndentedRect (UnityEngine.Rect source);
Member Added: public static UnityEngine.Vector2 Vector2Field (UnityEngine.Rect position, string label, UnityEngine.Vector2 value);
Member Added: public static UnityEngine.Vector3 Vector3Field (UnityEngine.Rect position, string label, UnityEngine.Vector3 value);
Member Added: public static UnityEngine.Vector4 Vector4Field (UnityEngine.Rect position, string label, UnityEngine.Vector4 value);
Member Added: public static UnityEngine.Rect RectField (UnityEngine.Rect position, UnityEngine.Rect value);
Member Added: public static UnityEngine.Rect RectField (UnityEngine.Rect position, string label, UnityEngine.Rect value);
Member Added: public static UnityEngine.Rect RectField (UnityEngine.Rect position, UnityEngine.GUIContent label, UnityEngine.Rect value);
Member Added: public static UnityEngine.Bounds BoundsField (UnityEngine.Rect position, UnityEngine.Bounds value);
Member Added: public static UnityEngine.Bounds BoundsField (UnityEngine.Rect position, UnityEngine.GUIContent label, UnityEngine.Bounds value);
Member Added: public static UnityEngine.Color ColorField (UnityEngine.Rect position, UnityEngine.Color value);
Member Added: public static UnityEngine.Color ColorField (UnityEngine.Rect position, string label, UnityEngine.Color value);
Member Added: public static UnityEngine.Color ColorField (UnityEngine.Rect position, UnityEngine.GUIContent label, UnityEngine.Color value);
Member Added: public static UnityEngine.AnimationCurve CurveField (UnityEngine.Rect position, UnityEngine.AnimationCurve value);
Member Added: public static UnityEngine.AnimationCurve CurveField (UnityEngine.Rect position, string label, UnityEngine.AnimationCurve value);
Member Added: public static UnityEngine.AnimationCurve CurveField (UnityEngine.Rect position, UnityEngine.GUIContent label, UnityEngine.AnimationCurve value);
Member Added: public static UnityEngine.AnimationCurve CurveField (UnityEngine.Rect position, UnityEngine.AnimationCurve value, UnityEngine.Color color, UnityEngine.Rect ranges);
Member Added: public static UnityEngine.AnimationCurve CurveField (UnityEngine.Rect position, string label, UnityEngine.AnimationCurve value, UnityEngine.Color color, UnityEngine.Rect ranges);
Member Added: public static UnityEngine.AnimationCurve CurveField (UnityEngine.Rect position, UnityEngine.GUIContent label, UnityEngine.AnimationCurve value, UnityEngine.Color color, UnityEngine.Rect ranges);
Member Added: public static void CurveField (UnityEngine.Rect position, UnityEditor.SerializedProperty value, UnityEngine.Color color, UnityEngine.Rect ranges);
Member Added: public static bool InspectorTitlebar (UnityEngine.Rect position, bool foldout, UnityEngine.Object targetObj);
Member Added: public static bool InspectorTitlebar (UnityEngine.Rect position, bool foldout, UnityEngine.Object[] targetObjs);
Member Added: public static bool Foldout (UnityEngine.Rect position, bool foldout, string content);
Member Added: public static bool Foldout (UnityEngine.Rect position, bool foldout, string content, UnityEngine.GUIStyle style);
Member Added: public static bool Foldout (UnityEngine.Rect position, bool foldout, string content, bool toggleOnLabelClick);
Member Added: public static bool Foldout (UnityEngine.Rect position, bool foldout, string content, bool toggleOnLabelClick, UnityEngine.GUIStyle style);
Member Added: public static bool Foldout (UnityEngine.Rect position, bool foldout, UnityEngine.GUIContent content);
Member Added: public static bool Foldout (UnityEngine.Rect position, bool foldout, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static bool Foldout (UnityEngine.Rect position, bool foldout, UnityEngine.GUIContent content, bool toggleOnLabelClick);
Member Added: public static bool Foldout (UnityEngine.Rect position, bool foldout, UnityEngine.GUIContent content, bool toggleOnLabelClick, UnityEngine.GUIStyle style);
Member Added: public static void ProgressBar (UnityEngine.Rect position, float value, string text);
Member Added: public static void HelpBox (UnityEngine.Rect position, string message, UnityEditor.MessageType type);
Member Added: public static UnityEngine.Rect PrefixLabel (UnityEngine.Rect totalPosition, int id, UnityEngine.GUIContent label);
Member Added: public static UnityEngine.GUIContent BeginProperty (UnityEngine.Rect totalPosition, UnityEngine.GUIContent label, UnityEditor.SerializedProperty property);
Member Added: public static void EndProperty ();
Member Added: public static void DrawTextureAlpha (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.ScaleMode scaleMode);
Member Added: public static void DrawTextureAlpha (UnityEngine.Rect position, UnityEngine.Texture image);
Member Added: public static void DrawTextureAlpha (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.ScaleMode scaleMode, float imageAspect);
Member Added: public static void DrawPreviewTexture (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.Material mat, UnityEngine.ScaleMode scaleMode);
Member Added: public static void DrawPreviewTexture (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.Material mat);
Member Added: public static void DrawPreviewTexture (UnityEngine.Rect position, UnityEngine.Texture image);
Member Added: public static void DrawPreviewTexture (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.Material mat, UnityEngine.ScaleMode scaleMode, float imageAspect);
Member Added: public static bool PropertyField (UnityEngine.Rect position, UnityEditor.SerializedProperty property);
Member Added: public static bool PropertyField (UnityEngine.Rect position, UnityEditor.SerializedProperty property, bool includeChildren);
Member Added: public static bool PropertyField (UnityEngine.Rect position, UnityEditor.SerializedProperty property, UnityEngine.GUIContent label);
Member Added: public static bool PropertyField (UnityEngine.Rect position, UnityEditor.SerializedProperty property, UnityEngine.GUIContent label, bool includeChildren);
Member Added: public static bool showMixedValue { set; get; }
Member Added: public static bool actionKey { get; }
Member Added: public static int indentLevel { set; get; }
New Type: UnityEditor.ListViewState
Member Added: public ListViewState ();
Member Added: public ListViewState (int totalRows);
Member Added: public ListViewState (int totalRows, int rowHeight);
Member Added: public int row;
Member Added: public int column;
Member Added: public UnityEngine.Vector2 scrollPos;
Member Added: public int totalRows;
Member Added: public int rowHeight;
Member Added: public int ID;
Member Added: public bool selectionChanged;
Member Added: public int draggedFrom;
Member Added: public int draggedTo;
Member Added: public bool drawDropHere;
Member Added: public UnityEngine.Rect dropHereRect;
Member Added: public string[] fileNames;
Member Added: public int customDraggedFromID;
New Type: UnityEditor.TargetChoiceHandler
Member Added: public TargetChoiceHandler ();
New Type: UnityEditor.AudioFilterGUI
Member Added: public AudioFilterGUI ();
Member Added: public void DrawAudioFilterGUI (UnityEngine.MonoBehaviour behaviour);
New Type: UnityEditor.Editor
Member Added: public Editor ();
Member Added: protected virtual UnityEditor.SerializedObject GetSerializedObjectInternal ();
Member Added: protected static void DrawPropertiesExcluding (UnityEditor.SerializedObject obj, string[] propertyToExclude);
Member Added: public bool DrawDefaultInspector ();
Member Added: public virtual void OnInspectorGUI ();
Member Added: public void Repaint ();
Member Added: public virtual bool HasPreviewGUI ();
Member Added: public virtual UnityEngine.GUIContent GetPreviewTitle ();
Member Added: public virtual void OnPreviewGUI (UnityEngine.Rect r, UnityEngine.GUIStyle background);
Member Added: public virtual void OnPreviewSettings ();
Member Added: public virtual string GetInfoString ();
Member Added: public UnityEngine.Object target { get; }
Member Added: public UnityEngine.Object[] targets { get; }
Member Added: public UnityEditor.SerializedObject serializedObject { get; }
New Type: UnityEditor.LODGroupEditor
Member Added: public LODGroupEditor ();
Member Added: public void OnSceneGUI ();
Member Added: public void Update ();
Member Added: public override void OnInspectorGUI ();
Member Added: public override bool HasPreviewGUI ();
Member Added: public override void OnPreviewGUI (UnityEngine.Rect r, UnityEngine.GUIStyle background);
Member Added: protected void DoRenderPreview ();
Member Added: public override string GetInfoString ();
New Type: UnityEditorInternal.MonoScripts
Member Added: public static UnityEditor.MonoScript CreateMonoScript (string scriptContents, string className, string nameSpace, string assemblyName, bool isEditorScript);
New Type: UnityEditor.Macros.MacroEvaluator
Member Added: public static string Eval (string macro);
Namespace Directory Created: UnityEditor.Macros
New Namespace File: UnityEditor.Macros
New Type: UnityEditor.Macros.MethodEvaluator
Member Added: public static object Eval (string assemblyFile, string typeName, string methodName, Type[] paramTypes, object[] args);
New Type: UnityEditor.Macros.MethodEvaluator/AssemblyResolver
Member Added: public AssemblyResolver (string assemblyDirectory);
Member Added: public System.Reflection.Assembly AssemblyResolve (object sender, ResolveEventArgs args);
Updating: UnityEditor.Macros.MethodEvaluator/AssemblyResolver
New Type: UnityEditor.SearchableEditorWindow
Member Added: public SearchableEditorWindow ();
Member Added: public virtual void OnEnable ();
Member Added: public virtual void OnDisable ();
New Type: UnityEditor.NavMeshEditorWindow
Member Added: public NavMeshEditorWindow ();
Member Added: public static void SetupWindow ();
Member Added: public static bool SetupWindowValidate ();
Member Added: public void OnEnable ();
Member Added: public void OnDisable ();
Member Added: public void OnGUI ();
Member Added: public void OnBecameVisible ();
Member Added: public void OnBecameInvisible ();
Member Added: public void OnSceneViewGUI (UnityEditor.SceneView sceneView);
Member Added: public virtual void AddItemsToMenu (UnityEditor.GenericMenu menu);
Member Added: public static void BackgroundTaskStatusChanged ();
New Type: UnityEditor.SceneModeUtility
Member Added: public static T[] GetSelectedObjectsOfType<T> (out UnityEngine.GameObject[] gameObjects, Type[] types) where T : UnityEngine.Object;
Member Added: public static void SearchForType (Type type);
Member Added: public static Type SearchBar (Type[] types);
Member Added: public static bool StaticFlagField (string label, UnityEditor.SerializedProperty property, int flag);
Member Added: public static void SetStaticFlags (UnityEngine.Object[] gameObjects, int changedFlags, bool flagValue);
Member Added: public static bool HasChildren (UnityEngine.Object[] gameObjects);
Member Added: public static UnityEngine.GameObject[] GetObjects (UnityEngine.Object[] gameObjects, bool includeChildren);
New Type: UnityEditor.SceneView
Member Added: public SceneView ();
Member Added: public const float kToolbarHeight = 17;
Member Added: public bool m_SceneLighting;
Member Added: public bool m_SceneFx;
Member Added: public bool m_AudioPlay;
Member Added: public static UnityEditor.SceneView.OnSceneFunc onSceneGUIDelegate;
Member Added: public UnityEditor.SceneView.RenderMode m_RenderMode;
Member Added: public int m_OverlayMode;
Member Added: public bool lockRotation;
Member Added: public static bool FrameLastActiveSceneView ();
Member Added: public static UnityEngine.Camera[] GetAllSceneCameras ();
Member Added: public static void RepaintAll ();
Member Added: public override void OnEnable ();
Member Added: public override void OnDisable ();
Member Added: public void OnDestroy ();
Member Added: public void OnSelectionChange ();
Member Added: public void SetSceneViewFiltering (bool enable);
Member Added: public void FixNegativeSize ();
Member Added: public void LookAt (UnityEngine.Vector3 position);
Member Added: public void LookAt (UnityEngine.Vector3 position, UnityEngine.Quaternion rotation);
Member Added: public void LookAtDirect (UnityEngine.Vector3 position, UnityEngine.Quaternion rotation);
Member Added: public void LookAt (UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public void LookAtDirect (UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public void LookAt (UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size, bool orthographic);
Member Added: public void AlignViewToObject (UnityEngine.Transform t);
Member Added: public void AlignWithView ();
Member Added: public void MoveToView ();
Member Added: public void MoveToView (UnityEngine.Transform target);
Member Added: public bool FrameSelected ();
Member Added: public static void ShowCompileErrorNotification ();
Member Added: public static UnityEditor.SceneView lastActiveSceneView { get; }
Member Added: public static UnityEditor.SceneView currentDrawingSceneView { get; }
Member Added: public UnityEditor.SceneView.RenderMode renderMode { set; get; }
Member Added: public static System.Collections.ArrayList sceneViews { get; }
Member Added: public UnityEngine.Camera camera { get; }
Member Added: public UnityEngine.Vector3 pivot { set; get; }
Member Added: public UnityEngine.Quaternion rotation { set; get; }
Member Added: public float size { set; get; }
Member Added: public bool orthographic { set; get; }
New Type: UnityEditor.SceneView/RenderMode
Member Added: Textured
Member Added: Wireframe
Member Added: TexWire
Member Added: RenderPaths
Member Added: LightmapResolution
Member Added: LightProbes
New Type: UnityEditor.SceneView/OnSceneFunc
Updating: UnityEditor.SceneView/RenderMode
New Type: TreeEditor.TreeData
Member Added: public TreeData ();
Member Added: public string materialHash;
Member Added: public TreeEditor.TreeGroupRoot root;
Member Added: public TreeEditor.TreeGroupBranch[] branchGroups;
Member Added: public TreeEditor.TreeGroupLeaf[] leafGroups;
Member Added: public TreeEditor.TreeNode[] nodes;
Member Added: public UnityEngine.Mesh mesh;
Member Added: public UnityEngine.Material optimizedSolidMaterial;
Member Added: public UnityEngine.Material optimizedCutoutMaterial;
Member Added: public bool isInPreviewMode;
Member Added: public TreeEditor.TreeGroup GetGroup (int id);
Member Added: public TreeEditor.TreeNode GetNode (int id);
Member Added: public void ValidateReferences ();
Member Added: public void ClearReferences ();
Member Added: public TreeEditor.TreeGroup AddGroup (TreeEditor.TreeGroup parent, Type type);
Member Added: public TreeEditor.TreeGroup DuplicateGroup (TreeEditor.TreeGroup g);
Member Added: public void DeleteGroup (TreeEditor.TreeGroup g);
Member Added: public void SetGroupParent (TreeEditor.TreeGroup g, TreeEditor.TreeGroup parent);
Member Added: public void LockGroup (TreeEditor.TreeGroup g);
Member Added: public void UnlockGroup (TreeEditor.TreeGroup g);
Member Added: public bool IsAncestor (TreeEditor.TreeGroup ancestor, TreeEditor.TreeGroup g);
Member Added: public TreeEditor.TreeNode AddNode (TreeEditor.TreeGroup g, TreeEditor.TreeNode parent);
Member Added: public TreeEditor.TreeNode AddNode (TreeEditor.TreeGroup g, TreeEditor.TreeNode parent, bool validate);
Member Added: public void SetNodeParent (TreeEditor.TreeNode n, TreeEditor.TreeNode parent);
Member Added: public void DeleteNode (TreeEditor.TreeNode n);
Member Added: public void DeleteNode (TreeEditor.TreeNode n, bool validate);
Member Added: public TreeEditor.TreeNode DuplicateNode (TreeEditor.TreeNode n);
Member Added: public void Initialize ();
Member Added: public void UpdateSeed (int id);
Member Added: public void UpdateFrequency (int id);
Member Added: public void UpdateDistribution (int id);
Member Added: public static int GetAdaptiveHeightSegments (float h, float adaptiveQuality);
Member Added: public static int GetAdaptiveRadialSegments (float r, float adaptiveQuality);
Member Added: public static System.Collections.Generic.List<float> GetAdaptiveSamples (TreeEditor.TreeGroup group, TreeEditor.TreeNode node, float adaptiveQuality);
Member Added: public void PreviewMesh (UnityEngine.Matrix4x4 worldToLocalMatrix, out UnityEngine.Material[] outMaterials);
Member Added: public void UpdateMesh (UnityEngine.Matrix4x4 worldToLocalMatrix, out UnityEngine.Material[] outMaterials);
Member Added: public bool OptimizeMaterial (System.Collections.Generic.List<TreeEditor.TreeMaterial> materials, System.Collections.Generic.List<TreeEditor.TreeVertex> vertices, System.Collections.Generic.List<TreeEditor.TreeTriangle> triangles);
Member Added: public bool CheckExternalChanges ();
Member Added: public void UpdateMesh (UnityEngine.Matrix4x4 matrix, System.Collections.Generic.List<TreeEditor.TreeMaterial> materials, System.Collections.Generic.List<TreeEditor.TreeVertex> verts, System.Collections.Generic.List<TreeEditor.TreeTriangle> tris, System.Collections.Generic.List<TreeEditor.TreeAOSphere> aoSpheres, int buildFlags, float adaptiveQuality, float aoDensity);
Namespace Directory Created: TreeEditor
New Namespace File: TreeEditor
New Type: TreeEditor.TreeEditorHelper
Member Added: public TreeEditorHelper ();
Member Added: public void OnEnable (TreeEditor.TreeData treeData);
Member Added: public bool AreShadersCorrect ();
Member Added: public static string GetOptimizedShaderName (UnityEngine.Shader shader);
Member Added: public static bool IsTreeLeafShader (UnityEngine.Shader shader);
Member Added: public static bool IsTreeBarkShader (UnityEngine.Shader shader);
Member Added: public bool GUITooManyShaders ();
Member Added: public bool GUIWrongShader (string uniqueID, UnityEngine.Material value, TreeEditor.TreeEditorHelper.NodeType nodeType);
Member Added: public void RefreshAllTreeShaders ();
Member Added: public bool NodeHasWrongMaterial (TreeEditor.TreeGroup group);
Member Added: public static UnityEngine.GUIContent GetGUIContent (string id);
Member Added: public static string GetUIString (string id);
Member Added: public static string ExtractLabel (string uiString);
Member Added: public static string ExtractTooltip (string uiString);
New Type: TreeEditor.TreeEditorHelper/NodeType
Member Added: BarkNode
Member Added: LeafNode
Updating: TreeEditor.TreeEditorHelper/NodeType
New Type: TreeEditor.SmoothRandom
Member Added: public SmoothRandom ();
Member Added: public static UnityEngine.Vector3 GetVector3 (float speed);
Member Added: public static float Get (float speed);
New Type: TreeEditor.Perlin
Member Added: public Perlin ();
Member Added: public float Noise (float arg);
Member Added: public float Noise (float x, float y);
Member Added: public float Noise (float x, float y, float z);
Member Added: public void SetSeed (int seed);
New Type: TreeEditor.FractalNoise
Member Added: public FractalNoise (float inH, float inLacunarity, float inOctaves);
Member Added: public FractalNoise (float inH, float inLacunarity, float inOctaves, TreeEditor.Perlin noise);
Member Added: public float HybridMultifractal (float x, float y, float offset);
Member Added: public float RidgedMultifractal (float x, float y, float offset, float gain);
Member Added: public float BrownianMotion (float x, float y);
New Type: TreeEditor.RingLoop
Member Added: public RingLoop ();
Member Added: public float radius;
Member Added: public float baseOffset;
Member Added: public static void SetNoiseSeed (int seed);
Member Added: public TreeEditor.RingLoop Clone ();
Member Added: public void Reset (float r, UnityEngine.Matrix4x4 m, float bOffset, int segs);
Member Added: public void SetSurfaceAngle (float angleDeg);
Member Added: public void SetAnimationProperties (float primaryFactor, float secondaryFactor, float edgeFactor, float phase);
Member Added: public void SetSpread (float top, float bottom);
Member Added: public void SetNoise (float scale, float scaleU, float scaleV);
Member Added: public void SetFlares (float radius, float noise);
Member Added: public void BuildVertices (System.Collections.Generic.List<TreeEditor.TreeVertex> verts);
Member Added: public void Cap (float sphereFactor, float noise, int mappingMode, float mappingScale, System.Collections.Generic.List<TreeEditor.TreeVertex> verts, System.Collections.Generic.List<TreeEditor.TreeTriangle> tris, int materialIndex);
Member Added: public void Connect (TreeEditor.RingLoop other, System.Collections.Generic.List<TreeEditor.TreeTriangle> tris, int materialIndex, bool flipTris, bool lowres);
New Type: TreeEditor.SplineNode
Member Added: public SplineNode (UnityEngine.Vector3 p, float t);
Member Added: public SplineNode (TreeEditor.SplineNode o);
Member Added: public UnityEngine.Vector3 point;
Member Added: public UnityEngine.Quaternion rot;
Member Added: public UnityEngine.Vector3 normal;
Member Added: public UnityEngine.Vector3 tangent;
Member Added: public float time;
New Type: TreeEditor.TextureAtlas
Member Added: public TextureAtlas ();
Member Added: public int atlasWidth;
Member Added: public int atlasHeight;
Member Added: public int atlasPadding;
Member Added: public System.Collections.Generic.List<TreeEditor.TextureAtlas.TextureNode> nodes;
Member Added: public override int GetHashCode ();
Member Added: public void AddTexture (string name, UnityEngine.Texture2D diffuse, UnityEngine.Color diffuseColor, UnityEngine.Texture2D normal, UnityEngine.Texture2D gloss, UnityEngine.Texture2D transtex, UnityEngine.Texture2D shadowOffsetTex, float shininess, UnityEngine.Vector2 scale, bool tileV, UnityEngine.Vector2 uvTiling);
Member Added: public UnityEngine.Vector2 GetTexTiling (string name);
Member Added: public UnityEngine.Rect GetUVRect (string name);
Member Added: public void Pack (ref int targetWidth, int targetHeight, int padding, bool correctPow2);
New Type: TreeEditor.TextureAtlas/TextureNode
Member Added: public TextureNode ();
Member Added: public string name;
Member Added: public UnityEngine.Texture2D diffuseTexture;
Member Added: public UnityEngine.Color diffuseColor;
Member Added: public UnityEngine.Texture2D normalTexture;
Member Added: public UnityEngine.Texture2D glossTexture;
Member Added: public UnityEngine.Texture2D translucencyTexture;
Member Added: public UnityEngine.Texture2D shadowOffsetTexture;
Member Added: public float shininess;
Member Added: public UnityEngine.Vector2 scale;
Member Added: public bool tileV;
Member Added: public UnityEngine.Vector2 uvTiling;
Member Added: public UnityEngine.Rect sourceRect;
Member Added: public UnityEngine.Rect packedRect;
Member Added: public UnityEngine.Rect uvRect;
Member Added: public static bool Overlap (TreeEditor.TextureAtlas.TextureNode a, TreeEditor.TextureAtlas.TextureNode b);
Member Added: public int CompareTo (TreeEditor.TextureAtlas.TextureNode b);
Updating: TreeEditor.TextureAtlas/TextureNode
New Type: TreeEditor.TreeAOSphere
Member Added: public TreeAOSphere (UnityEngine.Vector3 pos, float radius, float density);
Member Added: public bool flag;
Member Added: public float area;
Member Added: public float radius;
Member Added: public float density;
Member Added: public UnityEngine.Vector3 position;
Member Added: public float PointOcclusion (UnityEngine.Vector3 pos, UnityEngine.Vector3 nor);
New Type: TreeEditor.TreeAttribute
Member Added: public TreeAttribute (string uiLabel, string uiGadget, float uiMin, float uiMax);
Member Added: public TreeAttribute (string uiLabel, string uiGadget, float uiMin, float uiMax, string uiRequirement);
Member Added: public TreeAttribute (string uiLabel, string uiGadget, float uiMin, float uiMax, string uiCurve, float uiCurveMin, float uiCurveMax);
Member Added: public TreeAttribute (string uiLabel, string uiGadget, float uiMin, float uiMax, string uiCurve, float uiCurveMin, float uiCurveMax, string uiRequirement);
Member Added: public TreeAttribute (string uiLabel, string uiGadget, string uiOptions);
Member Added: public TreeAttribute (string uiLabel, string uiGadget, string uiOptions, string uiCurve, float uiCurveMin, float uiCurveMax, string uiRequirement);
Member Added: public string uiLabel;
Member Added: public string uiGadget;
Member Added: public string uiCurve;
Member Added: public string uiRequirement;
Member Added: public UnityEngine.GUIContent[] uiOptions;
Member Added: public float uiCurveMin;
Member Added: public float uiCurveMax;
Member Added: public float uiMin;
Member Added: public float uiMax;
Member Added: public override string ToString ();
New Type: TreeEditor.TreeGroup
Member Added: public TreeGroup ();
Member Added: protected static readonly bool GenerateDoubleSidedGeometry;
Member Added: protected static readonly float GenerateBendNormalFactor;
Member Added: protected static readonly float GenerateBendBillboardNormalFactor;
Member Added: public int seed;
Member Added: public int distributionFrequency;
Member Added: public TreeEditor.TreeGroup.DistributionMode distributionMode;
Member Added: public UnityEngine.AnimationCurve distributionCurve;
Member Added: public int distributionNodes;
Member Added: public float distributionTwirl;
Member Added: public float distributionPitch;
Member Added: public UnityEngine.AnimationCurve distributionPitchCurve;
Member Added: public float distributionScale;
Member Added: public UnityEngine.AnimationCurve distributionScaleCurve;
Member Added: public bool showAnimationProps;
Member Added: public float animationPrimary;
Member Added: public float animationSecondary;
Member Added: public float animationEdge;
Member Added: public bool visible;
Member Added: public int lockFlags;
Member Added: public int[] nodeIDs;
Member Added: public int parentGroupID;
Member Added: public int[] childGroupIDs;
Member Added: public virtual float GetRadiusAtTime (TreeEditor.TreeNode node, float t, bool includeModifications);
Member Added: public virtual bool CanHaveSubGroups ();
Member Added: public void Lock ();
Member Added: public void Unlock ();
Member Added: public bool CheckExternalChanges ();
Member Added: public void UpdateFrequency (TreeEditor.TreeData owner);
Member Added: public void UpdateSeed ();
Member Added: public UnityEngine.Vector2 ComputeWindFactor (TreeEditor.TreeNode node, float offset);
Member Added: public float GetRootSpread ();
Member Added: public UnityEngine.Matrix4x4 GetRootMatrix ();
Member Added: public void UpdateDistribution (bool completeUpdate, bool updateSubGroups);
Member Added: public virtual void UpdateParameters ();
Member Added: public virtual void BuildAOSpheres (System.Collections.Generic.List<TreeEditor.TreeAOSphere> aoSpheres);
Member Added: public virtual void UpdateMesh (System.Collections.Generic.List<TreeEditor.TreeMaterial> materials, System.Collections.Generic.List<TreeEditor.TreeVertex> verts, System.Collections.Generic.List<TreeEditor.TreeTriangle> tris, System.Collections.Generic.List<TreeEditor.TreeAOSphere> aoSpheres, int buildFlags, float adaptiveQuality, float aoDensity);
Member Added: public virtual void UpdateMatrix ();
Member Added: protected static int GetMaterialIndex (UnityEngine.Material m, System.Collections.Generic.List<TreeEditor.TreeMaterial> materials, bool tileV);
Member Added: protected static UnityEngine.Vector4 CreateTangent (TreeEditor.TreeNode node, UnityEngine.Quaternion rot, UnityEngine.Vector3 normal);
Member Added: protected static float ComputeAmbientOcclusion (UnityEngine.Vector3 pos, UnityEngine.Vector3 nor, System.Collections.Generic.List<TreeEditor.TreeAOSphere> aoSpheres, float aoDensity);
Member Added: public int uniqueID { set; get; }
New Type: TreeEditor.TreeGroup/LockFlag
Member Added: LockPosition
Member Added: LockAlignment
Member Added: LockShape
New Type: TreeEditor.TreeGroup/BuildFlag
Member Added: BuildAmbientOcclusion
Member Added: BuildWeldParts
New Type: TreeEditor.TreeGroup/DistributionMode
Member Added: Random
Member Added: Alternate
Member Added: Opposite
Member Added: Whorled
Updating: TreeEditor.TreeGroup/LockFlag
Updating: TreeEditor.TreeGroup/BuildFlag
Updating: TreeEditor.TreeGroup/DistributionMode
New Type: TreeEditor.TreeGroupBranch
Member Added: public TreeGroupBranch ();
Member Added: public float lodQualityMultiplier;
Member Added: public TreeEditor.TreeGroupBranch.GeometryMode geometryMode;
Member Added: public UnityEngine.Material materialBranch;
Member Added: public UnityEngine.Material materialBreak;
Member Added: public UnityEngine.Material materialFrond;
Member Added: public UnityEngine.Vector2 height;
Member Added: public float radius;
Member Added: public UnityEngine.AnimationCurve radiusCurve;
Member Added: public bool radiusMode;
Member Added: public float capSmoothing;
Member Added: public float crinklyness;
Member Added: public UnityEngine.AnimationCurve crinkCurve;
Member Added: public float seekBlend;
Member Added: public UnityEngine.AnimationCurve seekCurve;
Member Added: public float noise;
Member Added: public UnityEngine.AnimationCurve noiseCurve;
Member Added: public float noiseScaleU;
Member Added: public float noiseScaleV;
Member Added: public float flareSize;
Member Added: public float flareHeight;
Member Added: public float flareNoise;
Member Added: public float weldHeight;
Member Added: public float weldSpreadTop;
Member Added: public float weldSpreadBottom;
Member Added: public float breakingChance;
Member Added: public UnityEngine.Vector2 breakingSpot;
Member Added: public int frondCount;
Member Added: public float frondWidth;
Member Added: public UnityEngine.AnimationCurve frondCurve;
Member Added: public UnityEngine.Vector2 frondRange;
Member Added: public float frondRotation;
Member Added: public float frondCrease;
Member Added: public override float GetRadiusAtTime (TreeEditor.TreeNode node, float time, bool includeModifications);
Member Added: public override void UpdateParameters ();
Member Added: public void UpdateSplines ();
Member Added: public override void UpdateMatrix ();
Member Added: public override void BuildAOSpheres (System.Collections.Generic.List<TreeEditor.TreeAOSphere> aoSpheres);
Member Added: public override void UpdateMesh (System.Collections.Generic.List<TreeEditor.TreeMaterial> materials, System.Collections.Generic.List<TreeEditor.TreeVertex> verts, System.Collections.Generic.List<TreeEditor.TreeTriangle> tris, System.Collections.Generic.List<TreeEditor.TreeAOSphere> aoSpheres, int buildFlags, float adaptiveQuality, float aoDensity);
Member Added: public void UpdateSpline (TreeEditor.TreeNode node);
New Type: TreeEditor.TreeGroupBranch/GeometryMode
Member Added: Branch
Member Added: BranchFrond
Member Added: Frond
Updating: TreeEditor.TreeGroupBranch/GeometryMode
New Type: TreeEditor.TreeGroupLeaf
Member Added: public TreeGroupLeaf ();
Member Added: public int geometryMode;
Member Added: public UnityEngine.Material materialLeaf;
Member Added: public UnityEngine.GameObject instanceMesh;
Member Added: public UnityEngine.Vector2 size;
Member Added: public float perpendicularAlign;
Member Added: public float horizontalAlign;
Member Added: public override bool CanHaveSubGroups ();
Member Added: public override void UpdateParameters ();
Member Added: public override void UpdateMatrix ();
Member Added: public override void BuildAOSpheres (System.Collections.Generic.List<TreeEditor.TreeAOSphere> aoSpheres);
Member Added: public override void UpdateMesh (System.Collections.Generic.List<TreeEditor.TreeMaterial> materials, System.Collections.Generic.List<TreeEditor.TreeVertex> verts, System.Collections.Generic.List<TreeEditor.TreeTriangle> tris, System.Collections.Generic.List<TreeEditor.TreeAOSphere> aoSpheres, int buildFlags, float adaptiveQuality, float aoDensity);
New Type: TreeEditor.TreeGroupLeaf/GeometryMode
Member Added: PLANE
Member Added: CROSS
Member Added: TRI_CROSS
Member Added: BILLBOARD
Member Added: MESH
Updating: TreeEditor.TreeGroupLeaf/GeometryMode
New Type: TreeEditor.TreeGroupRoot
Member Added: public TreeGroupRoot ();
Member Added: public float adaptiveLODQuality;
Member Added: public int shadowTextureQuality;
Member Added: public bool enableWelding;
Member Added: public bool enableAmbientOcclusion;
Member Added: public bool enableMaterialOptimize;
Member Added: public float aoDensity;
Member Added: public float rootSpread;
Member Added: public float groundOffset;
Member Added: public UnityEngine.Matrix4x4 rootMatrix;
Member Added: public void SetRootMatrix (UnityEngine.Matrix4x4 m);
Member Added: public override bool CanHaveSubGroups ();
Member Added: public override void UpdateParameters ();
New Type: TreeEditor.TreeMaterial
Member Added: public TreeMaterial ();
Member Added: public UnityEngine.Material material;
Member Added: public bool tileV;
New Type: TreeEditor.TreeNode
Member Added: public TreeNode ();
Member Added: public TreeEditor.TreeSpline spline;
Member Added: public int seed;
Member Added: public float animSeed;
Member Added: public bool visible;
Member Added: public int triStart;
Member Added: public int triEnd;
Member Added: public int vertStart;
Member Added: public int vertEnd;
Member Added: public float capRange;
Member Added: public float breakOffset;
Member Added: public float size;
Member Added: public float scale;
Member Added: public float offset;
Member Added: public float baseAngle;
Member Added: public float angle;
Member Added: public float pitch;
Member Added: public UnityEngine.Quaternion rotation;
Member Added: public UnityEngine.Matrix4x4 matrix;
Member Added: public int parentID;
Member Added: public int groupID;
Member Added: public float GetScale ();
Member Added: public float GetSurfaceAngleAtTime (float time);
Member Added: public float GetRadiusAtTime (float time);
Member Added: public void GetPropertiesAtTime (float time, out UnityEngine.Vector3 pos, out UnityEngine.Quaternion rot, out float rad);
Member Added: public UnityEngine.Matrix4x4 GetLocalMatrixAtTime (float time);
Member Added: public int uniqueID { set; get; }
New Type: TreeEditor.TreeSpline
Member Added: public TreeSpline ();
Member Added: public TreeSpline (TreeEditor.TreeSpline o);
Member Added: public TreeEditor.SplineNode[] nodes;
Member Added: public float tension;
Member Added: public void Reset ();
Member Added: public int GetNodeCount ();
Member Added: public void SetNodeCount (int c);
Member Added: public void RemoveNode (int c);
Member Added: public TreeEditor.SplineNode[] GetNodes ();
Member Added: public void AddPoint (UnityEngine.Vector3 pos, float timeInSeconds);
Member Added: public float GetApproximateLength ();
Member Added: public void UpdateTime ();
Member Added: public void UpdateRotations ();
Member Added: public UnityEngine.Quaternion GetRotationAtTime (float timeParam);
Member Added: public UnityEngine.Vector3 GetPositionAtTime (float timeParam);
New Type: TreeEditor.TreeTriangle
Member Added: public TreeTriangle (int material, int v0, int v1, int v2);
Member Added: public TreeTriangle (int material, int v0, int v1, int v2, bool isBillboard);
Member Added: public TreeTriangle (int material, int v0, int v1, int v2, bool isBillboard, bool tileV, bool isCutout);
Member Added: public bool tileV;
Member Added: public bool isBillboard;
Member Added: public bool isCutout;
Member Added: public int materialIndex;
Member Added: public int[] v;
Member Added: public void flip ();
New Type: TreeEditor.TreeVertex
Member Added: public TreeVertex ();
Member Added: public UnityEngine.Vector3 pos;
Member Added: public UnityEngine.Vector3 nor;
Member Added: public UnityEngine.Vector4 tangent;
Member Added: public UnityEngine.Vector2 uv0;
Member Added: public UnityEngine.Vector2 uv1;
Member Added: public UnityEngine.Color color;
Member Added: public bool flag;
Member Added: public void SetAnimationProperties (float primaryFactor, float secondaryFactor, float edgeFactor, float phase);
Member Added: public void SetAmbientOcclusion (float ao);
Member Added: public void Lerp4 (TreeEditor.TreeVertex[] tv, UnityEngine.Vector2 factor);
New Type: UnityEditor.AndroidSdkRoot
Member Added: public AndroidSdkRoot ();
New Type: UnityEditor.MathUtils
Member Added: public MathUtils ();
Member Added: public static float GetQuatLength (UnityEngine.Quaternion q);
Member Added: public static UnityEngine.Quaternion GetQuatConjugate (UnityEngine.Quaternion q);
Member Added: public static UnityEngine.Matrix4x4 OrthogonalizeMatrix (UnityEngine.Matrix4x4 m);
Member Added: public static void QuaternionNormalize (ref UnityEngine.Quaternion q);
Member Added: public static UnityEngine.Quaternion QuaternionFromMatrix (UnityEngine.Matrix4x4 m);
Member Added: public static UnityEngine.Quaternion GetQuatLog (UnityEngine.Quaternion q);
Member Added: public static UnityEngine.Quaternion GetQuatExp (UnityEngine.Quaternion q);
Member Added: public static UnityEngine.Quaternion GetQuatSquad (float t, UnityEngine.Quaternion q0, UnityEngine.Quaternion q1, UnityEngine.Quaternion a0, UnityEngine.Quaternion a1);
Member Added: public static UnityEngine.Quaternion GetSquadIntermediate (UnityEngine.Quaternion q0, UnityEngine.Quaternion q1, UnityEngine.Quaternion q2);
Member Added: public static float Ease (float t, float k1, float k2);
Member Added: public static UnityEngine.Quaternion Slerp (UnityEngine.Quaternion p, UnityEngine.Quaternion q, float t);
Member Added: public static object IntersectRayTriangle (UnityEngine.Ray ray, UnityEngine.Vector3 v0, UnityEngine.Vector3 v1, UnityEngine.Vector3 v2, bool bidirectional);
Member Added: public static UnityEngine.Vector3 ClosestPtSegmentRay (UnityEngine.Vector3 p1, UnityEngine.Vector3 q1, UnityEngine.Ray ray, out float squaredDist, out float s, out UnityEngine.Vector3 closestRay);
Member Added: public static bool IntersectRaySphere (UnityEngine.Ray ray, UnityEngine.Vector3 sphereOrigin, float sphereRadius, ref float t, ref UnityEngine.Vector3 q);
Member Added: public static bool ClosestPtRaySphere (UnityEngine.Ray ray, UnityEngine.Vector3 sphereOrigin, float sphereRadius, ref float t, ref UnityEngine.Vector3 q);
New Type: UnityEditor.VisualStudioIntegration.SolutionGuidGenerator
Member Added: public static string GuidForProject (string projectName);
Member Added: public static string GuidForSolution (string projectName);
Namespace Directory Created: UnityEditor.VisualStudioIntegration
New Namespace File: UnityEditor.VisualStudioIntegration
New Type: UnityEditor.AnimationClipCurveData
Member Added: public AnimationClipCurveData ();
Member Added: public string path;
Member Added: public Type type;
Member Added: public string propertyName;
Member Added: public UnityEngine.AnimationCurve curve;
Member Added: public UnityEngine.Object target;
New Type: UnityEditor.AnimationUtility
Member Added: public AnimationUtility ();
Member Added: public static UnityEngine.AnimationClip[] GetAnimationClips (UnityEngine.Animation component);
Member Added: public static void SetAnimationClips (UnityEngine.Animation component, UnityEngine.AnimationClip[] clips);
Member Added: public static UnityEngine.Object[] GetAnimatableObjects (UnityEngine.GameObject go);
Member Added: public static UnityEditor.AnimationClipCurveData[] GetAnimatablePropertiesForObject (UnityEngine.Object animatedObject, UnityEngine.GameObject gameObject);
Member Added: public static UnityEditor.AnimationClipCurveData[] GetAnimatableProperties (UnityEngine.GameObject go);
Member Added: public static bool GetFloatValue (UnityEngine.GameObject root, string relativePath, Type type, string propertyName, out float data);
Member Added: public static UnityEditor.AnimationClipCurveData[] GetAllCurves (UnityEngine.AnimationClip clip, bool includeCurveData);
Member Added: public static UnityEditor.AnimationClipCurveData[] GetAllCurves (UnityEngine.AnimationClip clip);
Member Added: public static UnityEngine.AnimationCurve GetEditorCurve (UnityEngine.AnimationClip clip, string relativePath, Type type, string propertyName);
Member Added: public static void SetEditorCurve (UnityEngine.AnimationClip clip, string relativePath, Type type, string propertyName, UnityEngine.AnimationCurve curve);
Member Added: public static UnityEngine.AnimationEvent[] GetAnimationEvents (UnityEngine.AnimationClip clip);
Member Added: public static void SetAnimationEvents (UnityEngine.AnimationClip clip, UnityEngine.AnimationEvent[] events);
Member Added: public static string CalculateTransformPath (UnityEngine.Transform targetTransform, UnityEngine.Transform root);
Member Added: public static void StartAnimationMode (UnityEngine.Object[] objects);
Member Added: public static void StopAnimationMode ();
Member Added: public static bool InAnimationMode ();
Member Added: public static bool IsValidPolynomialCurve (UnityEngine.AnimationCurve curve);
Member Added: public static void ConstrainToPolynomialCurve (UnityEngine.AnimationCurve curve);
New Type: UnityEditor.RemoveAssetOptions
Member Added: MoveAssetToTrash
Member Added: DeleteAssets
New Type: UnityEditor.AssetDatabase
Member Added: public AssetDatabase ();
Member Added: public static bool Contains (UnityEngine.Object obj);
Member Added: public static bool Contains (int instanceID);
Member Added: public static string CreateFolder (string parentFolder, string newFolderName);
Member Added: public static bool IsMainAsset (UnityEngine.Object obj);
Member Added: public static bool IsMainAsset (int instanceID);
Member Added: public static bool IsSubAsset (UnityEngine.Object obj);
Member Added: public static bool IsSubAsset (int instanceID);
Member Added: public static string GenerateUniqueAssetPath (string path);
Member Added: public static void StartAssetEditing ();
Member Added: public static void StopAssetEditing ();
Member Added: public static string ValidateMoveAsset (string oldPath, string newPath);
Member Added: public static string MoveAsset (string oldPath, string newPath);
Member Added: public static string RenameAsset (string pathName, string newName);
Member Added: public static bool MoveAssetToTrash (string path);
Member Added: public static bool DeleteAsset (string path);
Member Added: public static void ImportAsset (string path, UnityEditor.ImportAssetOptions options);
Member Added: public static void ImportAsset (string path);
Member Added: public static bool CopyAsset (string path, string newPath);
Member Added: public static bool WriteImportSettingsIfDirty (string path);
Member Added: public static void CreateAsset (UnityEngine.Object asset, string path);
Member Added: public static void AddObjectToAsset (UnityEngine.Object objectToAdd, string assetPath);
Member Added: public static void AddObjectToAsset (UnityEngine.Object objectToAdd, UnityEngine.Object assetObject);
Member Added: public static string GetAssetPath (UnityEngine.Object assetObject);
Member Added: public static string GetAssetPath (int instanceID);
Member Added: public static string GetAssetOrScenePath (UnityEngine.Object assetObject);
Member Added: public static string GetTextMetaDataPathFromAssetPath (string path);
Member Added: public static UnityEngine.Object LoadAssetAtPath (string assetPath, Type type);
Member Added: public static UnityEngine.Object LoadMainAssetAtPath (string assetPath);
Member Added: public static UnityEngine.Object[] LoadAllAssetRepresentationsAtPath (string assetPath);
Member Added: public static UnityEngine.Object[] LoadAllAssetsAtPath (string assetPath);
Member Added: public static string[] GetAllAssetPaths ();
Member Added: public static void RefreshDelayed (UnityEditor.ImportAssetOptions options);
Member Added: public static void RefreshDelayed ();
Member Added: public static void Refresh (UnityEditor.ImportAssetOptions options);
Member Added: public static void Refresh ();
Member Added: public static bool OpenAsset (int instanceID, int lineNumber);
Member Added: public static bool OpenAsset (int instanceID);
Member Added: public static bool OpenAsset (UnityEngine.Object target);
Member Added: public static bool OpenAsset (UnityEngine.Object target, int lineNumber);
Member Added: public static string AssetPathToGUID (string path);
Member Added: public static string GUIDToAssetPath (string guid);
Member Added: public static void SaveAssets ();
Member Added: public static UnityEngine.Texture GetCachedIcon (string path);
Member Added: public static void SetLabels (UnityEngine.Object obj, string[] labels);
Member Added: public static string[] GetLabels (UnityEngine.Object obj);
Member Added: public static void ClearLabels (UnityEngine.Object obj);
Member Added: public static string[] GetDependencies (string[] pathNames);
Member Added: public static void ExportPackage (string assetPathName, string fileName);
Member Added: public static void ExportPackage (string assetPathName, string fileName, UnityEditor.ExportPackageOptions flags);
Member Added: public static void ExportPackage (string[] assetPathNames, string fileName, UnityEditor.ExportPackageOptions flags);
Member Added: public static void ExportPackage (string[] assetPathNames, string fileName);
Member Added: public static void ImportPackage (string packagePath, bool interactive);
Member Added: public static bool IsOpenForEdit (UnityEngine.Object assetObject);
Member Added: public static bool IsOpenForEdit (string assetPath);
Member Added: public static bool IsOpenForEdit (UnityEngine.Object assetObject, out string message);
Member Added: public static bool IsOpenForEdit (string assetPath, out string message);
New Type: UnityEditor.AssetStatus
Member Added: Calculating
Member Added: ClientOnly
Member Added: ServerOnly
Member Added: Unchanged
Member Added: Conflict
Member Added: Same
Member Added: NewVersionAvailable
Member Added: NewLocalVersion
Member Added: RestoredFromTrash
Member Added: Ignored
Member Added: BadState
New Type: UnityEditor.AssetsItem
Member Added: public AssetsItem ();
Member Added: public string guid;
Member Added: public string parentGuid;
Member Added: public string pathName;
Member Added: public string message;
Member Added: public string exportedAssetPath;
Member Added: public string guidFolder;
Member Added: public int enabled;
Member Added: public int assetIsDir;
Member Added: public int changeFlags;
Member Added: public string previewPath;
Member Added: public int exists;
New Type: UnityEditor.PackageInfo
Member Added: public string packagePath;
Member Added: public string jsonInfo;
Member Added: public string iconURL;
New Type: UnityEditorInternal.AssetStore
Member Added: public AssetStore ();
Member Added: public static void Open (string assetStoreURL);
New Type: UnityEditor.BuildOptions
Member Added: None
Member Added: Development
Member Added: AutoRunPlayer
Member Added: ShowBuiltPlayer
Member Added: BuildAdditionalStreamedScenes
Member Added: AcceptExternalModificationsToPlayer
Member Added: InstallInBuildFolder
Member Added: WebPlayerOfflineDeployment
Member Added: ConnectWithProfiler
Member Added: AllowDebugging
Member Added: SymlinkLibraries
Member Added: UncompressedAssetBundle
Member Added: StripDebugSymbols
Member Added: CompressTextures
Member Added: ConnectToHost
Member Added: DeployOnline
Member Added: StripPhysics
New Type: UnityEditor.BuildPipeline
Member Added: public BuildPipeline ();
Member Added: public static void PushAssetDependencies ();
Member Added: public static void PopAssetDependencies ();
Member Added: public static string BuildPlayer (string[] levels, string locationPathName, UnityEditor.BuildTarget target, UnityEditor.BuildOptions options);
Member Added: public static string BuildStreamedSceneAssetBundle (string[] levels, string locationPath, UnityEditor.BuildTarget target);
Member Added: public static bool BuildAssetBundle (UnityEngine.Object mainAsset, UnityEngine.Object[] assets, string pathName, UnityEditor.BuildAssetBundleOptions assetBundleOptions, UnityEditor.BuildTarget targetPlatform);
Member Added: public static bool BuildAssetBundle (UnityEngine.Object mainAsset, UnityEngine.Object[] assets, string pathName, UnityEditor.BuildAssetBundleOptions assetBundleOptions);
Member Added: public static bool BuildAssetBundle (UnityEngine.Object mainAsset, UnityEngine.Object[] assets, string pathName);
Member Added: public static bool BuildAssetBundle (UnityEngine.Object mainAsset, UnityEngine.Object[] assets, string pathName, UnityEditor.BuildAssetBundleOptions assetBundleOptions, UnityEditor.BuildTarget targetPlatform, UnityEditor.BuildOptions buildOptions);
Member Added: public static bool BuildAssetBundleExplicitAssetNames (UnityEngine.Object[] assets, string[] assetNames, string pathName, UnityEditor.BuildAssetBundleOptions assetBundleOptions, UnityEditor.BuildTarget targetPlatform);
Member Added: public static bool BuildAssetBundleExplicitAssetNames (UnityEngine.Object[] assets, string[] assetNames, string pathName, UnityEditor.BuildAssetBundleOptions assetBundleOptions);
Member Added: public static bool BuildAssetBundleExplicitAssetNames (UnityEngine.Object[] assets, string[] assetNames, string pathName);
Member Added: public static bool BuildAssetBundleExplicitAssetNames (UnityEngine.Object[] assets, string[] assetNames, string pathName, UnityEditor.BuildAssetBundleOptions assetBundleOptions, UnityEditor.BuildTarget targetPlatform, UnityEditor.BuildOptions buildOptions);
New Type: UnityEditor.BuildTarget
Member Added: WebPlayer
Member Added: WebPlayerStreamed
Member Added: StandaloneOSXPPC
Member Added: StandaloneOSXUniversal
Member Added: StandaloneOSXIntel
Member Added: StandaloneWindows
Member Added: iPhone
Member Added: PS3
Member Added: XBOX360
Member Added: Android
Member Added: Wii
Member Added: StandaloneGLESEmu
Member Added: NaCl
Member Added: StandaloneLinux
Member Added: FlashPlayer
Member Added: StandaloneWindows64
New Type: UnityEditor.BuildTargetGroup
Member Added: Unknown
Member Added: Standalone
Member Added: WebPlayer
Member Added: Wii
Member Added: iPhone
Member Added: PS3
Member Added: XBOX360
Member Added: Android
Member Added: GLESEmu
Member Added: FlashPlayer
New Type: UnityEditor.StaticEditorFlags
Member Added: LightmapStatic
Member Added: OccluderStatic
Member Added: OccludeeStatic
Member Added: BatchingStatic
Member Added: NavigationStatic
Member Added: OffMeshLinkGeneration
New Type: UnityEditor.EditorApplication
Member Added: public EditorApplication ();
Member Added: public static UnityEditor.EditorApplication.ProjectWindowItemCallback projectWindowItemOnGUI;
Member Added: public static UnityEditor.EditorApplication.HierarchyWindowItemCallback hierarchyWindowItemOnGUI;
Member Added: public static UnityEditor.EditorApplication.CallbackFunction update;
Member Added: public static UnityEditor.EditorApplication.CallbackFunction delayCall;
Member Added: public static UnityEditor.EditorApplication.CallbackFunction hierarchyWindowChanged;
Member Added: public static UnityEditor.EditorApplication.CallbackFunction projectWindowChanged;
Member Added: public static UnityEditor.EditorApplication.CallbackFunction searchChanged;
Member Added: public static UnityEditor.EditorApplication.CallbackFunction modifierKeysChanged;
Member Added: public static UnityEditor.EditorApplication.CallbackFunction playmodeStateChanged;
Member Added: public static void NewScene ();
Member Added: public static bool OpenScene (string path);
Member Added: public static void OpenSceneAdditive (string path);
Member Added: public static bool SaveScene (string path, bool saveAsCopy);
Member Added: public static bool SaveScene (string path);
Member Added: public static bool SaveScene ();
Member Added: public static bool SaveCurrentSceneIfUserWantsTo ();
Member Added: public static void OpenProject (string projectPath, string[] args);
Member Added: public static void SaveAssets ();
Member Added: public static void Step ();
Member Added: public static void LockReloadAssemblies ();
Member Added: public static bool ExecuteMenuItem (string menuItemPath);
Member Added: public static void UnlockReloadAssemblies ();
Member Added: public static void Exit (int returnValue);
Member Added: public static void RepaintProjectWindow ();
Member Added: public static void RepaintHierarchyWindow ();
Member Added: public static void Beep ();
Member Added: public static string currentScene { get; }
Member Added: public static bool isPlaying { set; get; }
Member Added: public static bool isPlayingOrWillChangePlaymode { get; }
Member Added: public static bool isPaused { set; get; }
Member Added: public static bool isCompiling { get; }
Member Added: public static string applicationContentsPath { get; }
Member Added: public static string applicationPath { get; }
Member Added: public static double timeSinceStartup { get; }
New Type: UnityEditor.EditorApplication/ProjectWindowItemCallback
New Type: UnityEditor.EditorApplication/HierarchyWindowItemCallback
New Type: UnityEditor.EditorApplication/CallbackFunction
New Type: UnityEditor.EditorGUIUtility
Member Added: public EditorGUIUtility ();
Member Added: public static UnityEngine.FocusType native;
Member Added: public static UnityEngine.GUIContent ObjectContent (UnityEngine.Object obj, Type type);
Member Added: public static bool HasObjectThumbnail (Type objType);
Member Added: public static void SetIconSize (UnityEngine.Vector2 size);
Member Added: public static UnityEngine.Vector2 GetIconSize ();
Member Added: public static UnityEngine.Texture2D FindTexture (string name);
Member Added: public static UnityEngine.GUISkin GetBuiltinSkin (UnityEditor.EditorSkin skin);
Member Added: public static UnityEngine.Object LoadRequired (string path);
Member Added: public static UnityEngine.Object Load (string path);
Member Added: public static void PingObject (UnityEngine.Object obj);
Member Added: public static void PingObject (int targetInstanceID);
Member Added: public static void RenderGameViewCameras (UnityEngine.Rect cameraRect, UnityEngine.Rect statsRect, bool stats, bool gizmos);
Member Added: public static void QueueGameViewInputEvent (UnityEngine.Event evt);
Member Added: public static void LookLikeControls (float labelWidth);
Member Added: public static void LookLikeControls ();
Member Added: public static void LookLikeControls (float labelWidth, float fieldWidth);
Member Added: public static void LookLikeInspector ();
Member Added: public static UnityEngine.Event CommandEvent (string commandName);
Member Added: public static void DrawColorSwatch (UnityEngine.Rect position, UnityEngine.Color color);
Member Added: public static void DrawCurveSwatch (UnityEngine.Rect position, UnityEngine.AnimationCurve curve, UnityEditor.SerializedProperty property, UnityEngine.Color color, UnityEngine.Color bgColor);
Member Added: public static void DrawCurveSwatch (UnityEngine.Rect position, UnityEngine.AnimationCurve curve, UnityEditor.SerializedProperty property, UnityEngine.Color color, UnityEngine.Color bgColor, UnityEngine.Rect curveRanges);
Member Added: public static void DrawRegionSwatch (UnityEngine.Rect position, UnityEditor.SerializedProperty property, UnityEditor.SerializedProperty property2, UnityEngine.Color color, UnityEngine.Color bgColor, UnityEngine.Rect curveRanges);
Member Added: public static void DrawRegionSwatch (UnityEngine.Rect position, UnityEngine.AnimationCurve curve, UnityEngine.AnimationCurve curve2, UnityEngine.Color color, UnityEngine.Color bgColor, UnityEngine.Rect curveRanges);
Member Added: public static void RGBToHSV (UnityEngine.Color rgbColor, out float H, out float S, out float V);
Member Added: public static UnityEngine.Color HSVToRGB (float H, float S, float V);
Member Added: public static void AddCursorRect (UnityEngine.Rect position, UnityEditor.MouseCursor mouse);
Member Added: public static void SetWantsMouseJumping (int wantz);
Member Added: public static bool isProSkin { get; }
Member Added: public static UnityEngine.Texture2D whiteTexture { get; }
Member Added: public static string systemCopyBuffer { set; get; }
New Type: UnityEditor.MessageType
Member Added: None
Member Added: Info
Member Added: Warning
Member Added: Error
New Type: UnityEditor.EditorSkin
Member Added: Game
Member Added: Inspector
Member Added: Scene
New Type: UnityEditor.MouseCursor
Member Added: Arrow
Member Added: Text
Member Added: ResizeVertical
Member Added: ResizeHorizontal
Member Added: Link
Member Added: SlideArrow
Member Added: ResizeUpRight
Member Added: ResizeUpLeft
Member Added: MoveArrow
Member Added: RotateArrow
Member Added: ScaleArrow
New Type: UnityEditor.DrawCameraMode
Member Added: Normal
Member Added: Textured
Member Added: Wireframe
Member Added: TexturedWire
Member Added: RenderPaths
Member Added: LightmapResolution
New Type: UnityEditor.HandleUtility
Member Added: public HandleUtility ();
Member Added: public static float CalcLineTranslation (UnityEngine.Vector2 src, UnityEngine.Vector2 dest, UnityEngine.Vector3 srcPosition, UnityEngine.Vector3 constraintDir);
Member Added: public static float PointOnLineParameter (UnityEngine.Vector3 point, UnityEngine.Vector3 linePoint, UnityEngine.Vector3 lineDirection);
Member Added: public static UnityEngine.Vector3 ProjectPointLine (UnityEngine.Vector3 point, UnityEngine.Vector3 lineStart, UnityEngine.Vector3 lineEnd);
Member Added: public static float DistancePointLine (UnityEngine.Vector3 point, UnityEngine.Vector3 lineStart, UnityEngine.Vector3 lineEnd);
Member Added: public static float DistancePointBezier (UnityEngine.Vector3 point, UnityEngine.Vector3 startPosition, UnityEngine.Vector3 endPosition, UnityEngine.Vector3 startTangent, UnityEngine.Vector3 endTangent);
Member Added: public static float DistanceToLine (UnityEngine.Vector3 p1, UnityEngine.Vector3 p2);
Member Added: public static float DistanceToCircle (UnityEngine.Vector3 position, float radius);
Member Added: public static float DistanceToRectangle (UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, float size);
Member Added: public static float DistancePointToLine (UnityEngine.Vector2 p, UnityEngine.Vector2 a, UnityEngine.Vector2 b);
Member Added: public static float DistancePointToLineSegment (UnityEngine.Vector2 p, UnityEngine.Vector2 a, UnityEngine.Vector2 b);
Member Added: public static float DistanceToDisc (UnityEngine.Vector3 center, UnityEngine.Vector3 normal, float radius);
Member Added: public static UnityEngine.Vector3 ClosestPointToDisc (UnityEngine.Vector3 center, UnityEngine.Vector3 normal, float radius);
Member Added: public static float DistanceToArc (UnityEngine.Vector3 center, UnityEngine.Vector3 normal, UnityEngine.Vector3 from, float angle, float radius);
Member Added: public static UnityEngine.Vector3 ClosestPointToArc (UnityEngine.Vector3 center, UnityEngine.Vector3 normal, UnityEngine.Vector3 from, float angle, float radius);
Member Added: public static float DistanceToPolyLine (UnityEngine.Vector3[] points);
Member Added: public static UnityEngine.Vector3 ClosestPointToPolyLine (UnityEngine.Vector3[] vertices);
Member Added: public static void AddControl (int controlId, float distance);
Member Added: public static void AddDefaultControl (int controlId);
Member Added: public static float GetHandleSize (UnityEngine.Vector3 position);
Member Added: public static UnityEngine.Vector2 WorldToGUIPoint (UnityEngine.Vector3 world);
Member Added: public static UnityEngine.Ray GUIPointToWorldRay (UnityEngine.Vector2 position);
Member Added: public static UnityEngine.Rect WorldPointToSizedRect (UnityEngine.Vector3 position, UnityEngine.GUIContent content, UnityEngine.GUIStyle style);
Member Added: public static UnityEngine.GameObject[] PickRectObjects (UnityEngine.Rect rect);
Member Added: public static UnityEngine.GameObject[] PickRectObjects (UnityEngine.Rect rect, bool selectPrefabRootsOnly);
Member Added: public static UnityEngine.GameObject PickGameObject (UnityEngine.Vector2 position, bool selectPrefabRoot);
Member Added: public static void PushCamera (UnityEngine.Camera camera);
Member Added: public static void PopCamera (UnityEngine.Camera camera);
Member Added: public static object RaySnap (UnityEngine.Ray ray);
Member Added: public static void Repaint ();
Member Added: public static float acceleration { get; }
Member Added: public static float niceMouseDelta { get; }
Member Added: public static float niceMouseDeltaZoom { get; }
Member Added: public static int nearestControl { set; get; }
Member Added: public static UnityEngine.Material handleMaterial { get; }
New Type: UnityEditor.SerializationMode
Member Added: Mixed
Member Added: ForceBinary
Member Added: ForceText
New Type: UnityEditor.ExternalVersionControl
Member Added: AutoDetect
Member Added: Disabled
Member Added: Generic
Member Added: Subversion
Member Added: Perforce
Member Added: AssetServer
New Type: UnityEditor.EditorSettings
Member Added: public EditorSettings ();
Member Added: public static UnityEditor.ExternalVersionControl externalVersionControl { set; get; }
Member Added: public static UnityEditor.SerializationMode serializationMode { set; get; }
Member Added: public static string webSecurityEmulationHostUrl { set; get; }
New Type: UnityEditor.EditorUserSettings
Member Added: public EditorUserSettings ();
Member Added: public static string Server { set; get; }
Member Added: public static string User { set; get; }
Member Added: public static string Workspace { set; get; }
Member Added: public static string Password { set; get; }
Member Added: public static bool AutomaticAdd { set; get; }
Member Added: public static bool WorkOffline { set; get; }
New Type: UnityEditor.EditorWindow
Member Added: public EditorWindow ();
Member Added: public void BeginWindows ();
Member Added: public void EndWindows ();
Member Added: public void ShowNotification (UnityEngine.GUIContent notification);
Member Added: public void RemoveNotification ();
Member Added: public void ShowTab ();
Member Added: public void Focus ();
Member Added: public void ShowUtility ();
Member Added: public void ShowPopup ();
Member Added: public void Show ();
Member Added: public void Show (bool immediateDisplay);
Member Added: public void ShowAuxWindow ();
Member Added: public static UnityEditor.EditorWindow GetWindow (Type t, bool utility, string title);
Member Added: public static UnityEditor.EditorWindow GetWindow (Type t, bool utility);
Member Added: public static UnityEditor.EditorWindow GetWindow (Type t);
Member Added: public static UnityEditor.EditorWindow GetWindow (Type t, bool utility, string title, bool focus);
Member Added: public static T GetWindow<T> () where T : UnityEditor.EditorWindow;
Member Added: public static T GetWindow<T> (bool utility) where T : UnityEditor.EditorWindow;
Member Added: public static T GetWindow<T> (bool utility, string title) where T : UnityEditor.EditorWindow;
Member Added: public static T GetWindow<T> (string title) where T : UnityEditor.EditorWindow;
Member Added: public static T GetWindow<T> (string title, bool focus) where T : UnityEditor.EditorWindow;
Member Added: public static T GetWindow<T> (bool utility, string title, bool focus) where T : UnityEditor.EditorWindow;
Member Added: public static T GetWindow<T> (Type[] desiredDockNextTo) where T : UnityEditor.EditorWindow;
Member Added: public static T GetWindow<T> (string title, Type[] desiredDockNextTo) where T : UnityEditor.EditorWindow;
Member Added: public static T GetWindow<T> (string title, bool focus, Type[] desiredDockNextTo) where T : UnityEditor.EditorWindow;
Member Added: public static void FocusWindowIfItsOpen (Type t);
Member Added: public static void FocusWindowIfItsOpen<T> () where T : UnityEditor.EditorWindow;
Member Added: public static UnityEditor.EditorWindow GetWindowWithRect (Type t, UnityEngine.Rect rect, bool utility);
Member Added: public static UnityEditor.EditorWindow GetWindowWithRect (Type t, UnityEngine.Rect rect);
Member Added: public static UnityEditor.EditorWindow GetWindowWithRect (Type t, UnityEngine.Rect rect, bool utility, string title);
Member Added: public static T GetWindowWithRect<T> (UnityEngine.Rect rect) where T : UnityEditor.EditorWindow;
Member Added: public static T GetWindowWithRect<T> (UnityEngine.Rect rect, bool utility) where T : UnityEditor.EditorWindow;
Member Added: public static T GetWindowWithRect<T> (UnityEngine.Rect rect, bool utility, string title) where T : UnityEditor.EditorWindow;
Member Added: public static T GetWindowWithRect<T> (UnityEngine.Rect rect, bool utility, string title, bool focus) where T : UnityEditor.EditorWindow;
Member Added: public void Close ();
Member Added: public void Repaint ();
Member Added: public bool SendEvent (UnityEngine.Event e);
Member Added: public bool wantsMouseMove { set; get; }
Member Added: public bool autoRepaintOnSceneChange { set; get; }
Member Added: public static UnityEditor.EditorWindow focusedWindow { get; }
Member Added: public static UnityEditor.EditorWindow mouseOverWindow { get; }
Member Added: public UnityEngine.Vector2 minSize { set; get; }
Member Added: public UnityEngine.Vector2 maxSize { set; get; }
Member Added: public string title { set; get; }
Member Added: public int depthBufferBits { set; get; }
Member Added: public int antiAlias { set; get; }
Member Added: public UnityEngine.Rect position { set; get; }
New Type: UnityEditor.ReplacePrefabOptions
Member Added: Default
Member Added: ConnectToPrefab
Member Added: ReplaceNameBased
New Type: UnityEditor.PrefabType
Member Added: None
Member Added: Prefab
Member Added: ModelPrefab
Member Added: PrefabInstance
Member Added: ModelPrefabInstance
Member Added: MissingPrefabInstance
Member Added: DisconnectedPrefabInstance
Member Added: DisconnectedModelPrefabInstance
New Type: UnityEditor.PropertyModification
Member Added: public PropertyModification ();
Member Added: public UnityEngine.Object target;
Member Added: public string propertyPath;
Member Added: public string value;
Member Added: public UnityEngine.Object objectReference;
New Type: UnityEditor.PrefabUtility
Member Added: public PrefabUtility ();
Member Added: public static UnityEngine.Object GetPrefabParent (UnityEngine.Object source);
Member Added: public static UnityEngine.Object GetPrefabObject (UnityEngine.Object targetObject);
Member Added: public static UnityEditor.PropertyModification[] GetPropertyModifications (UnityEngine.Object targetPrefab);
Member Added: public static void SetPropertyModifications (UnityEngine.Object targetPrefab, UnityEditor.PropertyModification[] modifications);
Member Added: public static UnityEngine.Object InstantiateAttachedAsset (UnityEngine.Object targetObject);
Member Added: public static void RecordPrefabInstancePropertyModifications (UnityEngine.Object targetObject);
Member Added: public static void MergeAllPrefabInstances (UnityEngine.Object targetObject);
Member Added: public static void DisconnectPrefabInstance (UnityEngine.Object targetObject);
Member Added: public static UnityEngine.Object InstantiatePrefab (UnityEngine.Object target);
Member Added: public static UnityEngine.Object CreateEmptyPrefab (string path);
Member Added: public static UnityEngine.GameObject CreatePrefab (string path, UnityEngine.GameObject go, UnityEditor.ReplacePrefabOptions options);
Member Added: public static UnityEngine.GameObject CreatePrefab (string path, UnityEngine.GameObject go);
Member Added: public static UnityEngine.GameObject ReplacePrefab (UnityEngine.GameObject go, UnityEngine.Object targetPrefab, UnityEditor.ReplacePrefabOptions options);
Member Added: public static UnityEngine.GameObject ReplacePrefab (UnityEngine.GameObject go, UnityEngine.Object targetPrefab);
Member Added: public static UnityEngine.GameObject FindRootGameObjectWithSameParentPrefab (UnityEngine.GameObject target);
Member Added: public static UnityEngine.GameObject FindValidUploadPrefabInstanceRoot (UnityEngine.GameObject target);
Member Added: public static bool ReconnectToLastPrefab (UnityEngine.GameObject go);
Member Added: public static bool ResetToPrefabState (UnityEngine.Object obj);
Member Added: public static bool IsComponentAddedToPrefabInstance (UnityEngine.Object source);
Member Added: public static bool RevertPrefabInstance (UnityEngine.GameObject go);
Member Added: public static UnityEditor.PrefabType GetPrefabType (UnityEngine.Object target);
Member Added: public static UnityEngine.GameObject FindPrefabRoot (UnityEngine.GameObject source);
New Type: UnityEditor.UndoSnapshot
Member Added: public UndoSnapshot (UnityEngine.Object[] objectsToUndo);
Member Added: public void Restore ();
Member Added: public void Dispose ();
New Type: UnityEditor.Undo
Member Added: public Undo ();
Member Added: public static void RegisterUndo (UnityEngine.Object objectToUndo, string name);
Member Added: public static void RegisterUndo (UnityEngine.Object[] objectsToUndo, string name);
Member Added: public static void RegisterSetTransformParentUndo (UnityEngine.Transform transform, UnityEngine.Transform newParent, string name);
Member Added: public static void RegisterSceneUndo (string name);
Member Added: public static void RegisterCreatedObjectUndo (UnityEngine.Object objectToUndo, string name);
Member Added: public static void ClearUndo (UnityEngine.Object identifier);
Member Added: public static void SetSnapshotTarget (UnityEngine.Object objectToUndo, string name);
Member Added: public static void SetSnapshotTarget (UnityEngine.Object[] objectsToUndo, string name);
Member Added: public static void ClearSnapshotTarget ();
Member Added: public static void CreateSnapshot ();
Member Added: public static void RestoreSnapshot ();
Member Added: public static void RegisterSnapshot ();
Member Added: public static void PerformUndo ();
Member Added: public static void PerformRedo ();
Member Added: public static void IncrementCurrentEventIndex ();
New Type: UnityEditor.ExportPackageOptions
Member Added: Default
Member Added: Interactive
Member Added: Recurse
Member Added: IncludeDependencies
Member Added: IncludeLibraryAssets
New Type: UnityEditor.PS3BuildSubtarget
Member Added: PCHosted
Member Added: HddTitle
Member Added: BluRayTitle
New Type: UnityEditor.WiiBuildSubtarget
Member Added: DVD
Member Added: WiiWare
Member Added: DVDLibrary
Member Added: WiiWareLibrary
New Type: UnityEditor.WiiBuildDebugLevel
Member Added: Full
Member Added: Minimal
Member Added: None
New Type: UnityEditor.XboxBuildSubtarget
Member Added: Development
Member Added: Master
Member Added: Debug
New Type: UnityEditor.XboxRunMethod
Member Added: HDD
Member Added: DiscEmuFast
Member Added: DiscEmuAccurate
New Type: UnityEditor.AndroidBuildSubtarget
Member Added: Generic
Member Added: DXT
Member Added: PVRTC
Member Added: ATC
Member Added: ETC
New Type: UnityEditor.BuildAssetBundleOptions
Member Added: CollectDependencies
Member Added: CompleteAssets
Member Added: DisableWriteTypeTree
Member Added: DeterministicAssetBundle
New Type: UnityEditor.EditorBuildSettingsScene
Member Added: public EditorBuildSettingsScene (string path, bool enable);
Member Added: public EditorBuildSettingsScene ();
Member Added: public int CompareTo (object obj);
Member Added: public bool enabled { set; get; }
Member Added: public string path { set; get; }
New Type: UnityEditor.EditorBuildSettings
Member Added: public EditorBuildSettings ();
Member Added: public static UnityEditor.EditorBuildSettingsScene[] scenes { set; get; }
New Type: UnityEditor.EditorUserBuildSettings
Member Added: public EditorUserBuildSettings ();
Member Added: public static Action activeBuildTargetChanged;
Member Added: public static void SwitchActiveBuildTarget (UnityEditor.BuildTarget target);
Member Added: public static string GetBuildLocation (UnityEditor.BuildTarget target);
Member Added: public static void SetBuildLocation (UnityEditor.BuildTarget target, string location);
Member Added: public static UnityEditor.BuildTargetGroup selectedBuildTargetGroup { set; get; }
Member Added: public static UnityEditor.BuildTarget selectedStandaloneTarget { set; get; }
Member Added: public static UnityEditor.PS3BuildSubtarget ps3BuildSubtarget { set; get; }
Member Added: public static bool explicitNullChecks { set; get; }
Member Added: public static UnityEditor.WiiBuildSubtarget wiiBuildSubtarget { set; get; }
Member Added: public static UnityEditor.XboxBuildSubtarget xboxBuildSubtarget { set; get; }
Member Added: public static bool xboxCompressedXex { set; get; }
Member Added: public static UnityEditor.WiiBuildDebugLevel wiiBuildDebugLevel { set; get; }
Member Added: public static UnityEditor.XboxRunMethod xboxRunMethod { set; get; }
Member Added: public static UnityEditor.AndroidBuildSubtarget androidBuildSubtarget { set; get; }
Member Added: public static bool webPlayerStreamed { set; get; }
Member Added: public static bool webPlayerOfflineDeployment { set; get; }
Member Added: public static bool webPlayerDeployOnline { set; get; }
Member Added: public static bool webPlayerNaClSupport { set; get; }
Member Added: public static bool stripPhysics { set; get; }
Member Added: public static UnityEditor.BuildTarget activeBuildTarget { get; }
Member Added: public static string[] activeScriptCompilationDefines { get; }
Member Added: public static bool development { set; get; }
Member Added: public static bool connectProfiler { set; get; }
Member Added: public static bool allowDebugging { set; get; }
Member Added: public static bool appendProject { set; get; }
Member Added: public static bool symlinkLibraries { set; get; }
Member Added: public static bool installInBuildFolder { set; get; }
Member Added: public static UnityEditor.BuildOptions architectureFlags { set; get; }
New Type: UnityEditor.ActiveEditorTracker
Member Added: public ActiveEditorTracker ();
Member Added: public override bool Equals (object o);
Member Added: public override int GetHashCode ();
Member Added: ~ActiveEditorTracker ();
Member Added: public void Destroy ();
Member Added: public int GetVisible (int index);
Member Added: public void SetVisible (int index, int visible);
Member Added: public void ClearDirty ();
Member Added: public void RebuildIfNecessary ();
Member Added: public void VerifyModifiedMonoBehaviours ();
Member Added: public static UnityEditor.Editor MakeCustomEditor (UnityEngine.Object obj);
Member Added: public static bool HasCustomEditor (UnityEngine.Object obj);
Member Added: public UnityEditor.Editor[] activeEditors { get; }
Member Added: public bool isDirty { get; }
Member Added: public bool isLocked { set; get; }
Member Added: public UnityEditor.InspectorMode inspectorMode { set; get; }
Member Added: public bool hasComponentsWhichCannotBeMultiEdited { get; }
Member Added: public static UnityEditor.ActiveEditorTracker sharedTracker { get; }
New Type: UnityEditor.InspectorMode
Member Added: Normal
Member Added: Debug
Member Added: DebugInternal
New Type: UnityEditor.ImportAssetOptions
Member Added: Default
Member Added: ForceUpdate
Member Added: ForceSynchronousImport
Member Added: TryFastReimportFromMetaData
Member Added: ImportRecursive
New Type: UnityEditor.HierarchyType
Member Added: Assets
Member Added: GameObjects
Member Added: AssetsAndGameObjectsFiltered
New Type: UnityEditor.HierarchyProperty
Member Added: public HierarchyProperty (UnityEditor.HierarchyType hierarchytType);
Member Added: public void Reset ();
Member Added: ~HierarchyProperty ();
Member Added: public bool IsExpanded (int[] expanded);
Member Added: public bool Next (int[] expanded);
Member Added: public bool Previous (int[] expanded);
Member Added: public bool Parent ();
Member Added: public bool Find (int instanceID, int[] expanded);
Member Added: public bool Skip (int count, int[] expanded);
Member Added: public int CountRemaining (int[] expanded);
Member Added: public void SetSearchFilter (string filter, int mode);
Member Added: public int[] FindAllAncestors (int[] instanceIDs);
Member Added: public static void FilterSingleSceneObject (int instanceID, bool otherVisibilityState);
Member Added: public int instanceID { get; }
Member Added: public UnityEngine.Object pptrValue { get; }
Member Added: public string name { get; }
Member Added: public bool hasChildren { get; }
Member Added: public int depth { get; }
Member Added: public int[] ancestors { get; }
Member Added: public int row { get; }
Member Added: public int colorCode { get; }
Member Added: public string guid { get; }
Member Added: public bool isValid { get; }
Member Added: public bool isMainRepresentation { get; }
Member Added: public UnityEngine.Texture2D icon { get; }
New Type: UnityEditor.AssetMoveResult
Member Added: DidNotMove
Member Added: FailedMove
Member Added: DidMove
New Type: UnityEditor.AssetDeleteResult
Member Added: DidNotDelete
Member Added: FailedDelete
Member Added: DidDelete
New Type: UnityEditor.SaveAssetsProcessor
Member Added: public SaveAssetsProcessor ();
New Type: UnityEditor.ModelImporterClipAnimation
Member Added: public ModelImporterClipAnimation ();
Member Added: public override bool Equals (object o);
Member Added: public override int GetHashCode ();
Member Added: public string name { set; get; }
Member Added: public int firstFrame { set; get; }
Member Added: public int lastFrame { set; get; }
Member Added: public UnityEngine.WrapMode wrapMode { set; get; }
Member Added: public bool loop { set; get; }
New Type: UnityEditor.ModelImporterGenerateMaterials
Member Added: None
Member Added: PerTexture
Member Added: PerSourceMaterial
New Type: UnityEditor.ModelImporterMaterialName
Member Added: BasedOnTextureName
Member Added: BasedOnMaterialName
Member Added: BasedOnModelNameAndMaterialName
Member Added: BasedOnTextureName_Or_ModelNameAndMaterialName
New Type: UnityEditor.ModelImporterMaterialSearch
Member Added: Local
Member Added: RecursiveUp
Member Added: Everywhere
New Type: UnityEditor.ModelImporterGenerateAnimations
Member Added: None
Member Added: InRoot
Member Added: InOriginalRoots
Member Added: InNodes
New Type: UnityEditor.ModelImporterTangentSpaceMode
Member Added: Import
Member Added: Calculate
Member Added: None
New Type: UnityEditor.ModelImporterMeshCompression
Member Added: Off
Member Added: Low
Member Added: Medium
Member Added: High
New Type: UnityEditor.ModelImporterAnimationCompression
Member Added: Off
Member Added: KeyframeReduction
Member Added: KeyframeReductionAndCompression
New Type: UnityEditor.ModelImporter
Member Added: public ModelImporter ();
Member Added: public UnityEditor.ModelImporterGenerateMaterials generateMaterials { set; get; }
Member Added: public bool importMaterials { set; get; }
Member Added: public UnityEditor.ModelImporterMaterialName materialName { set; get; }
Member Added: public UnityEditor.ModelImporterMaterialSearch materialSearch { set; get; }
Member Added: public float globalScale { set; get; }
Member Added: public bool isUseFileUnitsSupported { get; }
Member Added: public bool useFileUnits { set; get; }
Member Added: public bool addCollider { set; get; }
Member Added: public float normalSmoothingAngle { set; get; }
Member Added: public bool splitTangentsAcrossSeams { set; get; }
Member Added: public bool swapUVChannels { set; get; }
Member Added: public bool generateSecondaryUV { set; get; }
Member Added: public float secondaryUVAngleDistortion { set; get; }
Member Added: public float secondaryUVAreaDistortion { set; get; }
Member Added: public float secondaryUVHardAngle { set; get; }
Member Added: public float secondaryUVPackMargin { set; get; }
Member Added: public UnityEditor.ModelImporterGenerateAnimations generateAnimations { set; get; }
Member Added: public bool optimizeMesh { set; get; }
Member Added: public UnityEditor.ModelImporterTangentSpaceMode normalImportMode { set; get; }
Member Added: public UnityEditor.ModelImporterTangentSpaceMode tangentImportMode { set; get; }
Member Added: public bool bakeIK { set; get; }
Member Added: public bool isBakeIKSupported { get; }
Member Added: public bool isTangentImportSupported { get; }
Member Added: public UnityEditor.ModelImporterMeshCompression meshCompression { set; get; }
Member Added: public UnityEditor.ModelImporterAnimationCompression animationCompression { set; get; }
Member Added: public float animationRotationError { set; get; }
Member Added: public float animationPositionError { set; get; }
Member Added: public float animationScaleError { set; get; }
Member Added: public bool splitAnimations { set; get; }
Member Added: public UnityEngine.WrapMode animationWrapMode { set; get; }
Member Added: public UnityEditor.ModelImporterClipAnimation[] clipAnimations { set; get; }
New Type: UnityEditor.TextureImporterFormat
Member Added: AutomaticCompressed
Member Added: Automatic16bit
Member Added: AutomaticTruecolor
Member Added: DXT1
Member Added: DXT5
Member Added: RGB16
Member Added: RGB24
Member Added: Alpha8
Member Added: ARGB16
Member Added: RGBA32
Member Added: ARGB32
Member Added: WiiI4
Member Added: WiiI8
Member Added: WiiIA4
Member Added: WiiIA8
Member Added: WiiRGB565
Member Added: WiiRGB5A3
Member Added: WiiRGBA8
Member Added: WiiCMPR
Member Added: PVRTC_RGB2
Member Added: PVRTC_RGBA2
Member Added: PVRTC_RGB4
Member Added: PVRTC_RGBA4
Member Added: ETC_RGB4
Member Added: ATC_RGB4
Member Added: ATC_RGBA8
Member Added: ATF_RGB_DXT1
Member Added: ATF_RGBA_JPG
Member Added: ATF_RGB_JPG
New Type: UnityEditor.TextureImporterMipFilter
Member Added: BoxFilter
Member Added: KaiserFilter
New Type: UnityEditor.TextureImporterGenerateCubemap
Member Added: None
Member Added: Spheremap
Member Added: Cylindrical
Member Added: SimpleSpheremap
Member Added: NiceSpheremap
New Type: UnityEditor.TextureImporterNPOTScale
Member Added: None
Member Added: ToNearest
Member Added: ToLarger
Member Added: ToSmaller
New Type: UnityEditor.TextureImporterNormalFilter
Member Added: Standard
Member Added: Sobel
New Type: UnityEditor.TextureImporterType
Member Added: Image
Member Added: Bump
Member Added: GUI
Member Added: Reflection
Member Added: Cookie
Member Added: Lightmap
Member Added: Advanced
New Type: UnityEditor.TextureImporter
Member Added: public TextureImporter ();
Member Added: public bool GetPlatformTextureSettings (string platform, out int maxTextureSize, out UnityEditor.TextureImporterFormat textureFormat, out int compressionQuality);
Member Added: public bool GetPlatformTextureSettings (string platform, out int maxTextureSize, out UnityEditor.TextureImporterFormat textureFormat);
Member Added: public void SetPlatformTextureSettings (string platform, int maxTextureSize, UnityEditor.TextureImporterFormat textureFormat, int compressionQuality);
Member Added: public void SetPlatformTextureSettings (string platform, int maxTextureSize, UnityEditor.TextureImporterFormat textureFormat);
Member Added: public void ClearPlatformTextureSettings (string platform);
Member Added: public bool DoesSourceTextureHaveAlpha ();
Member Added: public bool DoesSourceTextureHaveColor ();
Member Added: public void ReadTextureSettings (UnityEditor.TextureImporterSettings dest);
Member Added: public void SetTextureSettings (UnityEditor.TextureImporterSettings src);
Member Added: public UnityEditor.TextureImporterFormat textureFormat { set; get; }
Member Added: public int maxTextureSize { set; get; }
Member Added: public bool grayscaleToAlpha { set; get; }
Member Added: public UnityEditor.TextureImporterGenerateCubemap generateCubemap { set; get; }
Member Added: public UnityEditor.TextureImporterNPOTScale npotScale { set; get; }
Member Added: public bool isReadable { set; get; }
Member Added: public bool mipmapEnabled { set; get; }
Member Added: public bool borderMipmap { set; get; }
Member Added: public bool linearTexture { set; get; }
Member Added: public UnityEditor.TextureImporterMipFilter mipmapFilter { set; get; }
Member Added: public bool fadeout { set; get; }
Member Added: public int mipmapFadeDistanceStart { set; get; }
Member Added: public int mipmapFadeDistanceEnd { set; get; }
Member Added: public bool generateMipsInLinearSpace { set; get; }
Member Added: public bool correctGamma { set; get; }
Member Added: public bool convertToNormalmap { set; get; }
Member Added: public bool normalmap { set; get; }
Member Added: public UnityEditor.TextureImporterNormalFilter normalmapFilter { set; get; }
Member Added: public float heightmapScale { set; get; }
Member Added: public bool lightmap { set; get; }
Member Added: public int anisoLevel { set; get; }
Member Added: public UnityEngine.FilterMode filterMode { set; get; }
Member Added: public UnityEngine.TextureWrapMode wrapMode { set; get; }
Member Added: public float mipMapBias { set; get; }
Member Added: public UnityEditor.TextureImporterType textureType { set; get; }
New Type: UnityEditor.TextureImporterSettings
Member Added: public TextureImporterSettings ();
Member Added: public static bool Equal (UnityEditor.TextureImporterSettings a, UnityEditor.TextureImporterSettings b);
Member Added: public void CopyTo (UnityEditor.TextureImporterSettings target);
Member Added: public void ApplyTextureType (UnityEditor.TextureImporterType type, bool applyAll);
Member Added: public UnityEditor.TextureImporterMipFilter mipmapFilter { set; get; }
Member Added: public bool mipmapEnabled { set; get; }
Member Added: public bool generateMipsInLinearSpace { set; get; }
Member Added: public bool linearTexture { set; get; }
Member Added: public bool fadeOut { set; get; }
Member Added: public bool borderMipmap { set; get; }
Member Added: public int mipmapFadeDistanceStart { set; get; }
Member Added: public int mipmapFadeDistanceEnd { set; get; }
Member Added: public bool convertToNormalMap { set; get; }
Member Added: public bool normalMap { set; get; }
Member Added: public float heightmapScale { set; get; }
Member Added: public UnityEditor.TextureImporterNormalFilter normalMapFilter { set; get; }
Member Added: public bool grayscaleToAlpha { set; get; }
Member Added: public bool readable { set; get; }
Member Added: public UnityEditor.TextureImporterFormat textureFormat { set; get; }
Member Added: public int maxTextureSize { set; get; }
Member Added: public UnityEditor.TextureImporterNPOTScale npotScale { set; get; }
Member Added: public bool lightmap { set; get; }
Member Added: public UnityEngine.TextureCompressionQuality compressionQuality { set; get; }
Member Added: public UnityEditor.TextureImporterGenerateCubemap generateCubemap { set; get; }
Member Added: public UnityEngine.FilterMode filterMode { set; get; }
Member Added: public int aniso { set; get; }
Member Added: public float mipmapBias { set; get; }
Member Added: public UnityEngine.TextureWrapMode wrapMode { set; get; }
New Type: UnityEditor.AudioImporterFormat
Member Added: Native
Member Added: Compressed
New Type: UnityEditor.AudioImporterLoadType
Member Added: DecompressOnLoad
Member Added: CompressedInMemory
Member Added: StreamFromDisc
New Type: UnityEditor.AudioImporterChannels
Member Added: Automatic
Member Added: Mono
Member Added: Stereo
New Type: UnityEditor.AudioImporter
Member Added: public AudioImporter ();
Member Added: public UnityEditor.AudioImporterFormat format { set; get; }
Member Added: public UnityEditor.AudioImporterChannels channels { set; get; }
Member Added: public int compressionBitrate { set; get; }
Member Added: public UnityEditor.AudioImporterLoadType loadType { set; get; }
Member Added: public bool threeD { set; get; }
Member Added: public bool forceToMono { set; get; }
Member Added: public bool hardware { set; get; }
Member Added: public bool loopable { set; get; }
New Type: UnityEditor.MovieImporter
Member Added: public MovieImporter ();
Member Added: public float quality { set; get; }
Member Added: public float duration { get; }
New Type: UnityEditor.FontTextureCase
Member Added: Dynamic
Member Added: Unicode
Member Added: ASCII
Member Added: ASCIIUpperCase
Member Added: ASCIILowerCase
Member Added: CustomSet
New Type: UnityEditor.FontRenderMode
Member Added: LightAntialiasing
Member Added: StrongAntialiasing
Member Added: NoAntialiasing
New Type: UnityEditor.TrueTypeFontImporter
Member Added: public TrueTypeFontImporter ();
Member Added: public int fontSize { set; get; }
Member Added: public UnityEditor.FontTextureCase fontTextureCase { set; get; }
Member Added: public UnityEditor.FontRenderMode fontRenderMode { set; get; }
Member Added: public bool includeFontData { set; get; }
Member Added: public bool use2xBehaviour { set; get; }
Member Added: public string[] fontNames { set; get; }
Member Added: public string customCharacters { set; get; }
Member Added: public string fontTTFName { get; }
Member Added: public UnityEngine.FontStyle style { set; get; }
New Type: UnityEditor.TextureUsageMode
Member Added: Default
Member Added: LightmapDoubleLDR
Member Added: LightmapRGBM
Member Added: NormalmapDXT5nm
Member Added: NormalmapPlain
New Type: UnityEditor.MeshUtility
Member Added: public MeshUtility ();
Member Added: public static void SetPerTriangleUV2 (UnityEngine.Mesh src, UnityEngine.Vector2[] triUV);
New Type: UnityEditor.ArrayUtility
Member Added: public ArrayUtility ();
Member Added: public static void Add<T> (ref T[] array, T item);
Member Added: public static bool ArrayEquals<T> (T[] lhs, T[] rhs);
Member Added: public static void AddRange<T> (ref T[] array, T[] items);
Member Added: public static void Insert<T> (ref T[] array, int index, T item);
Member Added: public static void Remove<T> (ref T[] array, T item);
Member Added: public static T Find<T> (T[] array, Predicate<T> match);
Member Added: public static int FindIndex<T> (T[] array, Predicate<T> match);
Member Added: public static int IndexOf<T> (T[] array, T value);
Member Added: public static int LastIndexOf<T> (T[] array, T value);
Member Added: public static void RemoveAt<T> (ref T[] array, int index);
Member Added: public static bool Contains<T> (T[] array, T item);
Member Added: public static void Clear<T> (ref T[] array);
New Type: UnityEditor.UnwrapParam
Member Added: public float angleError;
Member Added: public float areaError;
Member Added: public float hardAngle;
Member Added: public float packMargin;
Member Added: public static void SetDefaults (out UnityEditor.UnwrapParam param);
New Type: UnityEditor.Unwrapping
Member Added: public Unwrapping ();
Member Added: public static UnityEngine.Vector2[] GeneratePerTriangleUV (UnityEngine.Mesh src);
Member Added: public static UnityEngine.Vector2[] GeneratePerTriangleUV (UnityEngine.Mesh src, UnityEditor.UnwrapParam settings);
Member Added: public static void GenerateSecondaryUVSet (UnityEngine.Mesh src);
Member Added: public static void GenerateSecondaryUVSet (UnityEngine.Mesh src, UnityEditor.UnwrapParam settings);
New Type: UnityEditor.Lightmapping
Member Added: public Lightmapping ();
Member Added: public static bool BakeAsync ();
Member Added: public static bool Bake ();
Member Added: public static bool BakeSelectedAsync ();
Member Added: public static bool BakeSelected ();
Member Added: public static bool BakeLightProbesOnlyAsync ();
Member Added: public static bool BakeLightProbesOnly ();
Member Added: public static void Cancel ();
Member Added: public static void Clear ();
Member Added: public static void Tetrahedralize (UnityEngine.Vector3[] positions, out int[] outIndices, out UnityEngine.Vector3[] outPositions);
Member Added: public static bool isRunning { get; }
New Type: UnityEditor.LightmapBakeQuality
Member Added: High
Member Added: Low
New Type: UnityEditor.LightmapEditorSettings
Member Added: public LightmapEditorSettings ();
Member Added: public static float bounceBoost { set; get; }
Member Added: public static float bounceIntensity { set; get; }
Member Added: public static int maxAtlasWidth { set; get; }
Member Added: public static int maxAtlasHeight { set; get; }
Member Added: public static float resolution { set; get; }
Member Added: public static float lastUsedResolution { set; get; }
Member Added: public static UnityEngine.Color skyLightColor { set; get; }
Member Added: public static float skyLightIntensity { set; get; }
Member Added: public static UnityEditor.LightmapBakeQuality quality { set; get; }
Member Added: public static bool textureCompression { set; get; }
Member Added: public static int bounces { set; get; }
Member Added: public static int finalGatherRays { set; get; }
Member Added: public static float finalGatherContrastThreshold { set; get; }
Member Added: public static float finalGatherGradientThreshold { set; get; }
Member Added: public static int finalGatherInterpolationPoints { set; get; }
Member Added: public static float aoAmount { set; get; }
Member Added: public static float aoMaxDistance { set; get; }
Member Added: public static float aoContrast { set; get; }
Member Added: public static bool lockAtlas { set; get; }
Member Added: public static int padding { set; get; }
New Type: UnityEditor.StaticOcclusionCullingMode
Member Added: PVSOnly
Member Added: PVSAndDynamicObjects
Member Added: AutomaticPortals
New Type: UnityEditor.StaticOcclusionCulling
Member Added: public StaticOcclusionCulling ();
Member Added: public static bool Compute (float viewCellSize, float nearClipPlane, float farClipPlane, int memoryLimit, UnityEditor.StaticOcclusionCullingMode mode);
Member Added: public static bool GenerateInBackground (float viewCellSize, float nearClipPlane, float farClipPlane, int memoryLimit, UnityEditor.StaticOcclusionCullingMode mode);
Member Added: public static void Cancel ();
Member Added: public static void Clear ();
Member Added: public static bool isRunning { get; }
Member Added: public static bool doesSceneHaveManualPortals { get; }
Member Added: public static int umbraDataSize { get; }
Member Added: public static int dynamicObjectDataSize { get; }
Member Added: public static int staticObjectDataSize { get; }
New Type: UnityEditor.StaticOcclusionCullingVisualization
Member Added: public StaticOcclusionCullingVisualization ();
Member Added: public static bool showOcclusionCulling { set; get; }
Member Added: public static UnityEditor.StaticOcclusionCullingMode occlusionCullingMode { set; get; }
Member Added: public static bool showPreVisualization { set; get; }
Member Added: public static bool showViewVolumes { set; get; }
Member Added: public static bool showPortals { set; get; }
Member Added: public static bool showVisibilityLines { set; get; }
Member Added: public static bool showGeometryCulling { set; get; }
Member Added: public static float nearClipPlane { set; get; }
Member Added: public static float farClipPlane { set; get; }
Member Added: public static float viewCellSize { set; get; }
Member Added: public static bool isPreviewOcclusionCullingCameraInPVS { get; }
Member Added: public static UnityEngine.Camera previewOcclusionCamera { get; }
Member Added: public static UnityEngine.Camera previewOcclucionCamera { get; }
New Type: UnityEditorInternal.Macros
Member Added: public Macros ();
Member Added: public static void ClearLog ();
Member Added: public static string ExecuteMacro (string macro);
Member Added: public static void AddGenericMacroInstruction (string macro);
Member Added: public static bool enabled { set; get; }
Member Added: public static bool recordEvents { set; get; }
Member Added: public static string log { get; }
New Type: UnityEditor.NavMeshBuilder
Member Added: public NavMeshBuilder ();
Member Added: public static void BuildNavMesh ();
Member Added: public static void BuildNavMeshAsync ();
Member Added: public static void ClearAllNavMeshes ();
Member Added: public static void Cancel ();
Member Added: public static UnityEngine.Object navMeshSettingsObject { get; }
Member Added: public static bool isRunning { get; }
New Type: UnityEditor.UploadingBuildStatus
Member Added: Authorizing
Member Added: Authorized
Member Added: Uploading
Member Added: Uploaded
Member Added: UploadFailed
New Type: UnityEditor.OverwriteHandling
Member Added: Prompt
Member Added: Overwrite
Member Added: Version
Member Added: Cancel
New Type: UnityEditor.ResolutionDialogSetting
Member Added: Disabled
Member Added: Enabled
Member Added: HiddenByDefault
New Type: UnityEditor.AspectRatio
Member Added: AspectOthers
Member Added: Aspect4by3
Member Added: Aspect5by4
Member Added: Aspect16by10
Member Added: Aspect16by9
New Type: UnityEditor.StrippingLevel
Member Added: Disabled
Member Added: StripAssemblies
Member Added: StripByteCode
Member Added: UseMicroMSCorlib
New Type: UnityEditor.ScriptCallOptimizationLevel
Member Added: SlowAndSafe
Member Added: FastButNoExceptions
New Type: UnityEditor.iOSSdkVersion
Member Added: iOS_4_0
Member Added: iOSSimulator_4_0
Member Added: iOS_4_1
Member Added: iOSSimulator_4_1
Member Added: iOS_4_2
Member Added: iOSSimulator_4_2
Member Added: iOS_4_3
Member Added: iOSSimulator_4_3
Member Added: iOSLatest
Member Added: iOSSimulatorLatest
Member Added: Unknown
New Type: UnityEditor.iOSTargetOSVersion
Member Added: iOS_3_0
Member Added: iOS_3_1
Member Added: iOS_3_1_2
Member Added: iOS_3_1_3
Member Added: iOS_3_2
Member Added: iOS_4_0
Member Added: iOS_4_1
Member Added: iOS_4_2
Member Added: iOS_4_3
Member Added: Unknown
New Type: UnityEditor.iOSTargetDevice
Member Added: iPhoneOnly
Member Added: iPadOnly
Member Added: iPhoneAndiPad
New Type: UnityEditor.iOSShowActivityIndicatorOnLoading
Member Added: WhiteLarge
Member Added: White
Member Added: Gray
Member Added: DontShow
New Type: UnityEditor.AndroidTargetDevice
Member Added: ARMv7
Member Added: ARMv6WithVFP
Member Added: x86
New Type: UnityEditor.AndroidSdkVersions
Member Added: AndroidApiLevel6
Member Added: AndroidApiLevel7
Member Added: AndroidApiLevel8
Member Added: AndroidApiLevel9
Member Added: AndroidApiLevel10
Member Added: AndroidApiLevel11
Member Added: AndroidApiLevel12
Member Added: AndroidApiLevel13
Member Added: AndroidApiLevel14
New Type: UnityEditor.AndroidPreferredInstallLocation
Member Added: Auto
Member Added: PreferExternal
Member Added: ForceInternal
New Type: UnityEditor.AndroidShowActivityIndicatorOnLoading
Member Added: Large
Member Added: InversedLarge
Member Added: Small
Member Added: InversedSmall
Member Added: DontShow
New Type: UnityEditor.iOSTargetPlatform
Member Added: ARMv6
Member Added: ARMv6AndARMv7
Member Added: ARMv7
New Type: UnityEditor.AndroidTargetGraphics
Member Added: OpenGLES_1_x
Member Added: OpenGLES_2_0
New Type: UnityEditor.iOSTargetResolution
Member Added: Native
Member Added: Standard
Member Added: HD
New Type: UnityEditor.UIOrientation
Member Added: Portrait
Member Added: PortraitUpsideDown
Member Added: LandscapeRight
Member Added: LandscapeLeft
Member Added: AutoRotation
New Type: UnityEditor.iOSStatusBarStyle
Member Added: Default
Member Added: BlackTranslucent
Member Added: BlackOpaque
New Type: UnityEditor.AndroidSplashScreenScale
Member Added: Center
Member Added: ScaleToFit
Member Added: ScaleToFill
New Type: UnityEditor.ApiCompatibilityLevel
Member Added: NET_2_0
Member Added: NET_2_0_Subset
New Type: UnityEditor.WiiRegion
Member Added: Japan
Member Added: USA
Member Added: Europe
Member Added: China
Member Added: Korea
Member Added: Taiwan
New Type: UnityEditor.WiiMemoryLabel
Member Added: Default
Member Added: Permanent
Member Added: NewDelete
Member Added: MallocFree
Member Added: PVS
Member Added: DynamicGeometry
Member Added: VertexData
Member Added: ImmediateGeometry
Member Added: Geometry
Member Added: BatchedGeometry
Member Added: Particles
Member Added: Texture
Member Added: TextureCache
Member Added: Animation
Member Added: Audio
Member Added: AudioData
Member Added: AudioProcessing
Member Added: Font
Member Added: Physics
Member Added: Serialization
Member Added: IO
Member Added: IO2
Member Added: ThreadStack
Member Added: TextAsset
Member Added: GarbageCollector
Member Added: GLib
Member Added: GLibImage
Member Added: Mono
Member Added: MonoCode
Member Added: BaseObject
Member Added: Resource
Member Added: Renderer
Member Added: Transform
Member Added: File
Member Added: TempOverflow
Member Added: Network
Member Added: WebCam
Member Added: Profiler
Member Added: MemoryProfiler
Member Added: memoryProfilerString
Member Added: Skinning
Member Added: Terrain
Member Added: Shadow
Member Added: STL
Member Added: DynamicArray
Member Added: UTF16String
Member Added: Utility
Member Added: PoolAlloc
Member Added: Navigation
Member Added: AssetServerCache
Member Added: TypeTree
Member Added: ScriptManager
Member Added: EditorGui
Member Added: EditorUtility
Member Added: VersionControl
Member Added: UndoBuffer
Member Added: AssetDatabase
Member Added: WiiDefault1
Member Added: WiiDefault2
Member Added: WiiRVLAux1
Member Added: WiiRVLAux2
Member Added: WiiRenderTexture
Member Added: WiiStrapReminder
Member Added: WiiHBM
Member Added: WiiMovie
Member Added: WiiInput
Member Added: WiiNand
Member Added: WiiVI
Member Added: WiiSkinning
Member Added: WiiPThreads
Member Added: PS3Resources
Member Added: PS3RingBuffers
Member Added: PS3RSXBuffers
New Type: UnityEditor.WiiMemoryArea
Member Added: One
Member Added: Two
New Type: UnityEditor.WiiHio2Usage
Member Added: None
Member Added: Profiler
Member Added: Automation
New Type: UnityEditor.PlayerSettings
Member Added: public PlayerSettings ();
Member Added: public static bool HasAspectRatio (UnityEditor.AspectRatio aspectRatio);
Member Added: public static void SetAspectRatio (UnityEditor.AspectRatio aspectRatio, bool enable);
Member Added: public static UnityEngine.Texture2D[] GetIconsForTargetGroup (UnityEditor.BuildTargetGroup platform);
Member Added: public static void SetIconsForTargetGroup (UnityEditor.BuildTargetGroup platform, UnityEngine.Texture2D[] icons);
Member Added: public static int[] GetIconSizesForTargetGroup (UnityEditor.BuildTargetGroup platform);
Member Added: public static string companyName { set; get; }
Member Added: public static string productName { set; get; }
Member Added: public static UnityEngine.ColorSpace colorSpace { set; get; }
Member Added: public static int defaultScreenWidth { set; get; }
Member Added: public static int defaultScreenHeight { set; get; }
Member Added: public static int defaultWebScreenWidth { set; get; }
Member Added: public static int defaultWebScreenHeight { set; get; }
Member Added: public static UnityEditor.ResolutionDialogSetting displayResolutionDialog { set; get; }
Member Added: public static bool defaultIsFullScreen { set; get; }
Member Added: public static bool runInBackground { set; get; }
Member Added: public static bool captureSingleScreen { set; get; }
Member Added: public static bool usePlayerLog { set; get; }
Member Added: public static bool useMacAppStoreValidation { set; get; }
Member Added: public static bool alwaysDisplayWatermark { set; get; }
Member Added: public static int firstStreamedLevelWithResources { set; get; }
Member Added: public static UnityEngine.Texture2D resolutionDialogBanner { set; get; }
Member Added: public static string iPhoneBundleIdentifier { set; get; }
Member Added: public static string keystorePass { set; get; }
Member Added: public static string keyaliasPass { set; get; }
Member Added: public static string xboxTitleId { set; get; }
Member Added: public static string xboxImageXexFilePath { get; }
Member Added: public static string xboxSpaFilePath { get; }
Member Added: public static bool xboxGenerateSpa { get; }
Member Added: public static bool xboxDeployKinectResources { get; }
Member Added: public static UnityEngine.Texture2D xboxSplashScreen { get; }
Member Added: public static bool xboxEnableKinect { get; }
Member Added: public static bool xboxEnableKinectAutoTracking { get; }
Member Added: public static bool xboxSkinOnGPU { get; }
Member Added: public static bool xboxEnableAvatar { get; }
Member Added: public static string ps3TitleConfigPath { get; }
Member Added: public static string ps3DLCConfigPath { get; }
Member Added: public static string ps3ThumbnailPath { get; }
Member Added: public static string ps3BackgroundPath { get; }
Member Added: public static string ps3SoundPath { get; }
Member Added: public static string ps3TrophyCommId { get; }
Member Added: public static string ps3TrophyPackagePath { get; }
Member Added: public static int ps3ReservedMemorySizeMB { get; }
Member Added: public static string bundleIdentifier { set; get; }
Member Added: public static string bundleVersion { set; get; }
Member Added: public static bool statusBarHidden { set; get; }
Member Added: public static UnityEditor.StrippingLevel strippingLevel { set; get; }
Member Added: public static UnityEditor.UIOrientation defaultInterfaceOrientation { set; get; }
Member Added: public static bool allowedAutorotateToPortrait { set; get; }
Member Added: public static bool allowedAutorotateToPortraitUpsideDown { set; get; }
Member Added: public static bool allowedAutorotateToLandscapeRight { set; get; }
Member Added: public static bool allowedAutorotateToLandscapeLeft { set; get; }
Member Added: public static bool useOSAutorotation { set; get; }
Member Added: public static bool use32BitDisplayBuffer { set; get; }
Member Added: public static UnityEditor.ApiCompatibilityLevel apiCompatibilityLevel { set; get; }
Member Added: public static bool advancedLicense { get; }
Member Added: public static string aotOptions { set; get; }
Member Added: public static int accelerometerFrequency { set; get; }
Member Added: public static bool MTRendering { set; get; }
New Type: UnityEditor.PlayerSettings/Wii
Member Added: public Wii ();
Member Added: public static void SetMemoryArea (UnityEditor.WiiMemoryLabel memoryLabel, UnityEditor.WiiMemoryArea memoryArea);
Member Added: public static UnityEditor.WiiMemoryArea GetMemoryArea (UnityEditor.WiiMemoryLabel memoryLabel);
Member Added: public static void ResetMemoryAreas ();
Member Added: public static UnityEditor.WiiRegion region { set; get; }
Member Added: public static string gameCode { set; get; }
Member Added: public static string gameVersion { set; get; }
Member Added: public static string companyCode { set; get; }
Member Added: public static bool supportsNunchuk { set; get; }
Member Added: public static bool supportsClassicController { set; get; }
Member Added: public static bool supportsBalanceBoard { set; get; }
Member Added: public static bool supportsMotionPlus { set; get; }
Member Added: public static uint controllerCount { set; get; }
Member Added: public static bool floatingPointExceptions { set; get; }
Member Added: public static bool screenCrashDumps { set; get; }
Member Added: public static UnityEditor.WiiHio2Usage hio2Usage { set; get; }
New Type: UnityEditor.PlayerSettings/Android
Member Added: public Android ();
Member Added: public static bool use24BitDepthBuffer { set; get; }
Member Added: public static int bundleVersionCode { set; get; }
Member Added: public static UnityEditor.AndroidSdkVersions minSdkVersion { set; get; }
Member Added: public static UnityEditor.AndroidPreferredInstallLocation preferredInstallLocation { set; get; }
Member Added: public static bool forceInternetPermission { set; get; }
Member Added: public static bool forceSDCardPermission { set; get; }
Member Added: public static UnityEditor.AndroidTargetDevice targetDevice { set; get; }
Member Added: public static UnityEditor.AndroidTargetGraphics targetGraphics { set; get; }
Member Added: public static UnityEditor.AndroidSplashScreenScale splashScreenScale { set; get; }
Member Added: public static string keystoreName { set; get; }
Member Added: public static string keystorePass { set; get; }
Member Added: public static string keyaliasName { set; get; }
Member Added: public static string keyaliasPass { set; get; }
Member Added: public static bool licenseVerification { get; }
Member Added: public static UnityEditor.AndroidShowActivityIndicatorOnLoading showActivityIndicatorOnLoading { set; get; }
New Type: UnityEditor.PlayerSettings/iOS
Member Added: public iOS ();
Member Added: public static string applicationDisplayName { set; get; }
Member Added: public static UnityEditor.ScriptCallOptimizationLevel scriptCallOptimization { set; get; }
Member Added: public static UnityEditor.iOSSdkVersion sdkVersion { set; get; }
Member Added: public static UnityEditor.iOSTargetOSVersion targetOSVersion { set; get; }
Member Added: public static UnityEditor.iOSTargetDevice targetDevice { set; get; }
Member Added: public static UnityEditor.iOSTargetPlatform targetPlatform { set; get; }
Member Added: public static UnityEditor.iOSTargetResolution targetResolution { set; get; }
Member Added: public static bool prerenderedIcon { set; get; }
Member Added: public static bool requiresPersistentWiFi { set; get; }
Member Added: public static UnityEditor.iOSStatusBarStyle statusBarStyle { set; get; }
Member Added: public static bool exitOnSuspend { set; get; }
Member Added: public static UnityEditor.iOSShowActivityIndicatorOnLoading showActivityIndicatorOnLoading { set; get; }
Updating: UnityEditor.PlayerSettings/Wii
Updating: UnityEditor.PlayerSettings/Android
Updating: UnityEditor.PlayerSettings/iOS
New Type: UnityEditor.PreferenceItem
Member Added: public PreferenceItem (string name);
Member Added: public string name;
New Type: UnityEditorInternal.ProfilerViewType
Member Added: Hierarchy
Member Added: RawHierarchy
New Type: UnityEditorInternal.ProfilerColumn
Member Added: FunctionName
Member Added: TotalPercent
Member Added: SelfPercent
Member Added: Calls
Member Added: GCMemory
Member Added: TotalTime
Member Added: SelfTime
Member Added: DrawCalls
Member Added: TotalGPUTime
Member Added: SelfGPUTime
Member Added: TotalGPUPercent
Member Added: SelfGPUPercent
Member Added: ObjectName
New Type: UnityEditorInternal.ProfilerArea
Member Added: CPU
Member Added: GPU
Member Added: Rendering
Member Added: Memory
Member Added: Audio
Member Added: Physics
Member Added: AreaCount
New Type: UnityEditorInternal.ProfilerDriver
Member Added: public ProfilerDriver ();
Member Added: public static void BeginFrame ();
Member Added: public static void EndFrame ();
Member Added: public static int GetNextFrameIndex (int frame);
Member Added: public static int GetPreviousFrameIndex (int frame);
Member Added: public static string GetFormattedStatisticsValue (int frame, int identifier);
Member Added: public static void GetStatisticsValues (int identifier, int firstFrame, float scale, float[] buffer, out float maxValue);
Member Added: public static void ClearAllFrames ();
Member Added: public static string[] GetAllStatisticsProperties ();
Member Added: public static string[] GetGraphStatisticsPropertiesForArea (UnityEditorInternal.ProfilerArea area);
Member Added: public static int GetStatisticsIdentifier (string propertyName);
Member Added: public static int[] GetAvailableProfilers ();
Member Added: public static string GetConnectionIdentifier (int guid);
Member Added: public static bool IsIdentifierConnectable (int guid);
Member Added: public static string GetOverviewText (UnityEditorInternal.ProfilerArea profilerArea, int frame);
Member Added: public static int firstFrameIndex { get; }
Member Added: public static int lastFrameIndex { get; }
Member Added: public static int maxHistoryLength { get; }
Member Added: public static string selectedPropertyPath { set; get; }
Member Added: public static bool profileEditor { set; get; }
Member Added: public static bool deepProfiling { set; get; }
Member Added: public static int connectedProfiler { set; get; }
Member Added: public static string miniMemoryOverview { get; }
Member Added: public static uint usedHeapSize { get; }
Member Added: public static uint objectCount { get; }
Member Added: public static bool isGPUProfilerBuggyOnDriver { get; }
Member Added: public static bool isGPUProfilerSupportedByOS { get; }
Member Added: public static bool isGPUProfilerSupported { get; }
New Type: UnityEditorInternal.ProfilerProperty
Member Added: public ProfilerProperty ();
Member Added: public void Dispose ();
Member Added: ~ProfilerProperty ();
Member Added: public void Cleanup ();
Member Added: public bool Next (bool enterChildren);
Member Added: public void SetRoot (int frame, UnityEditorInternal.ProfilerColumn profilerSortColumn, UnityEditorInternal.ProfilerViewType viewType);
Member Added: public void InitializeDetailProperty (UnityEditorInternal.ProfilerProperty source);
Member Added: public string GetTooltip (UnityEditorInternal.ProfilerColumn column);
Member Added: public string GetColumn (UnityEditorInternal.ProfilerColumn column);
Member Added: public bool HasChildren { get; }
Member Added: public bool onlyShowGPUSamples { set; get; }
Member Added: public int[] instanceIDs { get; }
Member Added: public int depth { get; }
Member Added: public string propertyPath { get; }
Member Added: public string frameFPS { get; }
Member Added: public string frameTime { get; }
Member Added: public string frameGpuTime { get; }
Member Added: public bool frameDataReady { get; }
New Type: UnityEditor.ScriptableWizard
Member Added: public ScriptableWizard ();
Member Added: public static T DisplayWizard<T> (string title) where T : UnityEditor.ScriptableWizard;
Member Added: public static T DisplayWizard<T> (string title, string createButtonName) where T : UnityEditor.ScriptableWizard;
Member Added: public static T DisplayWizard<T> (string title, string createButtonName, string otherButtonName) where T : UnityEditor.ScriptableWizard;
Member Added: public static UnityEditor.ScriptableWizard DisplayWizard (string title, Type klass, string createButtonName);
Member Added: public static UnityEditor.ScriptableWizard DisplayWizard (string title, Type klass);
Member Added: public static UnityEditor.ScriptableWizard DisplayWizard (string title, Type klass, string createButtonName, string otherButtonName);
Member Added: public string helpString { set; get; }
Member Added: public string errorString { set; get; }
Member Added: public bool isValid { set; get; }
New Type: UnityEditor.SerializedPropertyType
Member Added: Generic
Member Added: Integer
Member Added: Boolean
Member Added: Float
Member Added: String
Member Added: Color
Member Added: ObjectReference
Member Added: LayerMask
Member Added: Enum
Member Added: Vector2
Member Added: Vector3
Member Added: Rect
Member Added: ArraySize
Member Added: Character
Member Added: AnimationCurve
Member Added: Bounds
New Type: UnityEditor.SerializedObject
Member Added: public SerializedObject (UnityEngine.Object obj);
Member Added: public SerializedObject (UnityEngine.Object[] objs);
Member Added: public void Update ();
Member Added: public void SetIsDifferentCacheDirty ();
Member Added: public void UpdateIfDirtyOrScript ();
Member Added: public void Dispose ();
Member Added: ~SerializedObject ();
Member Added: public UnityEditor.SerializedProperty GetIterator ();
Member Added: public UnityEditor.SerializedProperty FindProperty (string propertyPath);
Member Added: public bool ApplyModifiedProperties ();
Member Added: public UnityEngine.Object targetObject { get; }
Member Added: public UnityEngine.Object[] targetObjects { get; }
Member Added: public bool isEditingMultipleObjects { get; }
New Type: UnityEditor.SerializedProperty
Member Added: ~SerializedProperty ();
Member Added: public void Dispose ();
Member Added: public static bool EqualContents (UnityEditor.SerializedProperty x, UnityEditor.SerializedProperty y);
Member Added: public bool Next (bool enterChildren);
Member Added: public bool NextVisible (bool enterChildren);
Member Added: public void Reset ();
Member Added: public int CountRemaining ();
Member Added: public int CountInProperty ();
Member Added: public UnityEditor.SerializedProperty Copy ();
Member Added: public bool DuplicateCommand ();
Member Added: public bool DeleteCommand ();
Member Added: public UnityEditor.SerializedProperty FindPropertyRelative (string relativePropertyPath);
Member Added: public UnityEditor.SerializedProperty GetEndProperty ();
Member Added: public UnityEditor.SerializedProperty GetEndProperty (bool includeInvisible);
Member Added: public System.Collections.IEnumerator GetEnumerator ();
Member Added: public UnityEditor.SerializedProperty GetArrayElementAtIndex (int index);
Member Added: public void InsertArrayElementAtIndex (int index);
Member Added: public void DeleteArrayElementAtIndex (int index);
Member Added: public void ClearArray ();
Member Added: public bool MoveArrayElement (int srcIndex, int dstIndex);
Member Added: public UnityEditor.SerializedObject serializedObject { get; }
Member Added: public bool hasMultipleDifferentValues { get; }
Member Added: public string name { get; }
Member Added: public string type { get; }
Member Added: public string tooltip { get; }
Member Added: public int depth { get; }
Member Added: public string propertyPath { get; }
Member Added: public bool editable { get; }
Member Added: public bool isExpanded { set; get; }
Member Added: public bool hasChildren { get; }
Member Added: public bool hasVisibleChildren { get; }
Member Added: public bool isInstantiatedPrefab { get; }
Member Added: public bool prefabOverride { set; get; }
Member Added: public UnityEditor.SerializedPropertyType propertyType { get; }
Member Added: public int intValue { set; get; }
Member Added: public bool boolValue { set; get; }
Member Added: public float floatValue { set; get; }
Member Added: public string stringValue { set; get; }
Member Added: public UnityEngine.Color colorValue { set; get; }
Member Added: public UnityEngine.AnimationCurve animationCurveValue { set; get; }
Member Added: public UnityEngine.Object objectReferenceValue { set; get; }
Member Added: public int objectReferenceInstanceIDValue { set; get; }
Member Added: public int enumValueIndex { set; get; }
Member Added: public string[] enumNames { get; }
Member Added: public UnityEngine.Vector2 vector2Value { set; get; }
Member Added: public UnityEngine.Vector3 vector3Value { set; get; }
Member Added: public UnityEngine.Rect rectValue { set; get; }
Member Added: public UnityEngine.Bounds boundsValue { set; get; }
Member Added: public bool isArray { get; }
Member Added: public int arraySize { set; get; }
New Type: UnityEditor.ProceduralOutputType
Member Added: Unknown
Member Added: Diffuse
Member Added: Normal
Member Added: Height
Member Added: Emissive
Member Added: Specular
Member Added: Opacity
New Type: UnityEditor.SubstanceImporter
Member Added: public SubstanceImporter ();
Member Added: public string[] GetPrototypeNames ();
Member Added: public int GetMaterialCount ();
Member Added: public UnityEngine.ProceduralMaterial[] GetMaterials ();
Member Added: public bool CloneMaterial (UnityEngine.ProceduralMaterial material);
Member Added: public void InstantiateMaterial (string prototypeName);
Member Added: public void DestroyMaterial (UnityEngine.ProceduralMaterial material);
Member Added: public void ResetMaterial (UnityEngine.ProceduralMaterial material);
Member Added: public void RenameMaterial (UnityEngine.ProceduralMaterial material, string name);
Member Added: public void OnShaderModified (UnityEngine.ProceduralMaterial material);
Member Added: public UnityEngine.Vector2 GetMaterialOffset (UnityEngine.ProceduralMaterial material);
Member Added: public void SetMaterialOffset (UnityEngine.ProceduralMaterial material, UnityEngine.Vector2 offset);
Member Added: public UnityEngine.Vector2 GetMaterialScale (UnityEngine.ProceduralMaterial material);
Member Added: public void SetMaterialScale (UnityEngine.ProceduralMaterial material, UnityEngine.Vector2 scale);
Member Added: public bool GetLoadTimeGenerated (UnityEngine.ProceduralMaterial material);
Member Added: public void SetLoadTimeGenerated (UnityEngine.ProceduralMaterial material, bool generated);
Member Added: public bool GetGenerateAllOutputs (UnityEngine.ProceduralMaterial material);
Member Added: public void SetGenerateAllOutputs (UnityEngine.ProceduralMaterial material, bool generated);
Member Added: public int GetAnimationUpdateRate (UnityEngine.ProceduralMaterial material);
Member Added: public void SetAnimationUpdateRate (UnityEngine.ProceduralMaterial material, int animation_update_rate);
Member Added: public UnityEditor.ProceduralOutputType GetTextureAlphaSource (UnityEngine.ProceduralMaterial material, string textureName);
Member Added: public void SetTextureAlphaSource (UnityEngine.ProceduralMaterial material, string textureName, UnityEditor.ProceduralOutputType alphaSource);
New Type: UnityEditor.SubstanceArchive
Member Added: public SubstanceArchive ();
New Type: UnityEditor.ProceduralTexture
Member Added: public ProceduralTexture ();
Member Added: public UnityEditor.ProceduralOutputType GetProceduralOutputType ();
New Type: UnityEditor.SelectionMode
Member Added: Unfiltered
Member Added: TopLevel
Member Added: Deep
Member Added: ExcludePrefab
Member Added: Editable
Member Added: Assets
Member Added: DeepAssets
Member Added: OnlyUserModifiable
New Type: UnityEditor.Selection
Member Added: public Selection ();
Member Added: public static bool Contains (int instanceID);
Member Added: public static bool Contains (UnityEngine.Object obj);
Member Added: public static UnityEngine.Transform[] GetTransforms (UnityEditor.SelectionMode mode);
Member Added: public static UnityEngine.Object[] GetFiltered (Type type, UnityEditor.SelectionMode mode);
Member Added: public static UnityEngine.Transform[] transforms { get; }
Member Added: public static UnityEngine.Transform activeTransform { set; get; }
Member Added: public static UnityEngine.GameObject[] gameObjects { get; }
Member Added: public static UnityEngine.GameObject activeGameObject { set; get; }
Member Added: public static UnityEngine.Object activeObject { set; get; }
Member Added: public static int activeInstanceID { set; get; }
Member Added: public static UnityEngine.Object[] objects { set; get; }
Member Added: public static int[] instanceIDs { set; get; }
New Type: UnityEditor.EditorUtility
Member Added: public EditorUtility ();
Member Added: public static void SetDirty (UnityEngine.Object target);
Member Added: public static bool LoadWindowLayout (string path);
Member Added: public static bool IsPersistent (UnityEngine.Object target);
Member Added: public static bool DisplayDialog (string title, string message, string ok, string cancel);
Member Added: public static bool DisplayDialog (string title, string message, string ok);
Member Added: public static int DisplayDialogComplex (string title, string message, string ok, string cancel, string alt);
Member Added: public static string OpenFilePanel (string title, string directory, string extension);
Member Added: public static string SaveFilePanel (string title, string directory, string defaultName, string extension);
Member Added: public static string OpenFolderPanel (string title, string folder, string defaultName);
Member Added: public static string SaveFolderPanel (string title, string folder, string defaultName);
Member Added: public static string SaveFilePanelInProject (string title, string defaultName, string extension, string message);
Member Added: public static bool WarnPrefab (UnityEngine.Object target, string title, string warning, string okButton);
Member Added: public static UnityEngine.Object FindAsset (string path, Type type);
Member Added: public static UnityEngine.Object InstanceIDToObject (int instanceID);
Member Added: public static bool ImportShader (UnityEngine.Shader shader, string contents);
Member Added: public static string ImportShaderString (string contents);
Member Added: public static void CompressTexture (UnityEngine.Texture2D texture, UnityEngine.TextureFormat format, int quality);
Member Added: public static void CompressTexture (UnityEngine.Texture2D texture, UnityEngine.TextureFormat format, UnityEngine.TextureCompressionQuality quality);
Member Added: public static string InvokeDiffTool (string leftTitle, string leftFile, string rightTitle, string rightFile, string ancestorTitle, string ancestorFile);
Member Added: public static UnityEngine.Component CloneComponent (UnityEngine.Component c);
Member Added: public static void CopySerialized (UnityEngine.Object source, UnityEngine.Object dest);
Member Added: public static UnityEngine.Texture2D GetAssetPreview (UnityEngine.Object asset);
Member Added: public static bool SetAssetPreview (UnityEngine.Object asset, bool isMainAsset, UnityEngine.Texture2D tex);
Member Added: public static UnityEngine.Texture2D GetMiniThumbnail (UnityEngine.Object obj);
Member Added: public static string GetAssetPath (UnityEngine.Object asset);
Member Added: public static UnityEngine.Object[] CollectDependencies (UnityEngine.Object[] roots);
Member Added: public static UnityEngine.Object[] CollectDeepHierarchy (UnityEngine.Object[] roots);
Member Added: public static void UnloadUnusedAssets ();
Member Added: public static void UnloadUnusedAssetsIgnoreManagedReferences ();
Member Added: public static bool BuildResourceFile (UnityEngine.Object[] selection, string pathName);
Member Added: public static void DisplayPopupMenu (UnityEngine.Rect position, string menuItemPath, UnityEditor.MenuCommand command);
Member Added: public static void DisplayCustomMenu (UnityEngine.Rect position, UnityEngine.GUIContent[] options, int selected, UnityEditor.EditorUtility.SelectMenuItemFunction callback, object userData);
Member Added: public static void FocusProjectWindow ();
Member Added: public static string FormatBytes (int bytes);
Member Added: public static void DisplayProgressBar (string title, string info, float progress);
Member Added: public static bool DisplayCancelableProgressBar (string title, string info, float progress);
Member Added: public static void ClearProgressBar ();
Member Added: public static int GetObjectEnabled (UnityEngine.Object target);
Member Added: public static void SetObjectEnabled (UnityEngine.Object target, bool enabled);
Member Added: public static void SetSelectedWireframeHidden (UnityEngine.Renderer renderer, bool enabled);
Member Added: public static bool ExtractOggFile (UnityEngine.Object obj, string path);
Member Added: public static UnityEngine.GameObject CreateGameObjectWithHideFlags (string name, UnityEngine.HideFlags flags, Type[] components);
Member Added: public static string[] CompileCSharp (string[] sources, string[] references, string[] defines, string outputFile);
Member Added: public static void OpenWithDefaultApp (string fileName);
Member Added: public static UnityEngine.Object InstantiatePrefab (UnityEngine.Object target);
Member Added: public static UnityEngine.GameObject ReplacePrefab (UnityEngine.GameObject go, UnityEngine.Object targetPrefab);
Member Added: public static UnityEngine.GameObject ReplacePrefab (UnityEngine.GameObject go, UnityEngine.Object targetPrefab, UnityEditor.ReplacePrefabOptions options);
Member Added: public static UnityEngine.Object CreateEmptyPrefab (string path);
Member Added: public static bool ReconnectToLastPrefab (UnityEngine.GameObject go);
Member Added: public static UnityEditor.PrefabType GetPrefabType (UnityEngine.Object target);
Member Added: public static UnityEngine.Object GetPrefabParent (UnityEngine.Object source);
Member Added: public static UnityEngine.GameObject FindPrefabRoot (UnityEngine.GameObject source);
Member Added: public static bool ResetToPrefabState (UnityEngine.Object source);
New Type: UnityEditor.EditorUtility/SelectMenuItemFunction
New Type: UnityEditor.MenuItem
Member Added: public MenuItem (string itemName, bool isValidateFunction, int priority);
Member Added: public MenuItem (string itemName, bool isValidateFunction);
Member Added: public MenuItem (string itemName);
Member Added: public string menuItem;
Member Added: public bool validate;
Member Added: public int priority;
New Type: UnityEditor.MenuCommand
Member Added: public MenuCommand (UnityEngine.Object inContext, int inUserData);
Member Added: public MenuCommand (UnityEngine.Object inContext);
Member Added: public UnityEngine.Object context;
Member Added: public int userData;
New Type: UnityEditor.GizmoType
Member Added: Active
Member Added: SelectedOrChild
Member Added: NotSelected
Member Added: Selected
Member Added: Pickable
New Type: UnityEditor.DrawGizmo
Member Added: public DrawGizmo (UnityEditor.GizmoType gizmo);
Member Added: public DrawGizmo (UnityEditor.GizmoType gizmo, Type drawnGizmoType);
Member Added: public Type drawnType;
Member Added: public UnityEditor.GizmoType drawOptions;
New Type: UnityEditor.CustomEditor
Member Added: public CustomEditor (Type inspectedType);
Member Added: public Type m_InspectedType;
New Type: UnityEditor.CanEditMultipleObjects
Member Added: public CanEditMultipleObjects ();
New Type: UnityEditor.EditorPrefs
Member Added: public EditorPrefs ();
Member Added: public static void SetInt (string key, int value);
Member Added: public static int GetInt (string key, int defaultValue);
Member Added: public static int GetInt (string key);
Member Added: public static void SetFloat (string key, float value);
Member Added: public static float GetFloat (string key, float defaultValue);
Member Added: public static float GetFloat (string key);
Member Added: public static void SetString (string key, string value);
Member Added: public static string GetString (string key, string defaultValue);
Member Added: public static string GetString (string key);
Member Added: public static void SetBool (string key, bool value);
Member Added: public static bool GetBool (string key, bool defaultValue);
Member Added: public static bool GetBool (string key);
Member Added: public static bool HasKey (string key);
Member Added: public static void DeleteKey (string key);
Member Added: public static void DeleteAll ();
New Type: UnityEditor.Help
Member Added: public Help ();
Member Added: public static bool HasHelpForObject (UnityEngine.Object obj);
Member Added: public static void ShowHelpForObject (UnityEngine.Object obj);
Member Added: public static void ShowHelpPage (string page);
Member Added: public static void BrowseURL (string url);
New Type: UnityEditor.ObjectNames
Member Added: public ObjectNames ();
Member Added: public static string NicifyVariableName (string name);
Member Added: public static string GetInspectorTitle (UnityEngine.Object obj);
Member Added: public static string GetClassName (UnityEngine.Object obj);
Member Added: public static string GetDragAndDropTitle (UnityEngine.Object obj);
Member Added: public static void SetNameSmart (UnityEngine.Object obj, string name);
Member Added: public static string MangleVariableName (string name);
Member Added: public static string GetPropertyEditorTitle (UnityEngine.Object obj);
New Type: UnityEditor.DragAndDropVisualMode
Member Added: None
Member Added: Copy
Member Added: Link
Member Added: Move
Member Added: Generic
Member Added: Rejected
New Type: UnityEditor.DragAndDrop
Member Added: public DragAndDrop ();
Member Added: public static void PrepareStartDrag ();
Member Added: public static void StartDrag (string title);
Member Added: public static void AcceptDrag ();
Member Added: public static object GetGenericData (string type);
Member Added: public static void SetGenericData (string type, object data);
Member Added: public static UnityEngine.Object[] objectReferences { set; get; }
Member Added: public static string[] paths { set; get; }
Member Added: public static UnityEditor.DragAndDropVisualMode visualMode { set; get; }
Member Added: public static int activeControlID { set; get; }
New Type: UnityEditor.UnityStats
Member Added: public UnityStats ();
Member Added: public static string GetNetworkStats (int i);
Member Added: public static int drawCalls { get; }
Member Added: public static int batchedDrawCalls { get; }
Member Added: public static int batches { get; }
Member Added: public static int triangles { get; }
Member Added: public static int vertices { get; }
Member Added: public static int shadowCasters { get; }
Member Added: public static int renderTextureChanges { get; }
Member Added: public static float frameTime { get; }
Member Added: public static float renderTime { get; }
Member Added: public static int renderTextureCount { get; }
Member Added: public static int renderTextureBytes { get; }
Member Added: public static int usedTextureMemorySize { get; }
Member Added: public static int usedTextureCount { get; }
Member Added: public static string screenRes { get; }
Member Added: public static int screenBytes { get; }
Member Added: public static int vboTotal { get; }
Member Added: public static int vboTotalBytes { get; }
Member Added: public static int vboUploads { get; }
Member Added: public static int vboUploadBytes { get; }
Member Added: public static int ibUploads { get; }
Member Added: public static int ibUploadBytes { get; }
Member Added: public static int visibleSkinnedMeshes { get; }
Member Added: public static int visibleAnimations { get; }
New Type: UnityEditor.MonoScript
Member Added: public MonoScript ();
Member Added: public Type GetClass ();
Member Added: public static UnityEditor.MonoScript FromMonoBehaviour (UnityEngine.MonoBehaviour behaviour);
Member Added: public static UnityEditor.MonoScript FromScriptableObject (UnityEngine.ScriptableObject scriptableObject);
New Type: UnityEditor.NETVersion
Member Added: NET_1_1
Member Added: NET_2_1
New Type: UnityEditor.Unsupported
Member Added: public Unsupported ();
Member Added: public static Type GetTypeFromFullName (string fullName);
Member Added: public static string[] GetSubmenus (string menuPath);
Member Added: public static void PrepareObjectContextMenu (UnityEngine.Object c, int contextUserData);
Member Added: public static bool IsDeveloperBuild ();
Member Added: public static bool IsDestroyScriptableObject (UnityEngine.ScriptableObject target);
Member Added: public static bool IsNativeCodeBuiltInReleaseMode ();
Member Added: public static string GetBaseUnityDeveloperFolder ();
Member Added: public static void StopPlayingImmediately ();
Member Added: public static void SceneTrackerFlushDirty ();
Member Added: public static void SetAllowCursorLock (bool allow);
Member Added: public static void SetRenderSettingsUseFogNoDirty (bool fog);
Member Added: public static void SetQualitySettingsShadowDistanceTemporarily (float distance);
Member Added: public static bool StripFatMacho (string path, bool generatePPC);
Member Added: public static void DeleteGameObjectSelection ();
Member Added: public static void CopyGameObjectsToPasteboard ();
Member Added: public static void PasteGameObjectsFromPasteboard ();
Member Added: public static UnityEngine.Object GetSerializedAssetInterfaceSingleton (string className);
Member Added: public static void DuplicateGameObjectsUsingPasteboard ();
Member Added: public static void SmartReset (UnityEngine.Object obj);
Member Added: public static bool CheckIPhoneXCodeInstalled ();
Member Added: public static bool CheckIPhoneXCode4Installed ();
Member Added: public static void LaunchIPhoneXCode4 ();
Member Added: public static void TerminateIPhoneXCode4 ();
Member Added: public static string ResolveSymlinks (string path);
Member Added: public static void SetApplicationSettingCompressAssetsOnImport (bool value);
Member Added: public static bool GetApplicationSettingCompressAssetsOnImport ();
New Type: UnityEditor.Unsupported/ProgressiveMesh
Member Added: public static void Create (UnityEngine.Mesh src, out UnityEditor.Unsupported.ProgressiveMesh pm);
Member Added: public static void Destroy (ref UnityEditor.Unsupported.ProgressiveMesh pm);
Member Added: public static void CreateInitialGeometry (UnityEditor.Unsupported.ProgressiveMesh pm, UnityEngine.Mesh mesh);
Member Added: public static void UpdateMesh (UnityEditor.Unsupported.ProgressiveMesh pm, int targetTriCount, UnityEngine.Mesh mesh);
Updating: UnityEditor.Unsupported/ProgressiveMesh
New Type: UnityEditor.GameObjectUtility
Member Added: public GameObjectUtility ();
Member Added: public static UnityEditor.StaticEditorFlags GetStaticEditorFlags (UnityEngine.GameObject go);
Member Added: public static bool AreStaticEditorFlagsSet (UnityEngine.GameObject go, UnityEditor.StaticEditorFlags flags);
Member Added: public static void SetStaticEditorFlags (UnityEngine.GameObject go, UnityEditor.StaticEditorFlags flags);
Member Added: public static int GetNavMeshLayer (UnityEngine.GameObject go);
Member Added: public static int GetNavMeshLayerFromName (string name);
Member Added: public static void SetNavMeshLayer (UnityEngine.GameObject go, int layer);
Member Added: public static string[] GetNavMeshLayerNames ();
New Type: UnityEditor.EditorStyles
Member Added: public EditorStyles ();
Member Added: public static UnityEngine.GUIStyle label { get; }
Member Added: public static UnityEngine.GUIStyle miniLabel { get; }
Member Added: public static UnityEngine.GUIStyle largeLabel { get; }
Member Added: public static UnityEngine.GUIStyle boldLabel { get; }
Member Added: public static UnityEngine.GUIStyle miniBoldLabel { get; }
Member Added: public static UnityEngine.GUIStyle wordWrappedLabel { get; }
Member Added: public static UnityEngine.GUIStyle wordWrappedMiniLabel { get; }
Member Added: public static UnityEngine.GUIStyle whiteLabel { get; }
Member Added: public static UnityEngine.GUIStyle whiteMiniLabel { get; }
Member Added: public static UnityEngine.GUIStyle whiteLargeLabel { get; }
Member Added: public static UnityEngine.GUIStyle whiteBoldLabel { get; }
Member Added: public static UnityEngine.GUIStyle radioButton { get; }
Member Added: public static UnityEngine.GUIStyle miniButton { get; }
Member Added: public static UnityEngine.GUIStyle miniButtonLeft { get; }
Member Added: public static UnityEngine.GUIStyle miniButtonMid { get; }
Member Added: public static UnityEngine.GUIStyle miniButtonRight { get; }
Member Added: public static UnityEngine.GUIStyle textField { get; }
Member Added: public static UnityEngine.GUIStyle miniTextField { get; }
Member Added: public static UnityEngine.GUIStyle numberField { get; }
Member Added: public static UnityEngine.GUIStyle popup { get; }
Member Added: public static UnityEngine.GUIStyle structHeadingLabel { get; }
Member Added: public static UnityEngine.GUIStyle objectField { get; }
Member Added: public static UnityEngine.GUIStyle objectFieldThumb { get; }
Member Added: public static UnityEngine.GUIStyle colorField { get; }
Member Added: public static UnityEngine.GUIStyle layerMaskField { get; }
Member Added: public static UnityEngine.GUIStyle toggle { get; }
Member Added: public static UnityEngine.GUIStyle foldout { get; }
Member Added: public static UnityEngine.GUIStyle foldoutPreDrop { get; }
Member Added: public static UnityEngine.GUIStyle toggleGroup { get; }
Member Added: public static UnityEngine.Font standardFont { get; }
Member Added: public static UnityEngine.Font boldFont { get; }
Member Added: public static UnityEngine.Font miniFont { get; }
Member Added: public static UnityEngine.Font miniBoldFont { get; }
Member Added: public static UnityEngine.GUIStyle toolbar { get; }
Member Added: public static UnityEngine.GUIStyle toolbarButton { get; }
Member Added: public static UnityEngine.GUIStyle toolbarPopup { get; }
Member Added: public static UnityEngine.GUIStyle toolbarDropDown { get; }
Member Added: public static UnityEngine.GUIStyle toolbarTextField { get; }
New Type: UnityEditor.GenericMenu
Member Added: public GenericMenu ();
Member Added: public void AddItem (UnityEngine.GUIContent content, bool on, UnityEditor.GenericMenu.MenuFunction func);
Member Added: public void AddItem (UnityEngine.GUIContent content, bool on, UnityEditor.GenericMenu.MenuFunction2 func, object userData);
Member Added: public void AddDisabledItem (UnityEngine.GUIContent content);
Member Added: public void AddSeparator (string path);
Member Added: public int GetItemCount ();
Member Added: public void ShowAsContext ();
Member Added: public void DropDown (UnityEngine.Rect position);
New Type: UnityEditor.GenericMenu/MenuFunction
New Type: UnityEditor.GenericMenu/MenuFunction2
New Type: UnityEditor.ViewTool
Member Added: None
Member Added: Orbit
Member Added: Pan
Member Added: Zoom
Member Added: FPS
New Type: UnityEditor.PivotMode
Member Added: Center
Member Added: Pivot
New Type: UnityEditor.PivotRotation
Member Added: Local
Member Added: Global
New Type: UnityEditor.Tool
Member Added: View
Member Added: Move
Member Added: Rotate
Member Added: Scale
Member Added: None
New Type: UnityEditor.Tools
Member Added: public Tools ();
Member Added: public static UnityEditor.Tool current { set; get; }
Member Added: public static UnityEditor.ViewTool viewTool { set; get; }
Member Added: public static UnityEngine.Vector3 handlePosition { get; }
Member Added: public static UnityEditor.PivotMode pivotMode { set; get; }
Member Added: public static UnityEngine.Quaternion handleRotation { set; get; }
Member Added: public static UnityEditor.PivotRotation pivotRotation { set; get; }
Member Added: public static int visibleLayers { set; get; }
New Type: UnityEditor.LODUtility
Member Added: public LODUtility ();
Member Added: public static void CalculateLODGroupBoundingBox (UnityEngine.LODGroup group);
New Type: AssetModificationProcessor
Member Added: public AssetModificationProcessor ();
New Type: UnityEditor.AssetPostprocessor
Member Added: public AssetPostprocessor ();
Member Added: public void LogWarning (string warning);
Member Added: public void LogWarning (string warning, UnityEngine.Object context);
Member Added: public void LogError (string warning);
Member Added: public void LogError (string warning, UnityEngine.Object context);
Member Added: public virtual uint GetVersion ();
Member Added: public virtual int GetPostprocessOrder ();
Member Added: public string assetPath { set; get; }
Member Added: public UnityEditor.AssetImporter assetImporter { get; }
Member Added: public UnityEngine.Texture2D preview { set; get; }
New Type: UnityEditor.AssetImporter
Member Added: public AssetImporter ();
Member Added: public static UnityEditor.AssetImporter GetAtPath (string path);
Member Added: public string assetPath { get; }
Member Added: public ulong assetTimeStamp { get; }
Updating: UnityEditor.Handles/DrawCapFunction
Updating: UnityEditor.SceneView/OnSceneFunc
Updating: UnityEditor.EditorApplication/ProjectWindowItemCallback
Updating: UnityEditor.EditorApplication/HierarchyWindowItemCallback
Updating: UnityEditor.EditorApplication/CallbackFunction
Updating: UnityEditor.EditorUtility/SelectMenuItemFunction
Updating: UnityEditor.GenericMenu/MenuFunction
Updating: UnityEditor.GenericMenu/MenuFunction2
New Type: UnityEngine.AssemblyHelper
Member Added: public AssemblyHelper ();
New Type: UnityEngine.SetupCoroutine
Member Added: public SetupCoroutine ();
Member Added: public static object InvokeMember (object behaviour, string name, object variable);
Member Added: public static object InvokeStatic (Type klass, string name, object variable);
New Type: UnityEngine.SendMouseEvents
Member Added: public SendMouseEvents ();
Updating: UnityEngine.StackTraceUtility
mdoc: Member Removed: File='Source/UnityEngine\StackTraceUtility.xml'; Signature='public static string ExtractStringFromException (object exception);'
Member Added: public static void SetProjectFolder (string folder);
Member Added: public static string ExtractStringFromException (Exception exception);
Member Added: public static System.Text.StringBuilder NicifyStacktrace (string oldString);
Member Added: public static System.Text.StringBuilder ProcessSplitCleanup (System.Collections.ArrayList cleanedUpsplit);
Member Added: public static System.Text.StringBuilder ExtractFormattedStackTrace (System.Diagnostics.StackTrace stackTrace);
Updating: UnityEngine.UnityException
Updating: UnityEngine.MissingComponentException
Updating: UnityEngine.UnassignedReferenceException
Updating: UnityEngine.MissingReferenceException
Updating: UnityEngine.TextEditor
mdoc: Member Removed: File='Source/UnityEngine\TextEditor.xml'; Signature='public bool DeleteWordBack ();'
mdoc: Member Removed: File='Source/UnityEngine\TextEditor.xml'; Signature='public bool DeleteWordForward ();'
Updating: UnityEngine.TextEditor/DblClickSnapping
Updating: UnityEngine.TextEditor/DblClickSnapping
Updating: UnityEngine.WrapMode
Updating: UnityEngine.AnimationEvent
mdoc: Member Removed: File='Source/UnityEngine\AnimationEvent.xml'; Signature='public int intParameter { set; get; }'
Updating: UnityEngine.AnimationClip
mdoc: Member Removed: File='Source/UnityEngine\AnimationClip.xml'; Signature='public UnityEngine.Bounds localBounds { set; get; }'
Updating: UnityEngine.Keyframe
Updating: UnityEngine.AnimationCurve
Updating: UnityEngine.PlayMode
Updating: UnityEngine.QueueMode
Updating: UnityEngine.AnimationBlendMode
Updating: UnityEngine.AnimationPlayMode
Updating: UnityEngine.Animation
mdoc: Member Removed: File='Source/UnityEngine\Animation.xml'; Signature='public UnityEngine.AnimationCullingType cullingType { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Animation.xml'; Signature='public UnityEngine.Bounds localBounds { set; get; }'
Updating: UnityEngine.AnimationState
mdoc: Member Removed: File='Source/UnityEngine\AnimationState.xml'; Signature='public void RemoveMixingTransform (UnityEngine.Transform mix);'
New Type: UnityEngine.ReferenceData
Member Added: public int instanceID;
Member Added: public int cachedPtr;
Updating: UnityEngine.HideFlags
Updating: UnityEngine.Object
mdoc: Member Removed: File='Source/UnityEngine\Object.xml'; Signature='public override string ToString ();'
Updating: UnityEngine.SendMessageOptions
Updating: UnityEngine.PrimitiveType
Updating: UnityEngine.GameObject
mdoc: Member Removed: File='Source/UnityEngine\GameObject.xml'; Signature='public bool isStatic { set; get; }'
Updating: UnityEngine.Component
mdoc: Member Removed: File='Source/UnityEngine\Component.xml'; Signature='public UnityEngine.ParticleSystem particleSystem { get; }'
Updating: UnityEngine.Behaviour
Updating: UnityEngine.Space
Updating: UnityEngine.Transform
Updating: UnityEngine.MonoBehaviour
mdoc: Member Removed: File='Source/UnityEngine\MonoBehaviour.xml'; Signature='public bool useGUILayout { set; get; }'
Member Added: public const int kIgnoreRaycastLayer = 4;
Member Added: public const int kDefaultRaycastLayers = -5;
Updating: UnityEngine.Input
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static UnityEngine.Vector3 acceleration { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static int accelerationEventCount { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static UnityEngine.AccelerationEvent[] accelerationEvents { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static UnityEngine.Compass compass { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static UnityEngine.Vector2 compositionCursorPos { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static string compositionString { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static UnityEngine.DeviceOrientation deviceOrientation { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static bool eatKeyPressOnTextFieldFocus { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static UnityEngine.AccelerationEvent GetAccelerationEvent (int index);'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static UnityEngine.Vector3 GetPosition (int deviceID);'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static UnityEngine.Quaternion GetRotation (int deviceID);'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static UnityEngine.Touch GetTouch (int index);'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static UnityEngine.Gyroscope gyro { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static UnityEngine.IMECompositionMode imeCompositionMode { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static bool imeIsSelected { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static bool isGyroAvailable { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static UnityEngine.LocationService location { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static bool multiTouchEnabled { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static int touchCount { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Input.xml'; Signature='public static UnityEngine.Touch[] touches { get; }'
Updating: UnityEngine.Time
mdoc: Member Removed: File='Source/UnityEngine\Time.xml'; Signature='public static float maximumDeltaTime { set; get; }'
Updating: UnityEngine.LayerMask
Updating: UnityEngine.RuntimePlatform
mdoc: Member Removed: File='Source/UnityEngine\RuntimePlatform.xml'; Signature='Android'
mdoc: Member Removed: File='Source/UnityEngine\RuntimePlatform.xml'; Signature='FlashPlayer'
mdoc: Member Removed: File='Source/UnityEngine\RuntimePlatform.xml'; Signature='IPhonePlayer'
mdoc: Member Removed: File='Source/UnityEngine\RuntimePlatform.xml'; Signature='LinuxPlayer'
mdoc: Member Removed: File='Source/UnityEngine\RuntimePlatform.xml'; Signature='NaCl'
mdoc: Member Removed: File='Source/UnityEngine\RuntimePlatform.xml'; Signature='PS3'
mdoc: Member Removed: File='Source/UnityEngine\RuntimePlatform.xml'; Signature='XBOX360'
Updating: UnityEngine.SystemLanguage
mdoc: Member Removed: File='Source/UnityEngine\SystemLanguage.xml'; Signature='French'
mdoc: Member Removed: File='Source/UnityEngine\SystemLanguage.xml'; Signature='Hungarian'
Member Added: Frensh
Updating: UnityEngine.LogType
Updating: UnityEngine.Application
mdoc: Member Removed: File='Source/UnityEngine\Application.xml'; Signature='public static void CaptureScreenshot (string filename, int superSize);'
mdoc: Member Removed: File='Source/UnityEngine\Application.xml'; Signature='public static bool genuine { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Application.xml'; Signature='public static bool genuineCheckAvailable { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Application.xml'; Signature='public static bool HasUserAuthorization (UnityEngine.UserAuthorization mode);'
mdoc: Member Removed: File='Source/UnityEngine\Application.xml'; Signature='public static UnityEngine.NetworkReachability internetReachability { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Application.xml'; Signature='public static bool isWebPlayer { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Application.xml'; Signature='public static UnityEngine.AsyncOperation LoadLevelAdditiveAsync (int index);'
mdoc: Member Removed: File='Source/UnityEngine\Application.xml'; Signature='public static UnityEngine.AsyncOperation LoadLevelAsync (int index);'
mdoc: Member Removed: File='Source/UnityEngine\Application.xml'; Signature='public static string persistentDataPath { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Application.xml'; Signature='public static void RegisterLogCallbackThreaded (UnityEngine.Application.LogCallback handler);'
mdoc: Member Removed: File='Source/UnityEngine\Application.xml'; Signature='public static UnityEngine.AsyncOperation RequestUserAuthorization (UnityEngine.UserAuthorization mode);'
mdoc: Member Removed: File='Source/UnityEngine\Application.xml'; Signature='public static string streamingAssetsPath { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Application.xml'; Signature='public static string temporaryCachePath { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Application.xml'; Signature='public static bool webSecurityEnabled { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Application.xml'; Signature='public static string webSecurityHostUrl { get; }'
Updating: UnityEngine.Application/LogCallback
Updating: UnityEngine.AudioClip
mdoc: Member Removed: File='Source/UnityEngine\AudioClip.xml'; Signature='public static UnityEngine.AudioClip Create (string name, int lengthSamples, int channels, int frequency, bool _3D, bool stream);'
mdoc: Member Removed: File='Source/UnityEngine\AudioClip.xml'; Signature='public static UnityEngine.AudioClip Create (string name, int lengthSamples, int channels, int frequency, bool _3D, bool stream, UnityEngine.AudioClip.PCMReaderCallback pcmreadercallback);'
mdoc: Member Removed: File='Source/UnityEngine\AudioClip.xml'; Signature='public static UnityEngine.AudioClip Create (string name, int lengthSamples, int channels, int frequency, bool _3D, bool stream, UnityEngine.AudioClip.PCMReaderCallback pcmreadercallback, UnityEngine.AudioClip.PCMSetPositionCallback pcmsetpositioncallback);'
mdoc: Member Removed: File='Source/UnityEngine\AudioClip.xml'; Signature='public void GetData (float[] data, int offsetSamples);'
mdoc: Member Removed: File='Source/UnityEngine\AudioClip.xml'; Signature='public void SetData (float[] data, int offsetSamples);'
Updating: UnityEngine.AudioVelocityUpdateMode
Updating: UnityEngine.AudioListener
mdoc: Member Removed: File='Source/UnityEngine\AudioListener.xml'; Signature='public static float[] GetOutputData (int numSamples, int channel);'
mdoc: Member Removed: File='Source/UnityEngine\AudioListener.xml'; Signature='public static void GetOutputData (float[] samples, int channel);'
mdoc: Member Removed: File='Source/UnityEngine\AudioListener.xml'; Signature='public static float[] GetSpectrumData (int numSamples, int channel, UnityEngine.FFTWindow window);'
mdoc: Member Removed: File='Source/UnityEngine\AudioListener.xml'; Signature='public static void GetSpectrumData (float[] samples, int channel, UnityEngine.FFTWindow window);'
Updating: UnityEngine.AudioSource
mdoc: Member Removed: File='Source/UnityEngine\AudioSource.xml'; Signature='public bool bypassEffects { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\AudioSource.xml'; Signature='public float dopplerLevel { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\AudioSource.xml'; Signature='public float[] GetOutputData (int numSamples, int channel);'
mdoc: Member Removed: File='Source/UnityEngine\AudioSource.xml'; Signature='public void GetOutputData (float[] samples, int channel);'
mdoc: Member Removed: File='Source/UnityEngine\AudioSource.xml'; Signature='public float[] GetSpectrumData (int numSamples, int channel, UnityEngine.FFTWindow window);'
mdoc: Member Removed: File='Source/UnityEngine\AudioSource.xml'; Signature='public void GetSpectrumData (float[] samples, int channel, UnityEngine.FFTWindow window);'
mdoc: Member Removed: File='Source/UnityEngine\AudioSource.xml'; Signature='public float maxDistance { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\AudioSource.xml'; Signature='public float minDistance { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\AudioSource.xml'; Signature='public bool mute { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\AudioSource.xml'; Signature='public float pan { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\AudioSource.xml'; Signature='public float panLevel { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\AudioSource.xml'; Signature='public void Play (ulong delay);'
mdoc: Member Removed: File='Source/UnityEngine\AudioSource.xml'; Signature='public int priority { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\AudioSource.xml'; Signature='public UnityEngine.AudioRolloffMode rolloffMode { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\AudioSource.xml'; Signature='public float spread { set; get; }'
Updating: UnityEngine.Debug
mdoc: Member Removed: File='Source/UnityEngine\Debug.xml'; Signature='public static void DrawLine (UnityEngine.Vector3 start, UnityEngine.Vector3 end, UnityEngine.Color color, float duration);'
mdoc: Member Removed: File='Source/UnityEngine\Debug.xml'; Signature='public static void DrawLine (UnityEngine.Vector3 start, UnityEngine.Vector3 end, UnityEngine.Color color, float duration, bool depthTest);'
mdoc: Member Removed: File='Source/UnityEngine\Debug.xml'; Signature='public static void DrawRay (UnityEngine.Vector3 start, UnityEngine.Vector3 dir, UnityEngine.Color color, float duration);'
mdoc: Member Removed: File='Source/UnityEngine\Debug.xml'; Signature='public static void DrawRay (UnityEngine.Vector3 start, UnityEngine.Vector3 dir, UnityEngine.Color color, float duration, bool depthTest);'
Updating: UnityEngine.Random
Updating: UnityEngine.PlayerPrefs
mdoc: Member Removed: File='Source/UnityEngine\PlayerPrefs.xml'; Signature='public static void Save ();'
Updating: UnityEngine.PlayerPrefsException
Updating: UnityEngine.SystemInfo
mdoc: Member Removed: File='Source/UnityEngine\SystemInfo.xml'; Signature='public static string deviceModel { get; }'
mdoc: Member Removed: File='Source/UnityEngine\SystemInfo.xml'; Signature='public static string deviceName { get; }'
mdoc: Member Removed: File='Source/UnityEngine\SystemInfo.xml'; Signature='public static UnityEngine.DeviceType deviceType { get; }'
mdoc: Member Removed: File='Source/UnityEngine\SystemInfo.xml'; Signature='public static string deviceUniqueIdentifier { get; }'
mdoc: Member Removed: File='Source/UnityEngine\SystemInfo.xml'; Signature='public static int graphicsDeviceID { get; }'
mdoc: Member Removed: File='Source/UnityEngine\SystemInfo.xml'; Signature='public static int graphicsDeviceVendorID { get; }'
mdoc: Member Removed: File='Source/UnityEngine\SystemInfo.xml'; Signature='public static int graphicsPixelFillrate { get; }'
mdoc: Member Removed: File='Source/UnityEngine\SystemInfo.xml'; Signature='public static int supportedRenderTargetCount { get; }'
mdoc: Member Removed: File='Source/UnityEngine\SystemInfo.xml'; Signature='public static bool supportsAccelerometer { get; }'
mdoc: Member Removed: File='Source/UnityEngine\SystemInfo.xml'; Signature='public static bool supportsGyroscope { get; }'
mdoc: Member Removed: File='Source/UnityEngine\SystemInfo.xml'; Signature='public static bool supportsLocationService { get; }'
mdoc: Member Removed: File='Source/UnityEngine\SystemInfo.xml'; Signature='public static bool supportsVibration { get; }'
Updating: UnityEngine.YieldInstruction
Updating: UnityEngine.WaitForSeconds
Updating: UnityEngine.WaitForFixedUpdate
Updating: UnityEngine.WaitForEndOfFrame
Updating: UnityEngine.Coroutine
Updating: UnityEngine.RequireComponent
Updating: UnityEngine.AddComponentMenu
Updating: UnityEngine.ContextMenu
Updating: UnityEngine.ExecuteInEditMode
Updating: UnityEngine.HideInInspector
Updating: UnityEngine.ScriptableObject
mdoc: Member Removed: File='Source/UnityEngine\ScriptableObject.xml'; Signature='public static UnityEngine.ScriptableObject CreateInstance (Type type);'
mdoc: Member Removed: File='Source/UnityEngine\ScriptableObject.xml'; Signature='public static T CreateInstance<T> () where T : UnityEngine.ScriptableObject;'
New Type: UnityEngine.AssetUtility
Member Added: public AssetUtility ();
Member Added: public static UnityEngine.Object CreateEngineObject (string className);
Member Added: public static void CreateAsset (UnityEngine.Object theAsset, string assetName, string extension);
Member Added: public static void CreateAsset (UnityEngine.Object theAsset, string assetName);
Member Added: public static void AddAssetToSameFile (UnityEngine.Object newAsset, UnityEngine.Object sameAssetFile);
Member Added: public static void SaveAsset (UnityEngine.Object newAsset);
Member Added: public static UnityEngine.Object LoadWithPathAndFileID (string path, int i);
Member Added: public static int GetObjectCountAtPath (string path);
New Type: UnityEngine.RefCounted
Member Added: protected RefCounted ();
Member Added: ~RefCounted ();
Member Added: public override bool Equals (object o);
Member Added: public override int GetHashCode ();
Member Added: public static bool op_Equality (UnityEngine.RefCounted x, UnityEngine.RefCounted y);
Member Added: public static bool op_Inequality (UnityEngine.RefCounted x, UnityEngine.RefCounted y);
Member Added: public static bool op_Implicit (UnityEngine.RefCounted exists);
Updating: UnityEngine.TrackedReference
Updating: UnityEngine.Resources
mdoc: Member Removed: File='Source/UnityEngine\Resources.xml'; Signature='public static UnityEngine.Object[] FindObjectsOfTypeAll (Type type);'
Updating: UnityEngine.AsyncOperation
Updating: UnityEngine.AssetBundleRequest
Updating: UnityEngine.AssetBundle
mdoc: Member Removed: File='Source/UnityEngine\AssetBundle.xml'; Signature='public static UnityEngine.AssetBundle CreateFromFile (string path);'
mdoc: Member Removed: File='Source/UnityEngine\AssetBundle.xml'; Signature='public static UnityEngine.AssetBundleCreateRequest CreateFromMemory (byte[] binary);'
Updating: UnityEngine.SerializePrivateVariables
Updating: UnityEngine.ThreadPriority
Updating: UnityEngine.SerializeField
Updating: UnityEngine.Profiler
mdoc: Member Removed: File='Source/UnityEngine\Profiler.xml'; Signature='public static void AddFramesFromFile (string file);'
mdoc: Member Removed: File='Source/UnityEngine\Profiler.xml'; Signature='public static void BeginSample (string name, UnityEngine.Object targetObject);'
mdoc: Member Removed: File='Source/UnityEngine\Profiler.xml'; Signature='public static bool enableBinaryLog { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Profiler.xml'; Signature='public static int GetRuntimeMemorySize (UnityEngine.Object o);'
mdoc: Member Removed: File='Source/UnityEngine\Profiler.xml'; Signature='public static bool supported { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Profiler.xml'; Signature='public static uint usedHeapSize { get; }'
Updating: UnityEngine.LightType
mdoc: Member Removed: File='Source/UnityEngine\LightType.xml'; Signature='Area'
Updating: UnityEngine.LightRenderMode
Updating: UnityEngine.LightShadows
Updating: UnityEngine.Light
mdoc: Member Removed: File='Source/UnityEngine\Light.xml'; Signature='public UnityEngine.Vector2 areaSize { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Light.xml'; Signature='public float shadowBias { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Light.xml'; Signature='public float shadowSoftness { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Light.xml'; Signature='public float shadowSoftnessFade { set; get; }'
Updating: UnityEngine.RenderSettings
mdoc: Member Removed: File='Source/UnityEngine\RenderSettings.xml'; Signature='public static float fogEndDistance { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\RenderSettings.xml'; Signature='public static UnityEngine.FogMode fogMode { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\RenderSettings.xml'; Signature='public static float fogStartDistance { set; get; }'
Updating: UnityEngine.QualityLevel
Updating: UnityEngine.QualitySettings
mdoc: Member Removed: File='Source/UnityEngine\QualitySettings.xml'; Signature='public static UnityEngine.ColorSpace activeColorSpace { get; }'
mdoc: Member Removed: File='Source/UnityEngine\QualitySettings.xml'; Signature='public static int antiAliasing { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\QualitySettings.xml'; Signature='public static UnityEngine.BlendWeights blendWeights { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\QualitySettings.xml'; Signature='public static void DecreaseLevel (bool applyExpensiveChanges);'
mdoc: Member Removed: File='Source/UnityEngine\QualitySettings.xml'; Signature='public static UnityEngine.ColorSpace desiredColorSpace { get; }'
mdoc: Member Removed: File='Source/UnityEngine\QualitySettings.xml'; Signature='public static int GetQualityLevel ();'
mdoc: Member Removed: File='Source/UnityEngine\QualitySettings.xml'; Signature='public static void IncreaseLevel (bool applyExpensiveChanges);'
mdoc: Member Removed: File='Source/UnityEngine\QualitySettings.xml'; Signature='public static float lodBias { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\QualitySettings.xml'; Signature='public static int maximumLODLevel { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\QualitySettings.xml'; Signature='public static string[] names { get; }'
mdoc: Member Removed: File='Source/UnityEngine\QualitySettings.xml'; Signature='public static void SetQualityLevel (int index);'
mdoc: Member Removed: File='Source/UnityEngine\QualitySettings.xml'; Signature='public static void SetQualityLevel (int index, bool applyExpensiveChanges);'
mdoc: Member Removed: File='Source/UnityEngine\QualitySettings.xml'; Signature='public static UnityEngine.ShadowProjection shadowProjection { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\QualitySettings.xml'; Signature='public static int vSyncCount { set; get; }'
Updating: UnityEngine.CameraClearFlags
Updating: UnityEngine.DepthTextureMode
Updating: UnityEngine.Camera
mdoc: Member Removed: File='Source/UnityEngine\Camera.xml'; Signature='public UnityEngine.RenderingPath actualRenderingPath { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Camera.xml'; Signature='public bool hdr { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Camera.xml'; Signature='public bool layerCullSpherical { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Camera.xml'; Signature='public UnityEngine.RenderingPath renderingPath { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Camera.xml'; Signature='public bool useOcclusionCulling { set; get; }'
Updating: UnityEngine.TexGenMode
Updating: UnityEngine.Shader
mdoc: Member Removed: File='Source/UnityEngine\Shader.xml'; Signature='public static void WarmupAllShaders ();'
Member Added: public static void ClearAll ();
Member Added: public void SetStaticFloat (string propertyName, float value);
Member Added: public float GetStaticFloat (string propertyName);
Member Added: public void SetStaticColor (string propertyName, UnityEngine.Color color);
Member Added: public UnityEngine.Color GetStaticColor (string propertyName);
Member Added: public void SetStaticTexture (string propertyName, UnityEngine.Texture texture);
Member Added: public UnityEngine.Texture GetStaticTexture (string propertyName);
Updating: UnityEngine.AnisotropicFiltering
Updating: UnityEngine.FilterMode
Updating: UnityEngine.TextureWrapMode
Updating: UnityEngine.Texture
mdoc: Member Removed: File='Source/UnityEngine\Texture.xml'; Signature='public int GetNativeTextureID ();'
Updating: UnityEngine.TextureFormat
mdoc: Member Removed: File='Source/UnityEngine\TextureFormat.xml'; Signature='ARGB4444'
mdoc: Member Removed: File='Source/UnityEngine\TextureFormat.xml'; Signature='ATC_RGB4'
mdoc: Member Removed: File='Source/UnityEngine\TextureFormat.xml'; Signature='ATC_RGBA8'
mdoc: Member Removed: File='Source/UnityEngine\TextureFormat.xml'; Signature='ATF_RGB_DXT1'
mdoc: Member Removed: File='Source/UnityEngine\TextureFormat.xml'; Signature='ATF_RGB_JPG'
mdoc: Member Removed: File='Source/UnityEngine\TextureFormat.xml'; Signature='ATF_RGBA_JPG'
mdoc: Member Removed: File='Source/UnityEngine\TextureFormat.xml'; Signature='BGRA32'
mdoc: Member Removed: File='Source/UnityEngine\TextureFormat.xml'; Signature='ETC_RGB4'
mdoc: Member Removed: File='Source/UnityEngine\TextureFormat.xml'; Signature='RGB565'
mdoc: Member Removed: File='Source/UnityEngine\TextureFormat.xml'; Signature='RGBA32'
Updating: UnityEngine.Texture2D
mdoc: Member Removed: File='Source/UnityEngine\Texture2D.xml'; Signature='public Texture2D (int width, int height, UnityEngine.TextureFormat format, bool mipmap, bool linear);'
mdoc: Member Removed: File='Source/UnityEngine\Texture2D.xml'; Signature='public void Apply (bool updateMipmaps, bool makeNoLongerReadable);'
mdoc: Member Removed: File='Source/UnityEngine\Texture2D.xml'; Signature='public UnityEngine.Color32[] GetPixels32 ();'
mdoc: Member Removed: File='Source/UnityEngine\Texture2D.xml'; Signature='public UnityEngine.Color32[] GetPixels32 (int miplevel);'
mdoc: Member Removed: File='Source/UnityEngine\Texture2D.xml'; Signature='public UnityEngine.Rect[] PackTextures (UnityEngine.Texture2D[] textures, int padding, int maximumAtlasSize, bool makeNoLongerReadable);'
mdoc: Member Removed: File='Source/UnityEngine\Texture2D.xml'; Signature='public void SetPixels32 (UnityEngine.Color32[] colors);'
mdoc: Member Removed: File='Source/UnityEngine\Texture2D.xml'; Signature='public void SetPixels32 (UnityEngine.Color32[] colors, int miplevel);'
Updating: UnityEngine.CubemapFace
Updating: UnityEngine.Cubemap
Updating: UnityEngine.MeshFilter
Updating: UnityEngine.CombineInstance
Updating: UnityEngine.Mesh
Updating: UnityEngine.BoneWeight
Updating: UnityEngine.SkinQuality
Updating: UnityEngine.SkinnedMeshRenderer
mdoc: Member Removed: File='Source/UnityEngine\SkinnedMeshRenderer.xml'; Signature='public UnityEngine.Bounds localBounds { set; get; }'
Updating: UnityEngine.Material
Updating: UnityEngine.Flare
Updating: UnityEngine.LensFlare
Updating: UnityEngine.Renderer
mdoc: Member Removed: File='Source/UnityEngine\Renderer.xml'; Signature='public bool isPartOfStaticBatch { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Renderer.xml'; Signature='public UnityEngine.Transform lightProbeAnchor { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Renderer.xml'; Signature='public UnityEngine.Matrix4x4 localToWorldMatrix { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Renderer.xml'; Signature='public void SetPropertyBlock (UnityEngine.MaterialPropertyBlock properties);'
mdoc: Member Removed: File='Source/UnityEngine\Renderer.xml'; Signature='public bool useLightProbes { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Renderer.xml'; Signature='public UnityEngine.Matrix4x4 worldToLocalMatrix { get; }'
Updating: UnityEngine.Projector
Updating: UnityEngine.Skybox
Updating: UnityEngine.TextMesh
mdoc: Member Removed: File='Source/UnityEngine\TextMesh.xml'; Signature='public UnityEngine.TextAlignment alignment { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\TextMesh.xml'; Signature='public UnityEngine.TextAnchor anchor { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\TextMesh.xml'; Signature='public float characterSize { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\TextMesh.xml'; Signature='public int fontSize { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\TextMesh.xml'; Signature='public UnityEngine.FontStyle fontStyle { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\TextMesh.xml'; Signature='public float lineSpacing { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\TextMesh.xml'; Signature='public float offsetZ { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\TextMesh.xml'; Signature='public float tabSize { set; get; }'
Updating: UnityEngine.Particle
mdoc: Member Removed: File='Source/UnityEngine\Particle.xml'; Signature='public float angularVelocity { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Particle.xml'; Signature='public float rotation { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Particle.xml'; Signature='public float startEnergy { set; get; }'
Updating: UnityEngine.ParticleEmitter
mdoc: Member Removed: File='Source/UnityEngine\ParticleEmitter.xml'; Signature='public float angularVelocity { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\ParticleEmitter.xml'; Signature='public void Emit (UnityEngine.Vector3 pos, UnityEngine.Vector3 velocity, float size, float energy, UnityEngine.Color color, float rotation, float angularVelocity);'
mdoc: Member Removed: File='Source/UnityEngine\ParticleEmitter.xml'; Signature='public float rndAngularVelocity { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\ParticleEmitter.xml'; Signature='public bool rndRotation { set; get; }'
Updating: UnityEngine.ParticleAnimator
Updating: UnityEngine.TrailRenderer
Updating: UnityEngine.ParticleRenderMode
Updating: UnityEngine.ParticleRenderer
Updating: UnityEngine.LineRenderer
Updating: UnityEngine.MaterialPropertyBlock
Member Added: public void InitBlock ();
Member Added: public void DestroyBlock ();
Updating: UnityEngine.Graphics
mdoc: Member Removed: File='Source/UnityEngine\Graphics.xml'; Signature='public static UnityEngine.RenderBuffer activeColorBuffer { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Graphics.xml'; Signature='public static UnityEngine.RenderBuffer activeDepthBuffer { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Graphics.xml'; Signature='public static void Blit (UnityEngine.Texture source, UnityEngine.Material mat);'
mdoc: Member Removed: File='Source/UnityEngine\Graphics.xml'; Signature='public static void Blit (UnityEngine.Texture source, UnityEngine.Material mat, int pass);'
mdoc: Member Removed: File='Source/UnityEngine\Graphics.xml'; Signature='public static void SetRenderTarget (UnityEngine.RenderTexture rt);'
mdoc: Member Removed: File='Source/UnityEngine\Graphics.xml'; Signature='public static void SetRenderTarget (UnityEngine.RenderBuffer colorBuffer, UnityEngine.RenderBuffer depthBuffer);'
mdoc: Member Removed: File='Source/UnityEngine\Graphics.xml'; Signature='public static void SetRenderTarget (UnityEngine.RenderBuffer[] colorBuffers, UnityEngine.RenderBuffer depthBuffer);'
Member Added: public static void SetupVertexLights (UnityEngine.Light[] lights);
Updating: UnityEngine.Resolution
Updating: UnityEngine.LightmapData
mdoc: Member Removed: File='Source/UnityEngine\LightmapData.xml'; Signature='public UnityEngine.Texture2D lightmapFar { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\LightmapData.xml'; Signature='public UnityEngine.Texture2D lightmapNear { set; get; }'
Updating: UnityEngine.LightmapSettings
mdoc: Member Removed: File='Source/UnityEngine\LightmapSettings.xml'; Signature='public static UnityEngine.ColorSpace bakedColorSpace { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\LightmapSettings.xml'; Signature='public static UnityEngine.LightmapsMode lightmapsMode { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\LightmapSettings.xml'; Signature='public static UnityEngine.LightProbes lightProbes { set; get; }'
Updating: UnityEngine.GeometryUtility
Updating: UnityEngine.Screen
mdoc: Member Removed: File='Source/UnityEngine\Screen.xml'; Signature='public static bool autorotateToLandscapeLeft { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Screen.xml'; Signature='public static bool autorotateToLandscapeRight { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Screen.xml'; Signature='public static bool autorotateToPortrait { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Screen.xml'; Signature='public static bool autorotateToPortraitUpsideDown { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Screen.xml'; Signature='public static float dpi { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Screen.xml'; Signature='public static UnityEngine.ScreenOrientation orientation { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Screen.xml'; Signature='public static int sleepTimeout { set; get; }'
Updating: UnityEngine.RenderTextureFormat
mdoc: Member Removed: File='Source/UnityEngine\RenderTextureFormat.xml'; Signature='ARGB1555'
mdoc: Member Removed: File='Source/UnityEngine\RenderTextureFormat.xml'; Signature='ARGB4444'
mdoc: Member Removed: File='Source/UnityEngine\RenderTextureFormat.xml'; Signature='Default'
mdoc: Member Removed: File='Source/UnityEngine\RenderTextureFormat.xml'; Signature='DefaultHDR'
mdoc: Member Removed: File='Source/UnityEngine\RenderTextureFormat.xml'; Signature='RGB565'
Updating: UnityEngine.RenderTexture
mdoc: Member Removed: File='Source/UnityEngine\RenderTexture.xml'; Signature='public RenderTexture (int width, int height, int depth, UnityEngine.RenderTextureFormat format);'
mdoc: Member Removed: File='Source/UnityEngine\RenderTexture.xml'; Signature='public RenderTexture (int width, int height, int depth, UnityEngine.RenderTextureFormat format, UnityEngine.RenderTextureReadWrite readWrite);'
mdoc: Member Removed: File='Source/UnityEngine\RenderTexture.xml'; Signature='public UnityEngine.RenderBuffer colorBuffer { get; }'
mdoc: Member Removed: File='Source/UnityEngine\RenderTexture.xml'; Signature='public UnityEngine.RenderBuffer depthBuffer { get; }'
mdoc: Member Removed: File='Source/UnityEngine\RenderTexture.xml'; Signature='public void DiscardContents ();'
mdoc: Member Removed: File='Source/UnityEngine\RenderTexture.xml'; Signature='public static UnityEngine.RenderTexture GetTemporary (int width, int height, int depthBuffer, UnityEngine.RenderTextureFormat format, UnityEngine.RenderTextureReadWrite readWrite);'
mdoc: Member Removed: File='Source/UnityEngine\RenderTexture.xml'; Signature='public bool sRGB { get; }'
Updating: UnityEngine.MovieTexture
mdoc: Member Removed: File='Source/UnityEngine\MovieTexture.xml'; Signature='public float duration { get; }'
Updating: UnityEngine.GL
mdoc: Member Removed: File='Source/UnityEngine\GL.xml'; Signature='public static void ClearWithSkybox (bool clearDepth, UnityEngine.Camera camera);'
mdoc: Member Removed: File='Source/UnityEngine\GL.xml'; Signature='public static UnityEngine.Matrix4x4 GetGPUProjectionMatrix (UnityEngine.Matrix4x4 proj, bool renderIntoTexture);'
mdoc: Member Removed: File='Source/UnityEngine\GL.xml'; Signature='public static void InvalidateState ();'
mdoc: Member Removed: File='Source/UnityEngine\GL.xml'; Signature='public static void IssuePluginEvent (int eventID);'
Updating: UnityEngine.GUIElement
Updating: UnityEngine.GUITexture
Updating: UnityEngine.TextAlignment
Updating: UnityEngine.TextAnchor
Updating: UnityEngine.GUIText
mdoc: Member Removed: File='Source/UnityEngine\GUIText.xml'; Signature='public int fontSize { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\GUIText.xml'; Signature='public UnityEngine.FontStyle fontStyle { set; get; }'
Updating: UnityEngine.Font
mdoc: Member Removed: File='Source/UnityEngine\Font.xml'; Signature='public string[] fontNames { set; get; }'
Member Added: public UnityEngine.Vector2 hackedOffset { set; get; }
Updating: UnityEngine.GUILayer
Updating: UnityEngine.MeshRenderer
New Type: UnityEngine.ScriptableShaderPass
Member Added: public ScriptableShaderPass ();
Member Added: public UnityEngine.Renderer renderer { get; }
New Type: UnityEngine.RenderBeforeQueues
Member Added: public RenderBeforeQueues (int[] args);
Updating: UnityEngine.ScaleMode
Updating: UnityEngine.GUI
mdoc: Member Removed: File='Source/UnityEngine\GUI.xml'; Signature='public static void DrawTextureWithTexCoords (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.Rect texCoords);'
mdoc: Member Removed: File='Source/UnityEngine\GUI.xml'; Signature='public static void DrawTextureWithTexCoords (UnityEngine.Rect position, UnityEngine.Texture image, UnityEngine.Rect texCoords, bool alphaBlend);'
mdoc: Member Removed: File='Source/UnityEngine\GUI.xml'; Signature='public static void EndScrollView (bool handleScrollWheel);'
Member Added: public static string PasswordFieldGetStrToShow (string password, char maskChar);
Member Added: public static void DoTextField (UnityEngine.Rect position, int id, UnityEngine.GUIContent content, bool multiline, int maxLength, UnityEngine.GUIStyle style);
Member Added: protected static void BeginWindows (UnityEngine.Event e, int skinMode, UnityEngine.IDList idlist, int editorWindowInstanceID);
Member Added: protected static void DoEndWindows (UnityEngine.IDList idlist);
Updating: UnityEngine.GUI/WindowFunction
Updating: UnityEngine.GUILayout
mdoc: Member Removed: File='Source/UnityEngine\GUILayout.xml'; Signature='public static void BeginHorizontal (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);'
mdoc: Member Removed: File='Source/UnityEngine\GUILayout.xml'; Signature='public static void BeginHorizontal (UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);'
mdoc: Member Removed: File='Source/UnityEngine\GUILayout.xml'; Signature='public static void BeginHorizontal (UnityEngine.Texture image, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);'
mdoc: Member Removed: File='Source/UnityEngine\GUILayout.xml'; Signature='public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);'
mdoc: Member Removed: File='Source/UnityEngine\GUILayout.xml'; Signature='public static void BeginVertical (string text, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);'
mdoc: Member Removed: File='Source/UnityEngine\GUILayout.xml'; Signature='public static void BeginVertical (UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);'
mdoc: Member Removed: File='Source/UnityEngine\GUILayout.xml'; Signature='public static void BeginVertical (UnityEngine.Texture image, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);'
Member Added: protected static bool DoToggle (bool value, UnityEngine.GUIContent content, UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options);
Member Added: public static UnityEngine.Vector2 BeginScrollView (UnityEngine.Vector2 scrollPosition, UnityEngine.GUIStyle style);
Updating: UnityEngine.GUILayoutUtility
Member Added: public static void LayoutFromEditorWindow ();
Member Added: public static float LayoutFromInspector (float width);
Member Added: public static UnityEngine.GUILayoutGroup BeginLayoutGroup (UnityEngine.GUIStyle style, UnityEngine.GUILayoutOption[] options, Type LayoutType);
Member Added: public static void EndLayoutGroup ();
Member Added: protected static UnityEngine.GUILayoutGroup DoBeginLayoutArea (UnityEngine.GUIStyle style, Type LayoutType);
New Type: UnityEngine.GUILayoutEntry
Member Added: public GUILayoutEntry (float _minWidth, float _maxWidth, float _minHeight, float _maxHeight, UnityEngine.GUIStyle _style);
Member Added: public GUILayoutEntry (float _minWidth, float _maxWidth, float _minHeight, float _maxHeight, UnityEngine.GUIStyle _style, UnityEngine.GUILayoutOption[] options);
Member Added: public float minWidth;
Member Added: public float maxWidth;
Member Added: public float minHeight;
Member Added: public float maxHeight;
Member Added: public UnityEngine.Rect rect;
Member Added: public int stretchWidth;
Member Added: public int stretchHeight;
Member Added: protected static int indent;
Member Added: public virtual void CalcWidth ();
Member Added: public virtual void CalcHeight ();
Member Added: public virtual void SetHorizontal (float x, float width);
Member Added: public virtual void SetVertical (float y, float height);
Member Added: protected virtual void ApplyStyleSettings (UnityEngine.GUIStyle style);
Member Added: public virtual void ApplyOptions (UnityEngine.GUILayoutOption[] options);
Member Added: public override string ToString ();
Member Added: public UnityEngine.GUIStyle style { set; get; }
Member Added: public virtual UnityEngine.RectOffset margin { get; }
New Type: UnityEngine.GUILayoutGroup
Member Added: public GUILayoutGroup ();
Member Added: public GUILayoutGroup (UnityEngine.GUIStyle _style, UnityEngine.GUILayoutOption[] options);
Member Added: public System.Collections.ArrayList entries;
Member Added: public bool isVertical;
Member Added: public bool resetCoords;
Member Added: public float spacing;
Member Added: public bool sameSize;
Member Added: public bool isWindow;
Member Added: public int windowID;
Member Added: protected int stretchableCountX;
Member Added: protected int stretchableCountY;
Member Added: protected float childMinWidth;
Member Added: protected float childMaxWidth;
Member Added: protected float childMinHeight;
Member Added: protected float childMaxHeight;
Member Added: public override void ApplyOptions (UnityEngine.GUILayoutOption[] options);
Member Added: protected override void ApplyStyleSettings (UnityEngine.GUIStyle style);
Member Added: public void ResetCursor ();
Member Added: public UnityEngine.GUILayoutEntry GetNext ();
Member Added: public UnityEngine.Rect GetLast ();
Member Added: public void Add (UnityEngine.GUILayoutEntry e);
Member Added: public override void CalcWidth ();
Member Added: public override void SetHorizontal (float x, float width);
Member Added: public override void CalcHeight ();
Member Added: public override void SetVertical (float y, float height);
Member Added: public override string ToString ();
Member Added: public override UnityEngine.RectOffset margin { get; }
New Type: UnityEngine.GUIScrollGroup
Member Added: public GUIScrollGroup ();
Member Added: public float calcMinWidth;
Member Added: public float calcMaxWidth;
Member Added: public float calcMinHeight;
Member Added: public float calcMaxHeight;
Member Added: public float hmm;
Member Added: public float clientWidth;
Member Added: public float clientHeight;
Member Added: public bool allowHorizontalScroll;
Member Added: public bool needsHorizontalScrollbar;
Member Added: public bool needsVerticalScrollbar;
Member Added: public UnityEngine.GUIStyle horizontalScrollbar;
Member Added: public UnityEngine.GUIStyle verticalScrollbar;
Member Added: public override void CalcWidth ();
Member Added: public override void SetHorizontal (float x, float width);
Member Added: public override void CalcHeight ();
Member Added: public override void SetVertical (float y, float height);
Updating: UnityEngine.GUILayoutOption
Member Added: public GUILayoutOption (UnityEngine.GUILayoutOption.Type type, object value);
Member Added: public UnityEngine.GUILayoutOption.Type type;
Member Added: public object value;
New Type: UnityEngine.GUILayoutOption/Type
Member Added: fixedWidth
Member Added: fixedHeight
Member Added: minWidth
Member Added: maxWidth
Member Added: minHeight
Member Added: maxHeight
Member Added: stretchWidth
Member Added: stretchHeight
Member Added: alignStart
Member Added: alignMiddle
Member Added: alignEnd
Member Added: alignJustify
Member Added: equalSize
Member Added: spacing
Updating: UnityEngine.GUILayoutOption/Type
Updating: UnityEngine.ExitGUIException
Updating: UnityEngine.FocusType
New Type: UnityEngine.IDList
Updating: UnityEngine.GUIUtility
mdoc: Member Removed: File='Source/UnityEngine\GUIUtility.xml'; Signature='public static bool s_LogControlID;'
mdoc: Member Removed: File='Source/UnityEngine\GUIUtility.xml'; Signature='public static void UpdateUndoName ();'
Member Added: public static UnityEngine.Vector2 s_EditorScreenPointOffset;
Member Added: public static bool s_HasKeyboardFocus;
Member Added: public static UnityEngine.GUISkin GetBuiltinSkin (int skin);
Updating: UnityEngine.ImagePosition
Updating: UnityEngine.GUIContent
Member Added: public int hash { get; }
Updating: UnityEngine.GUIStyleState
Updating: UnityEngine.RectOffset
mdoc: Member Removed: File='Source/UnityEngine\RectOffset.xml'; Signature='public RectOffset (int left, int right, int top, int bottom);'
Updating: UnityEngine.GUIStyle
mdoc: Member Removed: File='Source/UnityEngine\GUIStyle.xml'; Signature='public int fontSize { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\GUIStyle.xml'; Signature='public UnityEngine.FontStyle fontStyle { set; get; }'
Member Added: public static void Internal_GetCursorPixelPosition (IntPtr target, UnityEngine.Rect position, string text, UnityEngine.Texture image, int cursorStringIndex, out UnityEngine.Vector2 ret);
Member Added: public static int Internal_GetCursorStringIndex (IntPtr target, UnityEngine.Rect position, string text, UnityEngine.Texture image, UnityEngine.Vector2 cursorPixelPosition);
Member Added: public static void Internal_CalcSize (IntPtr target, string text, UnityEngine.Texture image, out UnityEngine.Vector2 ret);
New Type: UnityEngine.PlatformSelection
Member Added: Native
Member Added: Mac
Member Added: Windows
Updating: UnityEngine.GUISettings
Updating: UnityEngine.GUISkin
mdoc: Member Removed: File='Source/UnityEngine\GUISkin.xml'; Signature='public UnityEngine.GUIStyle[] customStyles { set; get; }'
Member Added: public UnityEngine.GUIStyle[] customStyles;
Member Added: public static UnityEngine.GUIStyle error;
Member Added: public System.Collections.Hashtable styles;
New Type: UnityEngine.GUIClip
Member Added: public static System.Collections.Stack s_GUIClips;
Member Added: public static void Push (UnityEngine.Rect screenRect);
Member Added: public static void Push (UnityEngine.Rect screenRect, UnityEngine.Vector2 scrollOffset);
Member Added: public static void Push (UnityEngine.Rect screenRect, UnityEngine.Vector2 scrollOffset, UnityEngine.Vector2 renderOffset, bool resetOffset);
Member Added: public static void Pop ();
Member Added: public static UnityEngine.Vector2 Unclip (UnityEngine.Vector2 pos);
Member Added: public static UnityEngine.Rect Unclip (UnityEngine.Rect rect);
Member Added: public static UnityEngine.Vector2 Clip (UnityEngine.Vector2 absolutePos);
Member Added: public static UnityEngine.Rect Clip (UnityEngine.Rect absoluteRect);
Member Added: public static void Reapply ();
Member Added: public static void SetGUIClipRect (UnityEngine.Rect r);
Member Added: public override string ToString ();
Member Added: public static UnityEngine.Rect topmostRect { get; }
Member Added: public static UnityEngine.Matrix4x4 matrix { set; get; }
Member Added: public static UnityEngine.Rect visibleRect { get; }
Updating: UnityEngine.Gizmos
mdoc: Member Removed: File='Source/UnityEngine\Gizmos.xml'; Signature='public static void DrawIcon (UnityEngine.Vector3 center, string name, bool allowScaling);'
Updating: UnityEngine.EventType
Updating: UnityEngine.Event
mdoc: Member Removed: File='Source/UnityEngine\Event.xml'; Signature='public UnityEngine.EventModifiers modifiers { set; get; }'
Member Added: public IntPtr camera { set; get; }
Updating: UnityEngine.TextClipping
Updating: UnityEngine.KeyCode
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button0'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button1'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button10'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button11'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button12'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button13'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button14'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button15'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button16'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button17'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button18'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button19'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button2'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button3'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button4'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button5'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button6'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button7'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button8'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Joystick4Button9'
mdoc: Member Removed: File='Source/UnityEngine\KeyCode.xml'; Signature='Menu'
Updating: UnityEngine.Vector2
mdoc: Member Removed: File='Source/UnityEngine\Vector2.xml'; Signature='public static float Angle (UnityEngine.Vector2 from, UnityEngine.Vector2 to);'
mdoc: Member Removed: File='Source/UnityEngine\Vector2.xml'; Signature='public static UnityEngine.Vector2 ClampMagnitude (UnityEngine.Vector2 vector, float maxLength);'
mdoc: Member Removed: File='Source/UnityEngine\Vector2.xml'; Signature='public static UnityEngine.Vector2 Lerp (UnityEngine.Vector2 from, UnityEngine.Vector2 to, float t);'
mdoc: Member Removed: File='Source/UnityEngine\Vector2.xml'; Signature='public static UnityEngine.Vector2 Max (UnityEngine.Vector2 lhs, UnityEngine.Vector2 rhs);'
mdoc: Member Removed: File='Source/UnityEngine\Vector2.xml'; Signature='public static UnityEngine.Vector2 Min (UnityEngine.Vector2 lhs, UnityEngine.Vector2 rhs);'
mdoc: Member Removed: File='Source/UnityEngine\Vector2.xml'; Signature='public static UnityEngine.Vector2 MoveTowards (UnityEngine.Vector2 current, UnityEngine.Vector2 target, float maxDistanceDelta);'
mdoc: Member Removed: File='Source/UnityEngine\Vector2.xml'; Signature='public void Normalize ();'
mdoc: Member Removed: File='Source/UnityEngine\Vector2.xml'; Signature='public UnityEngine.Vector2 normalized { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Vector2.xml'; Signature='public static UnityEngine.Vector2 one { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Vector2.xml'; Signature='public void Scale (UnityEngine.Vector2 scale);'
mdoc: Member Removed: File='Source/UnityEngine\Vector2.xml'; Signature='public void Set (float new_x, float new_y);'
mdoc: Member Removed: File='Source/UnityEngine\Vector2.xml'; Signature='public string ToString (string format);'
Updating: UnityEngine.Vector3
mdoc: Member Removed: File='Source/UnityEngine\Vector3.xml'; Signature='public static UnityEngine.Vector3 ClampMagnitude (UnityEngine.Vector3 vector, float maxLength);'
mdoc: Member Removed: File='Source/UnityEngine\Vector3.xml'; Signature='public static UnityEngine.Vector3 MoveTowards (UnityEngine.Vector3 current, UnityEngine.Vector3 target, float maxDistanceDelta);'
mdoc: Member Removed: File='Source/UnityEngine\Vector3.xml'; Signature='public void Set (float new_x, float new_y, float new_z);'
mdoc: Member Removed: File='Source/UnityEngine\Vector3.xml'; Signature='public static UnityEngine.Vector3 SmoothDamp (UnityEngine.Vector3 current, UnityEngine.Vector3 target, ref UnityEngine.Vector3 currentVelocity, float smoothTime);'
mdoc: Member Removed: File='Source/UnityEngine\Vector3.xml'; Signature='public static UnityEngine.Vector3 SmoothDamp (UnityEngine.Vector3 current, UnityEngine.Vector3 target, ref UnityEngine.Vector3 currentVelocity, float smoothTime, float maxSpeed);'
mdoc: Member Removed: File='Source/UnityEngine\Vector3.xml'; Signature='public static UnityEngine.Vector3 SmoothDamp (UnityEngine.Vector3 current, UnityEngine.Vector3 target, ref UnityEngine.Vector3 currentVelocity, float smoothTime, float maxSpeed, float deltaTime);'
mdoc: Member Removed: File='Source/UnityEngine\Vector3.xml'; Signature='public string ToString (string format);'
Updating: UnityEngine.Color
mdoc: Member Removed: File='Source/UnityEngine\Color.xml'; Signature='public UnityEngine.Color gamma { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Color.xml'; Signature='public UnityEngine.Color linear { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Color.xml'; Signature='public string ToString (string format);'
Updating: UnityEngine.Color32
mdoc: Member Removed: File='Source/UnityEngine\Color32.xml'; Signature='public Color32 (byte r, byte g, byte b, byte a);'
mdoc: Member Removed: File='Source/UnityEngine\Color32.xml'; Signature='public byte a;'
mdoc: Member Removed: File='Source/UnityEngine\Color32.xml'; Signature='public byte b;'
mdoc: Member Removed: File='Source/UnityEngine\Color32.xml'; Signature='public byte g;'
mdoc: Member Removed: File='Source/UnityEngine\Color32.xml'; Signature='public static UnityEngine.Color32 Lerp (UnityEngine.Color32 a, UnityEngine.Color32 b, float t);'
mdoc: Member Removed: File='Source/UnityEngine\Color32.xml'; Signature='public byte r;'
mdoc: Member Removed: File='Source/UnityEngine\Color32.xml'; Signature='public override string ToString ();'
mdoc: Member Removed: File='Source/UnityEngine\Color32.xml'; Signature='public string ToString (string format);'
Member Added: public byte red;
Member Added: public byte green;
Member Added: public byte blue;
Member Added: public byte alpha;
Updating: UnityEngine.Quaternion
mdoc: Member Removed: File='Source/UnityEngine\Quaternion.xml'; Signature='public static UnityEngine.Quaternion RotateTowards (UnityEngine.Quaternion from, UnityEngine.Quaternion to, float maxDegreesDelta);'
mdoc: Member Removed: File='Source/UnityEngine\Quaternion.xml'; Signature='public void Set (float new_x, float new_y, float new_z, float new_w);'
mdoc: Member Removed: File='Source/UnityEngine\Quaternion.xml'; Signature='public string ToString (string format);'
Updating: UnityEngine.Rect
mdoc: Member Removed: File='Source/UnityEngine\Rect.xml'; Signature='public UnityEngine.Vector2 center { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Rect.xml'; Signature='public void Set (float left, float top, float width, float height);'
mdoc: Member Removed: File='Source/UnityEngine\Rect.xml'; Signature='public string ToString (string format);'
Updating: UnityEngine.Matrix4x4
mdoc: Member Removed: File='Source/UnityEngine\Matrix4x4.xml'; Signature='public string ToString (string format);'
Updating: UnityEngine.Bounds
mdoc: Member Removed: File='Source/UnityEngine\Bounds.xml'; Signature='public bool Intersects (UnityEngine.Bounds bounds);'
mdoc: Member Removed: File='Source/UnityEngine\Bounds.xml'; Signature='public string ToString (string format);'
Updating: UnityEngine.Vector4
mdoc: Member Removed: File='Source/UnityEngine\Vector4.xml'; Signature='public static UnityEngine.Vector4 Max (UnityEngine.Vector4 lhs, UnityEngine.Vector4 rhs);'
mdoc: Member Removed: File='Source/UnityEngine\Vector4.xml'; Signature='public static UnityEngine.Vector4 Min (UnityEngine.Vector4 lhs, UnityEngine.Vector4 rhs);'
mdoc: Member Removed: File='Source/UnityEngine\Vector4.xml'; Signature='public static UnityEngine.Vector4 MoveTowards (UnityEngine.Vector4 current, UnityEngine.Vector4 target, float maxDistanceDelta);'
mdoc: Member Removed: File='Source/UnityEngine\Vector4.xml'; Signature='public static UnityEngine.Vector4 op_Implicit (UnityEngine.Vector2 v);'
mdoc: Member Removed: File='Source/UnityEngine\Vector4.xml'; Signature='public static UnityEngine.Vector2 op_Implicit (UnityEngine.Vector4 v);'
mdoc: Member Removed: File='Source/UnityEngine\Vector4.xml'; Signature='public void Set (float new_x, float new_y, float new_z, float new_w);'
mdoc: Member Removed: File='Source/UnityEngine\Vector4.xml'; Signature='public string ToString (string format);'
Updating: UnityEngine.Ray
mdoc: Member Removed: File='Source/UnityEngine\Ray.xml'; Signature='public string ToString (string format);'
Updating: UnityEngine.Plane
Updating: UnityEngine.Mathf
mdoc: Member Removed: File='Source/UnityEngine\Mathf.xml'; Signature='public static float GammaToLinearSpace (float value);'
mdoc: Member Removed: File='Source/UnityEngine\Mathf.xml'; Signature='public static bool IsPowerOfTwo (int value);'
mdoc: Member Removed: File='Source/UnityEngine\Mathf.xml'; Signature='public static float LinearToGammaSpace (float value);'
mdoc: Member Removed: File='Source/UnityEngine\Mathf.xml'; Signature='public static int Max (int[] values);'
mdoc: Member Removed: File='Source/UnityEngine\Mathf.xml'; Signature='public static float Max (float[] values);'
mdoc: Member Removed: File='Source/UnityEngine\Mathf.xml'; Signature='public static int Min (int[] values);'
mdoc: Member Removed: File='Source/UnityEngine\Mathf.xml'; Signature='public static float Min (float[] values);'
mdoc: Member Removed: File='Source/UnityEngine\Mathf.xml'; Signature='public static float MoveTowards (float current, float target, float maxDelta);'
mdoc: Member Removed: File='Source/UnityEngine\Mathf.xml'; Signature='public static float MoveTowardsAngle (float current, float target, float maxDelta);'
mdoc: Member Removed: File='Source/UnityEngine\Mathf.xml'; Signature='public static int NextPowerOfTwo (int value);'
Updating: UnityEngine.RPCMode
Updating: UnityEngine.ConnectionTesterStatus
mdoc: Member Removed: File='Source/UnityEngine\ConnectionTesterStatus.xml'; Signature='LimitedNATPunchthroughPortRestricted'
mdoc: Member Removed: File='Source/UnityEngine\ConnectionTesterStatus.xml'; Signature='LimitedNATPunchthroughSymmetric'
mdoc: Member Removed: File='Source/UnityEngine\ConnectionTesterStatus.xml'; Signature='NATpunchthroughAddressRestrictedCone'
mdoc: Member Removed: File='Source/UnityEngine\ConnectionTesterStatus.xml'; Signature='NATpunchthroughFullCone'
Updating: UnityEngine.NetworkConnectionError
mdoc: Member Removed: File='Source/UnityEngine\NetworkConnectionError.xml'; Signature='AlreadyConnectedToServer'
mdoc: Member Removed: File='Source/UnityEngine\NetworkConnectionError.xml'; Signature='NATPunchthroughFailed'
Updating: UnityEngine.NetworkDisconnection
Updating: UnityEngine.MasterServerEvent
Updating: UnityEngine.NetworkStateSynchronization
Updating: UnityEngine.NetworkPeerType
Updating: UnityEngine.NetworkPlayer
mdoc: Member Removed: File='Source/UnityEngine\NetworkPlayer.xml'; Signature='public string guid { get; }'
Updating: UnityEngine.NetworkViewID
Updating: UnityEngine.Ping
Updating: UnityEngine.NetworkView
Updating: UnityEngine.Network
mdoc: Member Removed: File='Source/UnityEngine\Network.xml'; Signature='public static UnityEngine.NetworkConnectionError Connect (string GUID);'
mdoc: Member Removed: File='Source/UnityEngine\Network.xml'; Signature='public static UnityEngine.NetworkConnectionError Connect (UnityEngine.HostData hostData);'
mdoc: Member Removed: File='Source/UnityEngine\Network.xml'; Signature='public static UnityEngine.NetworkConnectionError Connect (string GUID, string password);'
mdoc: Member Removed: File='Source/UnityEngine\Network.xml'; Signature='public static UnityEngine.NetworkConnectionError Connect (UnityEngine.HostData hostData, string password);'
mdoc: Member Removed: File='Source/UnityEngine\Network.xml'; Signature='public static UnityEngine.NetworkConnectionError InitializeServer (int connections, int listenPort, bool useNat);'
mdoc: Member Removed: File='Source/UnityEngine\Network.xml'; Signature='public static UnityEngine.NetworkLogLevel logLevel { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Network.xml'; Signature='public static UnityEngine.ConnectionTesterStatus TestConnectionNAT (bool forceTest);'
Updating: UnityEngine.BitStream
Updating: UnityEngine.RPC
Updating: UnityEngine.HostData
mdoc: Member Removed: File='Source/UnityEngine\HostData.xml'; Signature='public string guid { set; get; }'
Updating: UnityEngine.MasterServer
Updating: UnityEngine.NetworkMessageInfo
mdoc: Member Removed: File='Source/UnityEngine\NetworkMessageInfo.xml'; Signature='public UnityEngine.NetworkView NullNetworkView ();'
Updating: UnityEngine.ForceMode
Updating: UnityEngine.Physics
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static bool CapsuleCast (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static bool CapsuleCast (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction, float distance);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static bool CapsuleCast (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static bool CapsuleCast (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction, float distance, int layerMask);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static bool CapsuleCast (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, float distance);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static bool CapsuleCast (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, float distance, int layerMask);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static UnityEngine.RaycastHit[] CapsuleCastAll (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static UnityEngine.RaycastHit[] CapsuleCastAll (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction, float distance);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static UnityEngine.RaycastHit[] CapsuleCastAll (UnityEngine.Vector3 point1, UnityEngine.Vector3 point2, float radius, UnityEngine.Vector3 direction, float distance, int layermask);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static bool GetIgnoreLayerCollision (int layer1, int layer2);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static void IgnoreLayerCollision (int layer1, int layer2);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static void IgnoreLayerCollision (int layer1, int layer2, bool ignore);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static bool SphereCast (UnityEngine.Ray ray, float radius);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static bool SphereCast (UnityEngine.Ray ray, float radius, float distance);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static bool SphereCast (UnityEngine.Ray ray, float radius, out UnityEngine.RaycastHit hitInfo);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static bool SphereCast (UnityEngine.Ray ray, float radius, float distance, int layerMask);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static bool SphereCast (UnityEngine.Ray ray, float radius, out UnityEngine.RaycastHit hitInfo, float distance);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static bool SphereCast (UnityEngine.Vector3 origin, float radius, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static bool SphereCast (UnityEngine.Ray ray, float radius, out UnityEngine.RaycastHit hitInfo, float distance, int layerMask);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static bool SphereCast (UnityEngine.Vector3 origin, float radius, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, float distance);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static bool SphereCast (UnityEngine.Vector3 origin, float radius, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, float distance, int layerMask);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static UnityEngine.RaycastHit[] SphereCastAll (UnityEngine.Ray ray, float radius);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static UnityEngine.RaycastHit[] SphereCastAll (UnityEngine.Ray ray, float radius, float distance);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static UnityEngine.RaycastHit[] SphereCastAll (UnityEngine.Vector3 origin, float radius, UnityEngine.Vector3 direction);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static UnityEngine.RaycastHit[] SphereCastAll (UnityEngine.Ray ray, float radius, float distance, int layerMask);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static UnityEngine.RaycastHit[] SphereCastAll (UnityEngine.Vector3 origin, float radius, UnityEngine.Vector3 direction, float distance);'
mdoc: Member Removed: File='Source/UnityEngine\Physics.xml'; Signature='public static UnityEngine.RaycastHit[] SphereCastAll (UnityEngine.Vector3 origin, float radius, UnityEngine.Vector3 direction, float distance, int layerMask);'
New Type: UnityEngine.Dynamics
Member Added: public Dynamics ();
Updating: UnityEngine.Rigidbody
mdoc: Member Removed: File='Source/UnityEngine\Rigidbody.xml'; Signature='public UnityEngine.CollisionDetectionMode collisionDetectionMode { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Rigidbody.xml'; Signature='public UnityEngine.RigidbodyConstraints constraints { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Rigidbody.xml'; Signature='public bool SweepTest (UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo);'
mdoc: Member Removed: File='Source/UnityEngine\Rigidbody.xml'; Signature='public bool SweepTest (UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, float distance);'
mdoc: Member Removed: File='Source/UnityEngine\Rigidbody.xml'; Signature='public UnityEngine.RaycastHit[] SweepTestAll (UnityEngine.Vector3 direction);'
mdoc: Member Removed: File='Source/UnityEngine\Rigidbody.xml'; Signature='public UnityEngine.RaycastHit[] SweepTestAll (UnityEngine.Vector3 direction, float distance);'
Updating: UnityEngine.RigidbodyInterpolation
Updating: UnityEngine.JointMotor
Updating: UnityEngine.JointSpring
Updating: UnityEngine.JointLimits
Updating: UnityEngine.Joint
Updating: UnityEngine.HingeJoint
Updating: UnityEngine.SpringJoint
Updating: UnityEngine.FixedJoint
Updating: UnityEngine.SoftJointLimit
mdoc: Member Removed: File='Source/UnityEngine\SoftJointLimit.xml'; Signature='public float bounciness { set; get; }'
Updating: UnityEngine.JointDriveMode
Updating: UnityEngine.JointProjectionMode
Updating: UnityEngine.JointDrive
Updating: UnityEngine.CharacterJoint
Updating: UnityEngine.ConfigurableJointMotion
Updating: UnityEngine.RotationDriveMode
Updating: UnityEngine.ConfigurableJoint
mdoc: Member Removed: File='Source/UnityEngine\ConfigurableJoint.xml'; Signature='public UnityEngine.Vector3 secondaryAxis { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\ConfigurableJoint.xml'; Signature='public bool swapBodies { set; get; }'
Updating: UnityEngine.ConstantForce
Updating: UnityEngine.Collider
mdoc: Member Removed: File='Source/UnityEngine\Collider.xml'; Signature='public bool enabled { set; get; }'
Updating: UnityEngine.BoxCollider
Updating: UnityEngine.SphereCollider
Updating: UnityEngine.MeshCollider
Updating: UnityEngine.CapsuleCollider
Updating: UnityEngine.RaycastCollider
Updating: UnityEngine.WheelFrictionCurve
Updating: UnityEngine.WheelHit
Updating: UnityEngine.WheelCollider
Updating: UnityEngine.RaycastHit
mdoc: Member Removed: File='Source/UnityEngine\RaycastHit.xml'; Signature='public UnityEngine.Vector2 lightmapCoord { get; }'
Updating: UnityEngine.PhysicMaterialCombine
Updating: UnityEngine.PhysicMaterial
mdoc: Member Removed: File='Source/UnityEngine\PhysicMaterial.xml'; Signature='public float bounciness { set; get; }'
Updating: UnityEngine.ContactPoint
Updating: UnityEngine.Collision
Updating: UnityEngine.CollisionFlags
Updating: UnityEngine.ControllerColliderHit
New Type: UnityEngine.ControllerControllerHit
Member Added: public ControllerControllerHit ();
Member Added: public UnityEngine.CharacterController controller { get; }
Member Added: public UnityEngine.CharacterController other { get; }
Updating: UnityEngine.CharacterController
Updating: UnityEngine.TextAsset
Updating: UnityEngine.TerrainCollider
Updating: UnityEngine.TreePrototype
Updating: UnityEngine.DetailRenderMode
Updating: UnityEngine.DetailPrototype
Member Added: public float lightmapFactor { set; get; }
Member Added: public bool grayscaleLighting { set; get; }
Updating: UnityEngine.SplatPrototype
mdoc: Member Removed: File='Source/UnityEngine\SplatPrototype.xml'; Signature='public UnityEngine.Vector2 tileOffset { set; get; }'
New Type: UnityEngine.TerrainChangedFlags
Member Added: Heightmap
Member Added: DetailPrototypes
Member Added: DetailData
Member Added: SplatPrototypes
Member Added: SplatData
Member Added: HeightmapDelayedUpdate
Member Added: FlushImmediately
New Type: UnityEngine.TerrainLighting
Member Added: Vertex
Member Added: Lightmap
Member Added: Pixel
Member Added: RenderModeCount
Updating: UnityEngine.TerrainData
mdoc: Member Removed: File='Source/UnityEngine\TerrainData.xml'; Signature='public void SetDetailResolution (int detailResolution, int resolutionPerPatch);'
Member Added: public void Init (int splatRes, int detailRes, int basemapRes);
Member Added: public int GetAdjustedSize (int size);
Member Added: public void SetHeightsDelayLOD (int xBase, int yBase, float[,] heights);
Member Added: public void ResetDirtyDetails ();
Member Added: public void RecalculateTreePositions ();
Member Added: public void RemoveTreePrototype (int index);
Member Added: public void RemoveDetailPrototype (int index);
Member Added: public UnityEngine.Texture2D GetBaseMap ();
Member Added: public void SetBaseMapDirty ();
Member Added: public UnityEngine.Texture2D lightmap { set; get; }
Member Added: public int mipLevels { get; }
Member Added: public UnityEngine.Texture2D plantAtlasTexture { get; }
Member Added: public int patchCount { get; }
Member Added: public int alphamapTextureCount { get; }
Member Added: public UnityEngine.Texture2D[] alphamapTextures { get; }
Updating: UnityEngine.TreeInstance
Member Added: public float temporaryDistance { set; get; }
Updating: UnityEngine.Terrain
mdoc: Member Removed: File='Source/UnityEngine\Terrain.xml'; Signature='public float detailObjectDensity { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Terrain.xml'; Signature='public UnityEngine.TerrainRenderFlags editorRenderFlags { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Terrain.xml'; Signature='public UnityEngine.Vector3 GetPosition ();'
mdoc: Member Removed: File='Source/UnityEngine\Terrain.xml'; Signature='public int lightmapIndex { set; get; }'
Member Added: public bool m_DrawTreesAndFoliage;
Member Added: public UnityEngine.Terrain.TerrainRenderFlags m_EditorRenderFlags;
Member Added: public void RemoveTrees (UnityEngine.Vector2 position, float radius, int prototypeIndex);
Member Added: public UnityEngine.TerrainLighting lighting { set; get; }
Member Added: public bool useLightmap { set; get; }
New Type: UnityEngine.Terrain/TerrainRenderFlags
Member Added: heightmap
Member Added: trees
Member Added: details
Member Added: all
Updating: UnityEngine.Terrain/TerrainRenderFlags
Updating: UnityEngine.WWW
mdoc: Member Removed: File='Source/UnityEngine\WWW.xml'; Signature='public UnityEngine.AudioClip GetAudioClip (bool threeD);'
mdoc: Member Removed: File='Source/UnityEngine\WWW.xml'; Signature='public UnityEngine.AudioClip GetAudioClip (bool threeD, bool stream);'
mdoc: Member Removed: File='Source/UnityEngine\WWW.xml'; Signature='public UnityEngine.AudioClip GetAudioClip (bool threeD, bool stream, UnityEngine.AudioType audioType);'
mdoc: Member Removed: File='Source/UnityEngine\WWW.xml'; Signature='public System.Collections.Generic.Dictionary<string,string> responseHeaders { get; }'
mdoc: Member Removed: File='Source/UnityEngine\WWW.xml'; Signature='public string text { get; }'
mdoc: Member Removed: File='Source/UnityEngine\WWW.xml'; Signature='public UnityEngine.Texture2D textureNonReadable { get; }'
Updating: UnityEngine.WWWForm
New Type: UnityEngine.WWWTranscoder
Member Added: public WWWTranscoder ();
Member Added: public static string URLEncode (string toEncode);
Member Added: public static string URLEncode (string toEncode, System.Text.Encoding e);
Member Added: public static byte[] URLEncode (byte[] toEncode);
Member Added: public static string QPEncode (string toEncode);
Member Added: public static string QPEncode (string toEncode, System.Text.Encoding e);
Member Added: public static byte[] QPEncode (byte[] toEncode);
Member Added: public static byte[] Encode (byte[] input, byte escapeChar, byte space, byte[] forbidden, bool uppercase);
Member Added: public static string URLDecode (string toEncode);
Member Added: public static string URLDecode (string toEncode, System.Text.Encoding e);
Member Added: public static byte[] URLDecode (byte[] toEncode);
Member Added: public static string QPDecode (string toEncode);
Member Added: public static string QPDecode (string toEncode, System.Text.Encoding e);
Member Added: public static byte[] QPDecode (byte[] toEncode);
Member Added: public static byte[] Decode (byte[] input, byte escapeChar, byte space);
Member Added: public static bool SevenBitClean (string s);
Member Added: public static bool SevenBitClean (string s, System.Text.Encoding e);
Member Added: public static bool SevenBitClean (byte[] input);
Updating: UnityEngine.CacheIndex
Updating: UnityEngine.Caching
mdoc: Member Removed: File='Source/UnityEngine\Caching.xml'; Signature='public static bool Authorize (string name, string domain, long size, string signature);'
mdoc: Member Removed: File='Source/UnityEngine\Caching.xml'; Signature='public static bool Authorize (string name, string domain, int size, int expiration, string signature);'
mdoc: Member Removed: File='Source/UnityEngine\Caching.xml'; Signature='public static bool Authorize (string name, string domain, long size, int expiration, string signature);'
mdoc: Member Removed: File='Source/UnityEngine\Caching.xml'; Signature='public static bool CleanCache ();'
mdoc: Member Removed: File='Source/UnityEngine\Caching.xml'; Signature='public static bool CleanNamedCache (string name);'
mdoc: Member Removed: File='Source/UnityEngine\Caching.xml'; Signature='public static int GetVersionFromCache (string url);'
mdoc: Member Removed: File='Source/UnityEngine\Caching.xml'; Signature='public static bool IsVersionCached (string url, int version);'
mdoc: Member Removed: File='Source/UnityEngine\Caching.xml'; Signature='public static bool MarkAsUsed (string url, int version);'
mdoc: Member Removed: File='Source/UnityEngine\Caching.xml'; Signature='public static long maximumAvailableDiskSpace { set; get; }'
mdoc: Member Removed: File='Source/UnityEngine\Caching.xml'; Signature='public static bool ready { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Caching.xml'; Signature='public static void ResetNoBackupFlag (string url, int version);'
mdoc: Member Removed: File='Source/UnityEngine\Caching.xml'; Signature='public static void SetNoBackupFlag (string url, int version);'
mdoc: Member Removed: File='Source/UnityEngine\Caching.xml'; Signature='public static long spaceFree { get; }'
mdoc: Member Removed: File='Source/UnityEngine\Caching.xml'; Signature='public static long spaceOccupied { get; }'
Member Added: public static void CleanCache ();
Member Added: public static void CleanNamedCache (string name);
Updating: UnityEngine.Application/LogCallback
Updating: UnityEngine.GUI/WindowFunction
Members Added: 7394, Members Deleted: 393
